<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Dimmer.WinUI.Views.PlaylistPages.AllPlaylists"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:behv="clr-namespace:CommunityToolkit.WinUI.Behaviors;assembly=CommunityToolkit.WinUI.Behaviors"
    xmlns:chart="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
    xmlns:cw="clr-namespace:Dimmer.WinUI.Views.CustomViews"
    xmlns:device="clr-namespace:Microsoft.Maui.Devices;assembly=Microsoft.Maui.Essentials"
    xmlns:dimmSearch="clr-namespace:Dimmer.Data.ModelView.DimmerSearch;assembly=Dimmer"
    xmlns:lang="clr-namespace:Dimmer.Resources.Localization;assembly=Dimmer"
    xmlns:local="clr-namespace:Dimmer.WinUI.Views"
    xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
    xmlns:models="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
    xmlns:modelsDb="clr-namespace:Dimmer.Data.Models;assembly=Dimmer"
    xmlns:modeltwo="clr-namespace:Dimmer.WinUI.Utils.Models"
    xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:tql="clr-namespace:Dimmer.DimmerSearch.TQL;assembly=Dimmer"
    xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
    xmlns:vm="clr-namespace:Dimmer.WinUI.ViewModel"
    xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
    x:Name="myPage"
    Title="AllPlaylists"
    x:DataType="vm:BaseViewModelWin"
    BackgroundColor="{AppThemeBinding Light=#F5F5F5,
                                      Dark=transparent}"
    Shell.NavBarIsVisible="False">

    <ContentPage.Resources>
        <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter" />
        <converters:BytesToMegabytesConverter x:Key="FileSizeConverter" />
        <converters:BytesArrayToImageSource x:Key="BytesToImageConverter" />
        <converters:BoolToInverseConverter x:Key="BoolToInverse" />
        <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter" />
        <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter" />
        <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter" />
        <converters:BoolToYesNoConverter x:Key="BoolToYesNo" />
        <converters:VolumeConverter x:Key="VolConverter" />


        <ResourceDictionary>
            <Style TargetType="syncf:SfChip">
                <Setter Property="HeightRequest" Value="60" />
                <Setter Property="TextColor" Value="{AppThemeBinding Dark=#999999, Light=Black}" />
            </Style>
        </ResourceDictionary>


        <DataTemplate x:Key="OGView" x:DataType="models:SongModelView">

            <Border Padding="10" StrokeShape="RoundRectangle 20">
                <Border.GestureRecognizers>
                    <PointerGestureRecognizer x:Name="GlobalColView" PointerPressed="GlobalColView_PointerPressed" />
                </Border.GestureRecognizers>
                <Border.Triggers>
                    <DataTrigger
                        Binding="{Binding IsCurrentPlayingHighlight}"
                        TargetType="Border"
                        Value="True">
                        <Setter Property="StrokeThickness" Value="2" />
                        <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}" />
                    </DataTrigger>

                </Border.Triggers>
                <FlyoutBase.ContextFlyout>
                    <MenuFlyout>
                        <!--<MenuFlyoutItem Text="Blacklist Song" x:Name="BlackListSong"
                                        Clicked="BlackListSong_Clicked"
                                        CommandParameter="{Binding .}"/>-->


                        <!--  Create New Artist for This Song  -->
                        <!--<MenuFlyoutItem Text="Create New Artist for Song"
                            Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CreateArtistAndAssignSongsCommand}"
                            CommandParameter="{Binding .}"/>-->
                        <MenuFlyoutItem
                            x:Name="ViewSongDetails"
                            Clicked="ViewSongDetails_Clicked"
                            Text="View Song Details" />
                        <MenuFlyoutItem
                            Clicked="NavigateToSelectedSongPageContextMenuAsync"
                            IconImageSource="eye.png"
                            Text="{Binding Title, StringFormat='View Song'}">
                            <MenuFlyoutItem.KeyboardAccelerators>
                                <KeyboardAccelerator Key="V" />

                            </MenuFlyoutItem.KeyboardAccelerators>
                        </MenuFlyoutItem>

                        <MenuFlyoutItem
                            x:Name="AddQuickNote"
                            Clicked="OnAddQuickNoteClicked"
                            CommandParameter="Black"
                            IconImageSource="chatdots.png">
                            <MenuFlyoutItem.Text>
                                <MultiBinding StringFormat="{}Add Quick Note to: {0} by {1}">
                                    <Binding Path="Title" />
                                    <Binding Path="ArtistName" />
                                </MultiBinding>
                            </MenuFlyoutItem.Text>
                            <MenuFlyoutItem.KeyboardAccelerators>
                                <KeyboardAccelerator Key="N" Modifiers="None" />
                            </MenuFlyoutItem.KeyboardAccelerators>
                        </MenuFlyoutItem>






                        <MenuFlyoutItem
                            x:Name="ViewArtistMFI"
                            Clicked="QuickSearchArtist_Clicked"
                            CommandParameter="{Binding .}"
                            IconImageSource="artist.png"
                            Text="{Binding OtherArtistsName, StringFormat='Quick View Artist : {0}'}" />
                        <MenuFlyoutItem
                            x:Name="ViewAlbumMFI"
                            Clicked="QuickSearchAlbum_Clicked"
                            CommandParameter="{Binding .}"
                            IconImageSource="albummm.png"
                            Text="{Binding AlbumName, StringFormat='Quick View Album : {0}'}" />
                        <MenuFlyoutItem
                            x:Name="ViewGenreMFI"
                            Clicked="ViewGenreMFI_Clicked"
                            CommandParameter="{Binding .}"
                            IconImageSource="albumm.png"
                            Text="{Binding GenreName, StringFormat='Quick View Genre : {0}'}" />


                        <MenuFlyoutSubItem IconImageSource="settingssliders.png" Text="File Tools">
                            <MenuFlyoutItem
                                Clicked="OnLabelClicked"
                                CommandParameter="OpenFileExp"
                                Text="Open File in Explorer" />
                            <MenuFlyoutItem
                                Clicked="OnLabelClicked"
                                Command="{Binding OpenFileInFolderCommand, Source={RelativeSource AncestorType={x:Type vm:BaseViewModelWin}}}"
                                CommandParameter="{Binding .}"
                                Text="Open File in Folder" />
                            <MenuFlyoutItem
                                Clicked="OnLabelClicked"
                                CommandParameter="DeleteSys"
                                IconImageSource="deletesonginterfacesymbol.png"
                                IsDestructive="True"
                                Text="Delete from system" />
                            <MenuFlyoutItem
                                CommandParameter="SyncShare"
                                IconImageSource="roundtransferhorizontal.png"
                                Text="Sync" />
                        </MenuFlyoutSubItem>
                    </MenuFlyout>
                </FlyoutBase.ContextFlyout>

                <Grid
                    ColumnDefinitions="40,auto,*,*,*,auto,80,80,80"
                    ColumnSpacing="5"
                    RowDefinitions="120">

                    <Grid.GestureRecognizers>

                        <TapGestureRecognizer
                            x:Name="TapGestRec"
                            CommandParameter="{Binding .}"
                            NumberOfTapsRequired="2"
                            Tapped="PlaySongGestRec_Tapped" />
                    </Grid.GestureRecognizers>
                    <Grid.Resources>
                        <Style TargetType="Label">
                            <Setter Property="FontSize" Value="15" />
                        </Style>
                    </Grid.Resources>
                    <Label
                        Grid.Column="0"
                        Text="{Binding TrackNumber, StringFormat='#{0}'}"
                        TextColor="{AppThemeBinding Dark=White,
                                                    Light=Black}"
                        ToolTipProperties.Text="{Binding Title, StringFormat='Title : {0}'}"
                        VerticalOptions="Center">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsFavorite}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="LightPink" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsCurrentPlayingHighlight}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="FontSize" Value="19" />
                                <Setter Property="TextColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsCurrentPlayingHighlight}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=Black}" />
                                <Setter Property="FontAttributes" Value="None" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Border Grid.Column="1" StrokeShape="RoundRectangle 20">
                        <Border.Triggers>
                            <DataTrigger
                                Binding="{Binding SyncLyrics.Length, Converter={converters:CollectionSizeToVisibility}}"
                                TargetType="Border"
                                Value="True">
                                <Setter Property="Stroke" Value="DarkSlateBlue" />
                                <Setter Property="StrokeThickness" Value="3" />

                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding HasSyncedLyrics}"
                                TargetType="Border"
                                Value="False">
                                <Setter Property="Stroke" Value="Transparent" />

                            </DataTrigger>
                        </Border.Triggers>


                        <Grid>

                            <Image
                                IsVisible="{Binding IsFavorite}"
                                Opacity="0.6"
                                Source="heart.png"
                                ZIndex="1" />
                            <Image
                                Aspect="AspectFit"
                                HeightRequest="120"
                                Source="{Binding CoverImagePath}"
                                WidthRequest="120"
                                ZIndex="-1" />

                        </Grid>


                    </Border>

                    <Label
                        Grid.Column="2"
                        HorizontalOptions="Center"
                        HorizontalTextAlignment="Justify"
                        Text="{Binding Title}"
                        ToolTipProperties.Text="{Binding Title, StringFormat='{0} '}"
                        VerticalOptions="Center">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsCurrentPlayingHighlight}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsCurrentPlayingHighlight}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=Black}" />
                                <Setter Property="FontAttributes" Value="None" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <syncf:SfEffectsView
                        x:Name="ArtistsEffectsView"
                        Grid.Column="3"
                        BackgroundColor="Transparent"
                        ToolTipProperties.Text="{Binding ArtistName, StringFormat='Press and Hold Ctrl The Left Click to quickly view Artist {0} '}">
                        <syncf:SfEffectsView.GestureRecognizers>
                            <PointerGestureRecognizer
                                PointerPressedCommandParameter="{Binding OtherArtistsName}"
                                PointerReleased="QuickFilterGest_PointerReleased"
                                PointerReleasedCommandParameter="artist" />
                        </syncf:SfEffectsView.GestureRecognizers>

                        <Label
                            HorizontalTextAlignment="Center"
                            LineBreakMode="WordWrap"
                            Text="{Binding OtherArtistsName}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=White}"
                            VerticalOptions="Center" />
                    </syncf:SfEffectsView>
                    <syncf:SfEffectsView Grid.Column="4">
                        <syncf:SfEffectsView.GestureRecognizers>
                            <PointerGestureRecognizer
                                PointerPressedCommandParameter="{Binding AlbumName}"
                                PointerReleased="QuickFilterGest_PointerReleased"
                                PointerReleasedCommandParameter="album" />
                        </syncf:SfEffectsView.GestureRecognizers>
                        <Label
                            HorizontalTextAlignment="Center"
                            LineBreakMode="TailTruncation"
                            Text="{Binding AlbumName}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=White}"
                            ToolTipProperties.Text="{Binding AlbumName, StringFormat='Press and Hold Ctrl The Left Click to quickly view songs from :{0}'}"
                            VerticalOptions="Center" />
                    </syncf:SfEffectsView>

                    <syncf:SfEffectsView x:Name="ArtistSfEffectsView" Grid.Column="5">

                        <Label
                            HorizontalTextAlignment="Center"
                            LineBreakMode="TailTruncation"
                            Text="{Binding GenreName}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=White}"
                            VerticalOptions="Center" />
                    </syncf:SfEffectsView>



                    <syncf:SfEffectsView Grid.Column="6" ToolTipProperties.Text="{Binding GenreName, StringFormat='Press and Hold Ctrl The Left Click to quickly view songs from :{0}'}">

                        <Label
                            HorizontalTextAlignment="Center"
                            Text="{Binding ReleaseYear}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=WHite}"
                            VerticalOptions="Center" />
                        <FlyoutBase.ContextFlyout>
                            <!--  Reference your well-designed MenuFlyout here  -->
                            <MenuFlyout>
                                <MenuFlyoutItem Text="=" />
                                <MenuFlyoutItem Text="=" />
                                <MenuFlyoutItem Text="&gt;" />
                            </MenuFlyout>

                        </FlyoutBase.ContextFlyout>

                    </syncf:SfEffectsView>
                    <Label
                        Grid.Column="7"
                        HorizontalTextAlignment="Center"
                        Text="{Binding PlayCompletedCount}"
                        TextColor="{AppThemeBinding Light=Black,
                                                    Dark=White}"
                        VerticalOptions="Center" />
                    <syncf:SfEffectsView Grid.Column="8">

                        <Label
                            HorizontalOptions="Center"
                            Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=White}"
                            VerticalOptions="Center" />
                        <syncf:SfEffectsView.GestureRecognizers>
                            <PointerGestureRecognizer
                                PointerPressedCommandParameter="{Binding DurationInSeconds}"
                                PointerReleased="QuickFilterGest_PointerReleased"
                                PointerReleasedCommandParameter="len" />
                        </syncf:SfEffectsView.GestureRecognizers>

                    </syncf:SfEffectsView>
                </Grid>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="Transparent" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="DarkSlateBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Border>
        </DataTemplate>



    </ContentPage.Resources>

    <Grid
        x:Name="contentLabel"
        Grid.Row="1"
        Grid.Column="0"
        ColumnDefinitions="*,*">
        <Grid RowDefinitions="auto,*">
            <HorizontalStackLayout Grid.Row="0" HorizontalOptions="Center">
                <Label Text="{Binding DimmerPlayEventList.Count}" />
                <HorizontalStackLayout>
                    <syncf:SfChip
                        Command="{Binding CleanseDBOfDupeEventsCommand}"
                        Text="Clean"
                        TextColor="{AppThemeBinding Dark=White,
                                                    Light=black}" />
                </HorizontalStackLayout>
            </HorizontalStackLayout>

            <Grid Grid.Row="1">


                <CollectionView Grid.Row="1" ItemsSource="{Binding DimmerPlayEventList}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="models:DimmerPlayEventView">
                            <Grid ColumnDefinitions="*,*,*,*">
                                <Grid.GestureRecognizers>

                                    <TapGestureRecognizer
                                        x:Name="TapGestRec"
                                        CommandParameter="{Binding SongId}"
                                        NumberOfTapsRequired="2"
                                        Tapped="PlaySongGestRec_Tapped" />
                                </Grid.GestureRecognizers>
                                <Label Grid.Column="0" Text="{Binding SongName}" />
                                <Label Grid.Column="1" Text="{Binding PlayTypeStr}" />
                                <Label Grid.Column="2" Text="{Binding PositionInSeconds}" />
                                <Label
                                    Grid.Column="4"
                                    Text="{Binding EventDate, Converter={converters:DatetTimeOffsetToHowLongAgoConverter}}"
                                    ToolTipProperties.Text="{Binding EventDate, StringFormat='{0:ddd mmm yyyy}'}" />

                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>

            </Grid>

        </Grid>

        <Grid Grid.Column="1" RowDefinitions="auto,*">
            <VerticalStackLayout Grid.Row="0">
                <Label Text="G0 R0" />
            </VerticalStackLayout>


            <VerticalStackLayout Grid.Row="1">
                <Label Text="G0 R1" />
            </VerticalStackLayout>
        </Grid>
    </Grid>



</ContentPage>