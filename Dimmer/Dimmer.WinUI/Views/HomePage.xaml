<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Dimmer.WinUI.Views.HomePage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
    xmlns:cw="clr-namespace:Dimmer.WinUI.Views.CustomViews"
    xmlns:lang="clr-namespace:Dimmer.Resources.Localization;assembly=Dimmer"
    xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
    xmlns:models="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
    xmlns:dimmSearch="clr-namespace:Dimmer.Data.ModelView.DimmerSearch;assembly=Dimmer"
    xmlns:modelsDb="clr-namespace:Dimmer.Data.Models;assembly=Dimmer"
    xmlns:modeltwo="clr-namespace:Dimmer.WinUI.Utils.Models"
    xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:chart="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:tql="clr-namespace:Dimmer.DimmerSearch.TQL;assembly=Dimmer"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
    xmlns:vm="clr-namespace:Dimmer.WinUI.ViewModel"
    xmlns:behv ="clr-namespace:CommunityToolkit.WinUI.Behaviors;assembly=CommunityToolkit.WinUI.Behaviors"
    xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
    x:Name="myPage"
    xmlns:local="clr-namespace:Dimmer.WinUI.Views"
                    xmlns:device="clr-namespace:Microsoft.Maui.Devices;assembly=Microsoft.Maui.Essentials"
Shell.FlyoutBehavior="Locked"
    Title="HomePage"
    x:DataType="vm:BaseViewModelWin"
    BackgroundColor="{AppThemeBinding Light=#F5F5F5, Dark=transparent}"
    
    Shell.NavBarIsVisible="False">

    <ContentPage.Resources>
        <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter" />
        <converters:BytesToMegabytesConverter x:Key="FileSizeConverter" />
        <converters:BytesArrayToImageSource x:Key="BytesToImageConverter" />
        <converters:BoolToInverseConverter x:Key="BoolToInverse" />
        <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter" />
        <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter" />
        <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter" />
        <converters:BoolToYesNoConverter x:Key="BoolToYesNo" />
        <converters:VolumeConverter x:Key="VolConverter" />
     
        
        <ResourceDictionary>
            <Style TargetType="syncf:SfChip" >
                <Setter Property="HeightRequest" Value="60"/>
                <Setter Property="TextColor" Value="{AppThemeBinding Dark=#999999, Light=Black}"/>
            </Style>
        </ResourceDictionary>
       

        <DataTemplate  x:Key="OGView" x:DataType="models:SongModelView">
            
            <Border Padding="10" StrokeShape="RoundRectangle 20">
                <Border.GestureRecognizers>
                    <PointerGestureRecognizer
                        x:Name="GlobalColView"
                        PointerPressed="GlobalColView_PointerPressed"
                        >
                        
                    </PointerGestureRecognizer>
                </Border.GestureRecognizers>
                <FlyoutBase.ContextFlyout >
                    <MenuFlyout>
                        <!--<MenuFlyoutItem Text="Blacklist Song" x:Name="BlackListSong"
                                        Clicked="BlackListSong_Clicked" 
                                        CommandParameter="{Binding .}"/>-->

                 
                        <!-- Create New Artist for This Song -->
                        <!--<MenuFlyoutItem Text="Create New Artist for Song" 
                            Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CreateArtistAndAssignSongsCommand}" 
                            CommandParameter="{Binding .}"/>-->
                        <MenuFlyoutItem Text="View Song Details" 
x:Name="ViewSongDetails" 
                                    Clicked="ViewSongDetails_Clicked"
                                            />
                        <MenuFlyoutItem 
                IconImageSource="eye.png"
               Text="{Binding Title, StringFormat='View Song'}"
    Clicked="NavigateToSelectedSongPageContextMenuAsync">
                            <MenuFlyoutItem.KeyboardAccelerators>
                                <KeyboardAccelerator
Key="V" />

                            </MenuFlyoutItem.KeyboardAccelerators>
                        </MenuFlyoutItem>

                        <MenuFlyoutItem 
Clicked="OnAddQuickNoteClicked" x:Name="AddQuickNote"
CommandParameter="Black" IconImageSource="chatdots.png"
                    >
                            <MenuFlyoutItem.Text>
                                <MultiBinding StringFormat="{}Add Quick Note to: {0} by {1}">
                                    <Binding Path="Title" />
                                    <Binding Path="ArtistName" />
                                </MultiBinding>
                            </MenuFlyoutItem.Text>
                            <MenuFlyoutItem.KeyboardAccelerators>
                                <KeyboardAccelerator
                 Key="N"
                 Modifiers="None"
                  />
                            </MenuFlyoutItem.KeyboardAccelerators>
                        </MenuFlyoutItem>






                        <MenuFlyoutItem 
                     Text="{Binding OtherArtistsName,StringFormat='Quick View Artist : {0}'}"
                               IconImageSource="artist.png"
                     CommandParameter="{Binding .}"
                     Clicked="QuickSearchArtist_Clicked"
                     x:Name="ViewArtistMFI"/>
                        <MenuFlyoutItem 
                     Text="{Binding AlbumName,StringFormat='Quick View Album : {0}'}"
                                IconImageSource="albummm.png"
                     CommandParameter="{Binding .}"
                     Clicked="QuickSearchAlbum_Clicked"
                     x:Name="ViewAlbumMFI"/>
                        <MenuFlyoutItem 
                     Text="{Binding GenreName,StringFormat='Quick View Genre : {0}'}"
                                IconImageSource="albumm.png"
                     CommandParameter="{Binding .}"
                     Clicked="ViewGenreMFI_Clicked"
                     x:Name="ViewGenreMFI"/>


                        <MenuFlyoutSubItem Text="File Tools"
                                               IconImageSource="settingssliders.png">
                            <MenuFlyoutItem Text="Open File in Explorer"
    Clicked="OnLabelClicked"
    CommandParameter="OpenFileExp" />
                            <MenuFlyoutItem Text="Open File in Folder"
    Clicked="OnLabelClicked" CommandParameter="{Binding .}"
                  Command="{Binding OpenFileInFolderCommand,Source={RelativeSource AncestorType={x:Type vm:BaseViewModelWin}}}"
/>
                            <MenuFlyoutItem Text="Delete from system"
    Clicked="OnLabelClicked" IconImageSource="deletesonginterfacesymbol.png"
    IsDestructive="True"  CommandParameter="DeleteSys" />
                            <MenuFlyoutItem Text="Sync"
     IconImageSource="roundtransferhorizontal.png"
    CommandParameter="SyncShare" />
                        </MenuFlyoutSubItem>
                    </MenuFlyout>
                </FlyoutBase.ContextFlyout>
                <Border.Triggers>
                    <DataTrigger
                         Binding="{Binding IsCurrentPlayingHighlight}"
                         TargetType="Border"
                         Value="True">
                        <Setter Property="StrokeThickness" Value="2"/>
                        <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}"/>
                    </DataTrigger>

                </Border.Triggers>

                <Grid RowDefinitions="120"
                                ColumnDefinitions="40,auto,*,*,*,auto,80,80,80"
                                ColumnSpacing="5">

                    <Grid.GestureRecognizers>

                        <TapGestureRecognizer
                                        x:Name="TapGestRec"
                                        CommandParameter="{Binding .}"
                                        NumberOfTapsRequired="2"
                                        Tapped="PlaySongGestRec_Tapped" />
                    </Grid.GestureRecognizers>
                    <Grid.Resources>
                        <Style TargetType="Label">
                            <Setter Property="FontSize" Value="15" />
                        </Style>
                    </Grid.Resources>
                        <Label Grid.Column="0" 
                                           ToolTipProperties.Text="{Binding Title,StringFormat='Title : {0}'}"
                            TextColor="{AppThemeBinding Dark=White, Light=Black}"
                  Text="{Binding TrackNumber,StringFormat='#{0}'}"
                  VerticalOptions="Center">
                            <Label.Triggers>
                                <DataTrigger
                          Binding="{Binding IsFavorite}"
                          TargetType="Label"
                          Value="True">
                                    <Setter Property="TextColor" Value="LightPink"/>
                                </DataTrigger>
                                <DataTrigger
                          Binding="{Binding IsCurrentPlayingHighlight}"
                          TargetType="Label"
                          Value="True">
                                    <Setter Property="FontSize" Value="19" />
                                    <Setter Property="TextColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                    <Setter Property="FontAttributes" Value="Bold" />
                                </DataTrigger>
                                <DataTrigger
                          Binding="{Binding IsCurrentPlayingHighlight}"
                          TargetType="Label"
                          Value="False">
                                    <Setter Property="FontSize" Value="15" />
                                    <Setter Property="TextColor" Value="{AppThemeBinding Dark=White,Light=Black}" />
                                    <Setter Property="FontAttributes" Value="None" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>

                        <Border StrokeShape="RoundRectangle 20" Grid.Column="1"
                                            >
                            <Border.Triggers>
                                <DataTrigger
Binding="{Binding SyncLyrics.Length,Converter={converters:CollectionSizeToVisibility}}"
TargetType="Border"
Value="True">
                                    <Setter Property="Stroke" Value="DarkSlateBlue" />
                                    <Setter Property="StrokeThickness" Value="3" />

                                </DataTrigger>
                                <DataTrigger
Binding="{Binding HasSyncedLyrics}"
TargetType="Border"
Value="False">
                                    <Setter Property="Stroke" Value="Transparent" />

                                </DataTrigger>
                            </Border.Triggers>


                            <Grid>

                                <Image Source="heart.png"
                                       IsVisible="{Binding IsFavorite}"/>
                                <Image Source="{Binding CoverImagePath}"
                                      HeightRequest="120"
                                       WidthRequest="120" Aspect="AspectFit"/>

                            </Grid>


                        </Border>

                    <Label  Grid.Column="2" HorizontalTextAlignment="Justify"
                            HorizontalOptions="Center"
                             ToolTipProperties.Text="{Binding Title, StringFormat='{0} '}"

                        Text="{Binding Title}"
                            
                                        VerticalOptions="Center">
                        <Label.Triggers>
                            <DataTrigger
                                                Binding="{Binding IsCurrentPlayingHighlight}"
                                                TargetType="Label"
                                                Value="True">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                            <DataTrigger
                                                Binding="{Binding IsCurrentPlayingHighlight}"
                                                TargetType="Label"
                                                Value="False">
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White,Light=Black}" />
                                <Setter Property="FontAttributes" Value="None" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <syncf:SfEffectsView Grid.Column="3"
                                    x:Name="ArtistsEffectsView"
                                    
                                    BackgroundColor="Transparent"
                                    ToolTipProperties.Text="{Binding ArtistName, StringFormat='Press and Hold Ctrl The Left Click to quickly view Artist {0} '}">
                        <syncf:SfEffectsView.GestureRecognizers>
                            <PointerGestureRecognizer
                                            PointerPressedCommandParameter="{Binding OtherArtistsName}"
                                            PointerReleased="QuickFilterGest_PointerReleased"
                                            PointerReleasedCommandParameter="artist" />
                        </syncf:SfEffectsView.GestureRecognizers>

                        <Label
                                        HorizontalTextAlignment="Center"
                                        LineBreakMode="WordWrap"
                            TextColor="{AppThemeBinding Light=Black,Dark=White}"
                                        Text="{Binding OtherArtistsName}"
                                        VerticalOptions="Center" />
                    </syncf:SfEffectsView>
                    <syncf:SfEffectsView    Grid.Column="4">
                        <syncf:SfEffectsView.GestureRecognizers>
                            <PointerGestureRecognizer
                                            PointerPressedCommandParameter="{Binding AlbumName}"
                                            PointerReleased="QuickFilterGest_PointerReleased"
                                            PointerReleasedCommandParameter="album" />
                        </syncf:SfEffectsView.GestureRecognizers>
                        <Label
                                        LineBreakMode="TailTruncation"
                                        Text="{Binding AlbumName}"
                                        TextColor="{AppThemeBinding Light=Black,Dark=White}"
                                        HorizontalTextAlignment="Center"
                                        ToolTipProperties.Text="{Binding AlbumName, StringFormat='Press and Hold Ctrl The Left Click to quickly view songs from :{0}'}"
                                        VerticalOptions="Center" />
                    </syncf:SfEffectsView>

                    <syncf:SfEffectsView x:Name="ArtistSfEffectsView" Grid.Column="5">

                        <Label
                                        TextColor="{AppThemeBinding Light=Black,Dark=White}"
                                        HorizontalTextAlignment="Center"
                                        LineBreakMode="TailTruncation"
                                        Text="{Binding GenreName}"
                                        VerticalOptions="Center" />
                    </syncf:SfEffectsView>



                    <syncf:SfEffectsView Grid.Column="6" ToolTipProperties.Text="{Binding GenreName, StringFormat='Press and Hold Ctrl The Left Click to quickly view songs from :{0}'}">
                        
                        <Label
                            TextColor="{AppThemeBinding Light=Black,Dark=WHite}"
                                        HorizontalTextAlignment="Center"
                                        Text="{Binding ReleaseYear}"
                                        VerticalOptions="Center" />
                            <FlyoutBase.ContextFlyout>
                                <!-- Reference your well-designed MenuFlyout here -->
                            <MenuFlyout >
                                <MenuFlyoutItem Text="="/>
                                <MenuFlyoutItem Text="="/>
                                <MenuFlyoutItem Text=">"/>
                            </MenuFlyout>

                        </FlyoutBase.ContextFlyout>

                    </syncf:SfEffectsView>
                    <Label Grid.Column="7" TextColor="{AppThemeBinding Light=Black,Dark=White}"
                  HorizontalTextAlignment="Center"
                  Text="{Binding PlayCompletedCount}"
                  VerticalOptions="Center" />
                    <syncf:SfEffectsView Grid.Column="8">

                        <Label TextColor="{AppThemeBinding Light=Black,Dark=White}"
                                        HorizontalOptions="Center"
                                        Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}"
                                        VerticalOptions="Center" />
                        <syncf:SfEffectsView.GestureRecognizers>
                            <PointerGestureRecognizer
                                            PointerPressedCommandParameter="{Binding DurationInSeconds}"
                                            PointerReleased="QuickFilterGest_PointerReleased"
                                            PointerReleasedCommandParameter="len" />
                        </syncf:SfEffectsView.GestureRecognizers>

                    </syncf:SfEffectsView>
                </Grid>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="Transparent" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="DarkSlateBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Border>
        </DataTemplate>



    </ContentPage.Resources>





    <Grid RowDefinitions="auto,*" BackgroundColor="{AppThemeBinding Light=#999999}">

        <Grid.GestureRecognizers>

            
            <DropGestureRecognizer
                x:Name="SongDropRecognizer"
                AllowDrop="True"
                DragLeave="SongDropRecognizer_DragLeave"
                DragOver="SongDropRecognizer_DragOver"
                Drop="SongDropRecognizer_Drop"
                />
        </Grid.GestureRecognizers>


        <VerticalStackLayout Grid.Row="0" ZIndex="0" >



            <VerticalStackLayout x:Name="AdvSearch" 
                Padding="5" Spacing="5">
                <syncf:SfChip
                    IsVisible="False" 
                    Text="Advanced Search (TQL)"
                    ToolTipProperties.Text="Start a Topaz Query using TQL" />
                <Label FontSize="19" 
                               HorizontalTextAlignment="Center"
                               Text="{Binding CurrentTqlQuery, StringFormat='Current Query : {0}'}" />

                <Grid
                ColumnDefinitions="*,auto,auto"
                ColumnSpacing="5">

                    <VerticalStackLayout x:Name="TqlView" Grid.Row="1" >
                        <Border VerticalOptions="End" Margin="10" Padding="10" IsVisible="False">
                            <HorizontalStackLayout Spacing="10" HorizontalOptions="Center">
                                <!-- These commands expect an IEnumerable<SongModelView> -->
                                <Button Text="Copy" x:Name="CopySongs" Clicked="CopySongs_Clicked"/>
                                <Button Text="Move" />
                                <Button Text="Delete" x:Name="DeleteSongs"
                                        Clicked="DeleteSongs_Clicked" TextColor="White"/>
                            </HorizontalStackLayout>
                        </Border>
                        <Button Text="Search" BorderWidth="2" 
                    x:Name="SearchBtn" BackgroundColor="Transparent"
                    windows:SearchBar.IsSpellCheckEnabled="True" TextColor="{AppThemeBinding Light=Black,Dark=WHite}"
                    windows:VisualElement.AccessKey="F"
                    windows:VisualElement.AccessKeyPlacement="Right"
                                 Clicked="SearchSongSB_Clicked"
                                 HorizontalOptions="Start"
                               Loaded="SearchBtn_Loaded"  >
                           
                        </Button>
                        <HorizontalStackLayout>

                        </HorizontalStackLayout>
                        <Border IsVisible="{Binding IsCreatingSegment}"
        BackgroundColor="#A0000000"
        Padding="0"
        StrokeThickness="0"
        VerticalOptions="Fill"
        HorizontalOptions="Fill">

                            <Border VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="400">
                                <VerticalStackLayout Spacing="15">
                                    <Label Text="Create Song Segment" FontSize="20" FontAttributes="Bold" HorizontalOptions="Center"/>

                                    <!-- Segment Name -->
                                    <Entry Placeholder="Segment Name" Text="{Binding NewSegmentName}"/>

                                    <!-- Start Time -->
                                    <Grid ColumnDefinitions="*,Auto">
                                        <Entry Grid.Column="0" Placeholder="Start (seconds)" Text="{Binding NewSegmentStart}" Keyboard="Numeric"/>
                                        <Button Grid.Column="1" Text="&#xE15C;" 
                        Command="{Binding SetSegmentStartFromCurrentCommand}" 
                        
                        ToolTipProperties.Text="Set to Current Time"
                        Margin="5,0,0,0"/>
                                    </Grid>

                                    <!-- End Time -->
                                    <Grid ColumnDefinitions="*,Auto">
                                        <Entry Grid.Column="0" Placeholder="End (seconds)" Text="{Binding NewSegmentEnd}" Keyboard="Numeric"/>
                                        <Button Grid.Column="1" Text="&#xE15C;" 
                        Command="{Binding SetSegmentEndFromCurrentCommand}" 
                        ToolTipProperties.Text="Set to Current Time"
                        Margin="5,0,0,0"/>
                                    </Grid>

                                    <!-- Action Buttons -->
                                    <HorizontalStackLayout Spacing="10" HorizontalOptions="End">
                                        <Button Text="Cancel" Command="{Binding CancelCreateSegmentCommand}" />
                                        <Button Text="Save Segment" Command="{Binding SaveNewSegmentCommand}" />
                                    </HorizontalStackLayout>

                                </VerticalStackLayout>
                            </Border>
                        </Border>
                    </VerticalStackLayout>
                    <HorizontalStackLayout Grid.Column="2" Spacing="10">

                      

                    </HorizontalStackLayout>
                </Grid>

            </VerticalStackLayout>



            <Grid Grid.Row="0"
                       Margin="10,0"
                      ColumnDefinitions="auto,*,auto">

                <VerticalStackLayout
                        Spacing="10"
                        x:Name="LeftUtilSide"
                        Grid.Column="0">
                    <HorizontalStackLayout>




                        <Button ImageSource="hamburgermenu.png"
                                    HeightRequest="50"
                                    WidthRequest="50"
                                    Clicked="ChangeLayout_Clicked"
                                    IsVisible="False"
                                    windows:VisualElement.AccessKey="C"
                                    BackgroundColor="Transparent"/>
                    </HorizontalStackLayout>
                    <Label FontSize="21" 
HorizontalOptions="Center" FontAttributes="Italic"
                                       TextColor="{AppThemeBinding Light=Black, Dark=#999999}"
Text="{Binding PlaybackQueue.Count, StringFormat='Songs : {0}'}" />
                </VerticalStackLayout>
                <Border HorizontalOptions="Center" x:Name="LyricsBoxView" Grid.Column="1">



                </Border>

                <HorizontalStackLayout
                        x:Name="RightUtilSide"
                        Grid.Column="2" HorizontalOptions="Center" Spacing="10">

                    <VerticalStackLayout Spacing="10">
                        <VerticalStackLayout.Resources>
                            <ResourceDictionary>
                                <Style TargetType="Button">
                                    <Setter Property="BorderWidth" Value="1"/>
                                    <Setter Property="HeightRequest" Value="34"/>
                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                </Style>
                            </ResourceDictionary>
                        </VerticalStackLayout.Resources>

                        <Button
                        x:Name="ScrollToSong"
                        windows:VisualElement.AccessKey="S"
                        windows:VisualElement.AccessKeyPlacement="Bottom"
                        Clicked="ScrollToSong_Clicked"
                        BackgroundColor="Transparent"
                        ImageSource="eye.png"
                        BorderWidth="1"
                                    WidthRequest="58"
                        
                        />
                    </VerticalStackLayout>
                    <ProgressBar
                        x:Name="MyProgressBar"
                        IsVisible="False"
                        WidthRequest="80" />
                    <Label
                        x:Name="MyProgressLabel"
                        IsVisible="False"
                        WidthRequest="180" />



                        <Button
                        x:Name="EXout"
                        windows:VisualElement.AccessKey="E"
                        windows:VisualElement.AccessKeyPlacement="Bottom"
                        Clicked="OnNavigateToExperimentalPage"
                        BackgroundColor="Transparent"
                        BorderWidth="1"
                                    Text="E"
                                    TextColor="{AppThemeBinding Dark=WHite,Light=Black}"
                                                WidthRequest="58"
HeightRequest="50"
                        
                        />

                        <Button
                        x:Name="MoreBtn"
                            ImageSource="more1.png"
                        windows:VisualElement.AccessKey="E"
                        windows:VisualElement.AccessKeyPlacement="Bottom"
                        Clicked="OnNavigateToExperimentalPage"
                        BackgroundColor="Transparent"
                        BorderWidth="1"
                                    Text="E"
                                    TextColor="{AppThemeBinding Dark=WHite,Light=Black}"
                                                WidthRequest="58"
HeightRequest="50"
                        
                        />
                        <Button Text="Shuffle" BackgroundColor="Transparent" BorderWidth="1" HeightRequest="50"
                            Command="{Binding ToggleShuffleCommand}"
                            />
                    <Button Text="G. Album" ToolTipProperties.Text="Group By Album"
                            Command="{Binding GroupSongsInQueueByAlbumCommand}"
                          BackgroundColor="Transparent" BorderWidth="1" HeightRequest="50"  />
                    <Button Text="G. Artist" ToolTipProperties.Text="Group By Artist"
                            Command="{Binding GroupSongsInQueueByArtistCommand}"
                           BackgroundColor="Transparent" BorderWidth="1" HeightRequest="50" />
                    <Button Text="G. Genre" ToolTipProperties.Text="Group By Genre"
                            Command="{Binding GroupSongsInQueueByGenreCommand}"
                        BackgroundColor="Transparent" BorderWidth="1" HeightRequest="50"    />
                    <Button Text="O. Album" ToolTipProperties.Text="Order By Album"
                            Command="{Binding OrderQueueByAlbumCommand}"
                            BackgroundColor="Transparent" BorderWidth="1" HeightRequest="50">
                        
                        
                    </Button>
                    <Button Text="O. Artist" ToolTipProperties.Text="Order By Artist"
                          BackgroundColor="Transparent" BorderWidth="1" HeightRequest="50"  Command="{Binding OrderQueueByArtistCommand}"
                            />
                    <Button Text="O. Title" ToolTipProperties.Text="Order By Title"
                          BackgroundColor="Transparent" BorderWidth="1" HeightRequest="50"  Command="{Binding OrderQueueByTitleCommand}"
                            />
                </HorizontalStackLayout>

            </Grid>

        </VerticalStackLayout>




        <Grid RowDefinitions="*" Grid.Row="1" RowSpacing="5" x:Name="GridSongsColView">


                <CollectionView Grid.Row="1"
                        x:Name="SongsColView"
                        EmptyView="No Songs.." Scrolled="SongsColView_Scrolled"
                            ScrollToRequested="SongsColView_ScrollToRequested"
                        IsVisible="True"
                        Loaded="MainSongsColView_Loaded" 
                            SelectionMode="Single"
                            SelectedItem="{Binding SelectedSong}"
                            ItemsSource="{Binding PlaybackQueue}"
                     VerticalOptions="Start"
                                 ItemTemplate="{StaticResource OGView}">
                </CollectionView>


        </Grid>

        <syncf:SfPopup x:Name="MainPagePopup" x:FieldModifier="Public"
                       IsFullScreen="False"
                       VerticalOptions="Center"
                       HorizontalOptions="Center"
                       AppearanceMode="TwoButton"
                       ShowCloseButton="True"
                       ShowFooter="True"
                       ShowHeader="True"
                       ShowOverlayAlways="True"
                       AutoSizeMode="Both"
                       >
            <syncf:SfPopup.HeaderTemplate>
                <DataTemplate x:DataType="vm:BaseViewModelWin">
                    <VerticalStackLayout>
                        <Label Text="{Binding PopUpHeaderText}" />
                    </VerticalStackLayout>
                </DataTemplate>
            </syncf:SfPopup.HeaderTemplate>

            <syncf:SfPopup.ContentTemplate>
                <DataTemplate>

                    <VerticalStackLayout>
                        <Label Text="Details "/>
                    </VerticalStackLayout>
                </DataTemplate>
            </syncf:SfPopup.ContentTemplate>
        
        </syncf:SfPopup>
        
    </Grid>
   

</ContentPage>