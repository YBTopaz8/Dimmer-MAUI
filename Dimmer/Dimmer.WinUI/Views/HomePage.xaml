<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Dimmer.WinUI.Views.HomePage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:behv="clr-namespace:CommunityToolkit.WinUI.Behaviors;assembly=CommunityToolkit.WinUI.Behaviors"
    xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
    xmlns:cw="clr-namespace:Dimmer.WinUI.Views.CustomViews"
    xmlns:device="clr-namespace:Microsoft.Maui.Devices;assembly=Microsoft.Maui.Essentials"
    xmlns:dimmSearch="clr-namespace:Dimmer.Data.ModelView.DimmerSearch;assembly=Dimmer"
    xmlns:lang="clr-namespace:Dimmer.Resources.Localization;assembly=Dimmer"
    xmlns:local="clr-namespace:Dimmer.WinUI.Views"
    xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
    xmlns:models="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
    xmlns:modelsDb="clr-namespace:Dimmer.Data.Models;assembly=Dimmer"
    xmlns:modeltwo="clr-namespace:Dimmer.WinUI.Utils.Models"
    xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:tql="clr-namespace:Dimmer.DimmerSearch.TQL;assembly=Dimmer"
    xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
    xmlns:vm="clr-namespace:Dimmer.WinUI.ViewModel"
    xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
    x:Name="myPage"
    Title="HomePage"
    x:DataType="vm:BaseViewModelWin"
    BackgroundColor="{AppThemeBinding Light=#F5F5F5,
                                      Dark=transparent}"
    Shell.FlyoutBehavior="Locked"
    Shell.NavBarIsVisible="False">

    <ContentPage.Resources>
        <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter" />
        <converters:BytesToMegabytesConverter x:Key="FileSizeConverter" />
        <converters:BytesArrayToImageSource x:Key="BytesToImageConverter" />
        <converters:BoolToInverseConverter x:Key="BoolToInverse" />
        <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter" />
        <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter" />
        <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter" />
        <converters:BoolToYesNoConverter x:Key="BoolToYesNo" />
        <converters:VolumeConverter x:Key="VolConverter" />


        <ResourceDictionary>
            <Style TargetType="syncf:SfChip">
                <Setter Property="HeightRequest" Value="60" />
                <Setter Property="TextColor" Value="{AppThemeBinding Dark=#999999, Light=Black}" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsPlaying}"
                        TargetType="syncf:SfChip"
                        Value="True">
                        <Setter Property="StrokeThickness" Value="1" />
                        <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}" />

                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding IsPlaying}"
                        TargetType="syncf:SfChip"
                        Value="False">
                        <Setter Property="StrokeThickness" Value="0" />
                        <Setter Property="Stroke" Value="Transparent" />

                    </DataTrigger>
                </Style.Triggers>
            </Style>



        </ResourceDictionary>


        <DataTemplate x:Key="OGView" x:DataType="models:SongModelView">

            <Border Padding="10" StrokeShape="RoundRectangle 20">
                <Border.GestureRecognizers>
                    <PointerGestureRecognizer x:Name="GlobalColView" PointerPressed="GlobalColView_PointerPressed" />
                </Border.GestureRecognizers>
                <Border.Triggers>
                    <DataTrigger
                        Binding="{Binding IsCurrentPlayingHighlight}"
                        TargetType="Border"
                        Value="True">
                        <Setter Property="StrokeThickness" Value="2" />
                        <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}" />
                    </DataTrigger>

                </Border.Triggers>

                <Grid
                    ColumnDefinitions="40,auto,*,*,*,auto,80,50,50,50"
                    ColumnSpacing="5"
                    RowDefinitions="120">
                    <Grid.GestureRecognizers>

                        <TapGestureRecognizer
                            x:Name="TapGestRec"
                            CommandParameter="{Binding .}"
                            NumberOfTapsRequired="2"
                            Tapped="PlaySongGestRec_Tapped" />
                    </Grid.GestureRecognizers>
                    <Grid.Resources>
                        <Style TargetType="Label">
                            <Setter Property="FontSize" Value="15" />


                            <Setter Property="HorizontalOptions" Value="Center" />
                            <Setter Property="HorizontalTextAlignment" Value="Center" />
                            <Setter Property="VerticalTextAlignment" Value="Center" />
                            <Setter Property="VerticalOptions" Value="Center" />

                        </Style>
                    </Grid.Resources>
                    <Label
                        Grid.Column="0"
                        Text="{Binding TrackNumber, StringFormat='#{0}'}"
                        TextColor="{AppThemeBinding Dark=White,
                                                    Light=Black}"
                        ToolTipProperties.Text="{Binding Title, StringFormat='Title : {0}'}"
                        VerticalOptions="Center">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsFavorite}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="LightPink" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsCurrentPlayingHighlight}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="FontSize" Value="19" />
                                <Setter Property="TextColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsCurrentPlayingHighlight}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=Black}" />
                                <Setter Property="FontAttributes" Value="None" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Border Grid.Column="1" StrokeShape="RoundRectangle 20">
                        <Border.Triggers>
                            <DataTrigger
                                Binding="{Binding SyncLyrics.Length, Converter={converters:CollectionSizeToVisibility}}"
                                TargetType="Border"
                                Value="True">
                                <Setter Property="Stroke" Value="DarkSlateBlue" />
                                <Setter Property="StrokeThickness" Value="3" />

                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding HasSyncedLyrics}"
                                TargetType="Border"
                                Value="False">
                                <Setter Property="Stroke" Value="Transparent" />

                            </DataTrigger>
                        </Border.Triggers>


                        <Grid>

                            <Image
                                IsVisible="{Binding IsFavorite}"
                                Opacity="0.6"
                                Source="heart.png"
                                ZIndex="1" />
                            <ImageButton
                                x:Name="SongCoverImage"
                                Aspect="AspectFit"
                                Clicked="SongCoverImage_Clicked"
                                HeightRequest="120"
                                Source="{Binding CoverImagePath}"
                                WidthRequest="120"
                                ZIndex="-1" />

                        </Grid>


                    </Border>

                    <Label
                        Grid.Column="2"
                        HorizontalOptions="Center"
                        HorizontalTextAlignment="Justify"
                        Text="{Binding Title}"
                        ToolTipProperties.Text="{Binding Title, StringFormat='{0} '}"
                        VerticalOptions="Center">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsCurrentPlayingHighlight}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsCurrentPlayingHighlight}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=Black}" />
                                <Setter Property="FontAttributes" Value="None" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <syncf:SfEffectsView
                        x:Name="ArtistsEffectsView"
                        Grid.Column="3"
                        BackgroundColor="Transparent"
                        ToolTipProperties.Text="{Binding ArtistName, StringFormat='Press and Hold Ctrl The Left Click to quickly view Artist {0} '}">


                        <Label
                            LineBreakMode="WordWrap"
                            Text="{Binding OtherArtistsName}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=White}" />
                    </syncf:SfEffectsView>
                    <syncf:SfEffectsView Grid.Column="4">
                        <Label
                            HorizontalTextAlignment="Center"
                            LineBreakMode="TailTruncation"
                            Text="{Binding AlbumName}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=White}"
                            ToolTipProperties.Text="{Binding AlbumName, StringFormat='Press and Hold Ctrl The Left Click to quickly view songs from :{0}'}"
                            VerticalOptions="Center" />
                    </syncf:SfEffectsView>

                    <syncf:SfEffectsView x:Name="ArtistSfEffectsView" Grid.Column="5">

                        <Label
                            HorizontalTextAlignment="Center"
                            LineBreakMode="TailTruncation"
                            Text="{Binding GenreName}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=White}"
                            VerticalOptions="Center" />
                    </syncf:SfEffectsView>



                    <syncf:SfEffectsView Grid.Column="6" ToolTipProperties.Text="{Binding GenreName, StringFormat='Press and Hold Ctrl The Left Click to quickly view songs from :{0}'}">

                        <Label
                            HorizontalTextAlignment="Center"
                            Text="{Binding ReleaseYear}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=WHite}"
                            VerticalOptions="Center" />
                        <FlyoutBase.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="=" />
                                <MenuFlyoutItem Text="=" />
                                <MenuFlyoutItem Text="&gt;" />
                            </MenuFlyout>

                        </FlyoutBase.ContextFlyout>

                    </syncf:SfEffectsView>
                    <Label
                        Grid.Column="7"
                        HorizontalTextAlignment="Center"
                        Text="{Binding PlayCompletedCount}"
                        TextColor="{AppThemeBinding Light=Black,
                                                    Dark=White}"
                        VerticalOptions="Center" />
                    <Label
                        Grid.Column="8"
                        HorizontalTextAlignment="Center"
                        Text="{Binding FileFormat}"
                        TextColor="{AppThemeBinding Light=Black,
                                                    Dark=White}"
                        VerticalOptions="Center" />
                    <syncf:SfEffectsView Grid.Column="9">

                        <Label
                            HorizontalOptions="Center"
                            Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=White}"
                            VerticalOptions="Center" />

                    </syncf:SfEffectsView>
                </Grid>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="Transparent" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="DarkSlateBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Border>
        </DataTemplate>



    </ContentPage.Resources>


    <Grid
        Margin="5"
        RowDefinitions="*,auto"
        RowSpacing="5">
        <Grid
            Grid.Row="0"
            BackgroundColor="{AppThemeBinding Light=#999999}"
            RowDefinitions="auto,*">
            <VerticalStackLayout
                Grid.Row="0"
                Margin="10,5"
                BackgroundColor="Transparent">
                <Label
                    HorizontalTextAlignment="Center"
                    LineBreakMode="WordWrap"
                    Text="{Binding LatestAppLog.Log}" />
            </VerticalStackLayout>
            <syncf:SfTabView
                x:Name="ShellTabView"
                Grid.Row="1"
                EnableSwiping="False"
                SelectedIndex="{Binding ShellTabIndex}"
                SelectionChanging="ShellTabView_SelectionChanging"
                TabBarHeight="0"
                TabBarPlacement="Top">
                <syncf:SfTabItem x:Name="MediaControlsView" x:FieldModifier="Public">
                    <syncf:SfTabItem.Content>

                        <ScrollView x:Name="SideBarScrollView">




                            <VerticalStackLayout
                                x:Name="BottomLeft"
                                Grid.Row="1"
                                Margin="10,10"
                                BackgroundColor="Transparent"
                                HorizontalOptions="Start"
                                Spacing="5">
                                <HorizontalStackLayout HorizontalOptions="End" IsVisible="True">
                                    <ImageButton
                                        x:Name="MoreIcon"
                                        BackgroundColor="Transparent"
                                        Clicked="MoreIcon_Clicked"
                                        HeightRequest="65"
                                        Source="more1.png"
                                        WidthRequest="65">
                                        <FlyoutBase.ContextFlyout>
                                            <MenuFlyout>
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="lastFM"
                                                    IconImageSource="lastfm.png"
                                                    Text="View on Last FM" />
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="google"
                                                    IconImageSource="google.png"
                                                    Text="View on Google" />
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="youtube"
                                                    IconImageSource="youtube.png"
                                                    Text="View on YouTube" />
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="spotify"
                                                    IconImageSource="spotify.png"
                                                    Text="View on Spotify" />
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="deezer"
                                                    IconImageSource="deezer.png"
                                                    Text="View on Deezer" />

                                            </MenuFlyout>
                                        </FlyoutBase.ContextFlyout>
                                    </ImageButton>

                                    <syncf:SfChip
                                        x:Name="ShowPlaylistHistory"
                                        Clicked="ShowPlaylistHistory_Clicked"
                                        ImageSize="40"
                                        ImageSource="playlista.png"
                                        WidthRequest="60" />
                                    <ImageButton
                                        Clicked="SettingsNavChips_ChipClicked"
                                        IsEnabled="{Binding IsTimestampingInProgress, Converter={converters:BoolToInverseConverter}}"
                                        Source="settings.png"
                                        WidthRequest="55">
                                        <ImageButton.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="DarkSlateBlue" />
                                        </ImageButton.Behaviors>
                                    </ImageButton>
                                </HorizontalStackLayout>

                                <Border
                                    x:Name="NavTab"
                                    Grid.Row="1"
                                    Margin="0,0"
                                    StrokeShape="RoundRectangle 15"
                                    StrokeThickness="3">
                                    <Border.Triggers>



                                        <DataTrigger
                                            Binding="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
                                            TargetType="Border"
                                            Value="true">
                                            <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}" />
                                        </DataTrigger>



                                    </Border.Triggers>
                                    <Grid>
                                        <ImageButton
                                            x:Name="NowPlayingSong"
                                            Aspect="AspectFit"
                                            Clicked="NowPlayingSong_Clicked"
                                            HeightRequest="350"
                                            Opacity="0.3"
                                            Source="{Binding CurrentPlayingSongView.CoverImagePath, Converter={converters:PathToImageConverter}}"
                                            ToolTipProperties.Text="Click to view song details"
                                            WidthRequest="350">

                                            <ImageButton.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding AllLines, Converter={converters:IsEnumerableNullOrEmptyConverter}}"
                                                    TargetType="ImageButton"
                                                    Value="True">
                                                    <Setter Property="Opacity" Value="1" />
                                                </DataTrigger>

                                            </ImageButton.Triggers>
                                        </ImageButton>


                                        <VerticalStackLayout
                                            x:Name="LyricsSection"
                                            HorizontalOptions="Center"
                                            IsVisible="True"
                                            VerticalOptions="Center">
                                            <VerticalStackLayout.Triggers>

                                                <DataTrigger
                                                    Binding="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
                                                    TargetType="VerticalStackLayout"
                                                    Value="true">
                                                    <Setter Property="IsVisible" Value="True" />
                                                </DataTrigger>

                                                <DataTrigger
                                                    Binding="{Binding IsPlaying}"
                                                    TargetType="VerticalStackLayout"
                                                    Value="false">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>

                                                <DataTrigger
                                                    Binding="{Binding AllLines.Count, Converter={converters:CollectionSizeToVisibility}}"
                                                    TargetType="VerticalStackLayout"
                                                    Value="false">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>
                                            </VerticalStackLayout.Triggers>

                                            <Label
                                                FontSize="15"
                                                HorizontalTextAlignment="Center"
                                                Opacity="0.7"
                                                Text="{Binding PreviousLine.Text}" />
                                            <Grid HorizontalOptions="Center">
                                                <Border BackgroundColor="{AppThemeBinding Dark=#1e1e1e}" Opacity="0.7" />
                                                <Label
                                                    Margin="10"
                                                    FontAttributes="Bold"
                                                    FontSize="36"
                                                    HorizontalTextAlignment="Center"
                                                    Opacity="1"
                                                    Text="{Binding CurrentLine.Text}"
                                                    TextColor="DarkSlateBlue">
                                                    <Label.Triggers />
                                                </Label>
                                            </Grid>
                                            <Label
                                                FontSize="17"
                                                HorizontalTextAlignment="Center"
                                                Opacity="0.7"
                                                Text="{Binding NextLine.Text}" />
                                        </VerticalStackLayout>


                                    </Grid>

                                </Border>
                                <Label
                                    FontAttributes="Bold"
                                    FontSize="20"
                                    HorizontalOptions="Center"
                                    HorizontalTextAlignment="Justify"
                                    LineBreakMode="WordWrap"
                                    Text="{Binding CurrentPlayingSongView.Title}">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                                    </Label.GestureRecognizers>
                                    <FlyoutBase.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem
                                                Command="{Binding ShareSongDetailsAsTextCommand}"
                                                CommandParameter="{Binding CurrentPlayingSongView}"
                                                IconImageSource="shared.png"
                                                Text="Share Song" />
                                            <MenuFlyoutItem
                                                Clicked="ShowBtmSheet_Clicked"
                                                IconImageSource="textitalicsquare.png"
                                                Text="Share Title Only" />
                                        </MenuFlyout>
                                    </FlyoutBase.ContextFlyout>

                                </Label>
                                <HorizontalStackLayout HorizontalOptions="Center">
                                    <syncf:SfEffectsView
                                        x:Name="AddFavoriteRatingToSong"
                                        TouchUp="AddFavoriteRatingToSong_TouchUp"
                                        TouchUpCommandParameter="{Binding CurrentPlayingSongView}">

                                        <Grid>


                                            <ImageButton
                                                windows:VisualElement.AccessKey="H"
                                                BackgroundColor="Transparent"
                                                Command="{Binding AddFavoriteRatingToSongCommand}"
                                                CommandParameter="{Binding CurrentPlayingSongView}"
                                                Source="heart.png"
                                                WidthRequest="58">
                                                <ImageButton.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding CurrentPlayingSongView.IsFavorite}"
                                                        TargetType="ImageButton"
                                                        Value="False">
                                                        <Setter Property="Source" Value="heartbroken.png" />
                                                        <Setter Property="ToolTipProperties.Text" Value="Not Favorite" />

                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding CurrentPlayingSongView.IsFavorite}"
                                                        TargetType="ImageButton"
                                                        Value="True">
                                                        <Setter Property="Source" Value="heartlock.png" />
                                                        <Setter Property="ToolTipProperties.Text" Value="Favorite" />


                                                    </DataTrigger>
                                                </ImageButton.Triggers>
                                            </ImageButton>
                                            <Label HorizontalOptions="Center" Text="{Binding CurrentPlayingSongView.NumberOfTimesFaved}" />

                                        </Grid>
                                    </syncf:SfEffectsView>
                                    <Button
                                        BackgroundColor="{Binding CurrentPlaySongDominantColor}"
                                        BorderWidth="0"
                                        Clicked="NavigateToSelectedSongPageContextMenuAsync"
                                        Opacity="0.6"
                                        Text="{Binding CurrentPlayingSongView.PlayCompletedCount, StringFormat='{0}'}"
                                        TextColor="{AppThemeBinding Light=Black,
                                                                    Dark=White}"
                                        ToolTipProperties.Text="Number of Dims (Click)"
                                        WidthRequest="60" />

                                </HorizontalStackLayout>

                                <Grid ColumnDefinitions="auto,*,60">
                                    <syncf:SfChip
                                        x:Name="QuickFilterBtn"
                                        Grid.Column="0"
                                        Padding="5"
                                        BackgroundColor="Transparent"
                                        CommandParameter="artist"
                                        FontSize="16"
                                        HorizontalOptions="Start"
                                        Loaded="QuickFilterBtn_Loaded"
                                        ShowIcon="False"
                                        StrokeThickness="1"
                                        Text="{Binding CurrentPlayingSongView.OtherArtistsName}"
                                        TextColor="{AppThemeBinding Light=Black,
                                                                    Dark=White}"
                                        ToolTipProperties.Text="{Binding CurrentPlayingSongView.ArtistName}"
                                        Unloaded="QuickFilterBtn_Unloaded">




                                        <syncf:SfChip.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsPlaying}"
                                                TargetType="syncf:SfChip"
                                                Value="True">
                                                <Setter Property="StrokeThickness" Value="1" />
                                                <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}" />

                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding IsPlaying}"
                                                TargetType="syncf:SfChip"
                                                Value="False">
                                                <Setter Property="StrokeThickness" Value="0" />
                                                <Setter Property="Stroke" Value="Transparent" />

                                            </DataTrigger>
                                        </syncf:SfChip.Triggers>


                                    </syncf:SfChip>

                                    <syncf:SfChip
                                        x:Name="ViewLyricsChip"
                                        Grid.Column="2"
                                        Clicked="ViewLyricsChip_Clicked"
                                        CornerRadius="20"
                                        ImageSize="45"
                                        ImageSource="lyrics.png"
                                        IsVisible="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
                                        ShowIcon="True"
                                        StrokeThickness="0" />
                                </Grid>



                                <syncf:SfEffectsView
                                    Margin="2,0"
                                    BackgroundColor="Transparent"
                                    TouchDown="Quickalbumsearch_Clicked"
                                    TouchDownCommandParameter="album"
                                    TouchUpCommandParameter="{Binding CurrentPlayingSongView.AlbumName}">

                                    <Label
                                        BackgroundColor="Transparent"
                                        FontSize="16"
                                        HorizontalOptions="Start"
                                        Text="{Binding CurrentPlayingSongView.AlbumName}"
                                        TextTransform="Lowercase" />

                                </syncf:SfEffectsView>


                                <HorizontalStackLayout
                                    x:Name="MediaBtns"
                                    Grid.Row="0"
                                    Margin="0"
                                    HeightRequest="50"
                                    Spacing="10"
                                    VerticalOptions="Center">

                                    <HorizontalStackLayout.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="HeightRequest" Value="50" />
                                            <Setter Property="WidthRequest" Value="60" />
                                        </Style>
                                    </HorizontalStackLayout.Resources>


                                    <Button
                                        Background="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding ToggleShuffleCommand}"
                                        ImageSource="shuffle.png"
                                        IsEnabled="{Binding IsTimestampingInProgress, Converter={converters:BoolToInverseConverter}}"
                                        StyleClass="MediaBtnChip"
                                        ToolTipProperties.Text="{Binding IsShuffleActive, Converter={converters:BoolToYesNoConverter}, StringFormat='Is Shuffle Active? : {0}'}"
                                        WidthRequest="60">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>
                                        <Button.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsShuffleActive}"
                                                TargetType="Button"
                                                Value="True">
                                                <Setter Property="BorderColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                                <Setter Property="BorderWidth" Value="2" />

                                            </DataTrigger>
                                        </Button.Triggers>
                                    </Button>


                                    <Button
                                        x:Name="SkipPrev"
                                        windows:VisualElement.AccessKey="B"
                                        windows:VisualElement.AccessKeyPlacement="Bottom"
                                        Background="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding PreviousTrackCommand}"
                                        ImageSource="skipprevious.png"
                                        IsEnabled="{Binding IsTimestampingInProgress, Converter={converters:BoolToInverseConverter}}"
                                        StyleClass="MediaBtnChip">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>
                                    </Button>
                                    <Button
                                        x:Name="PlayPauseBtn"
                                        windows:VisualElement.AccessKey="P"
                                        windows:VisualElement.AccessKeyPlacement="Bottom"
                                        Background="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding PlayPauseToggleCommand}"
                                        ImageSource="play.png"
                                        StyleClass="MediaBtnChip">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>

                                        <Button.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsPlaying}"
                                                TargetType="Button"
                                                Value="true">
                                                <Setter Property="ImageSource" Value="pause.png" />
                                            </DataTrigger>

                                            <DataTrigger
                                                Binding="{Binding IsPlaying}"
                                                TargetType="Button"
                                                Value="false">
                                                <Setter Property="ImageSource" Value="play.png" />
                                            </DataTrigger>
                                        </Button.Triggers>
                                    </Button>
                                    <Button
                                        x:Name="SkipNext"
                                        windows:VisualElement.AccessKey="N"
                                        windows:VisualElement.AccessKeyPlacement="Bottom"
                                        Background="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding NextTrackCommand}"
                                        ImageSource="skipnext.png"
                                        IsEnabled="{Binding IsTimestampingInProgress, Converter={converters:BoolToInverseConverter}}"
                                        StyleClass="MediaBtnChip">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>
                                    </Button>


                                    <Button
                                        Background="Transparent"
                                        Command="{Binding ToggleRepeatModeCommand}"
                                        ImageSource="repeat.png"
                                        StyleClass="MediaBtnChip"
                                        ToolTipProperties.Text="{Binding CurrentRepeatMode, StringFormat='Current Repeat Mode : {0}'}"
                                        WidthRequest="60">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>
                                        <Button.Triggers>
                                            <DataTrigger
                                                Binding="{Binding CurrentRepeatMode}"
                                                TargetType="Button"
                                                Value="0">
                                                <Setter Property="BorderColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                                <Setter Property="BorderWidth" Value="1" />


                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding CurrentRepeatMode}"
                                                TargetType="Button"
                                                Value="1">
                                                <Setter Property="BorderColor" Value="LightBlue" />
                                                <Setter Property="BorderWidth" Value="2" />

                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding CurrentRepeatMode}"
                                                TargetType="Button"
                                                Value="2">
                                                <Setter Property="BorderColor" Value="Orange" />
                                                <Setter Property="BorderWidth" Value="2" />

                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding CurrentRepeatMode}"
                                                TargetType="Button"
                                                Value="3">
                                                <Setter Property="BorderColor" Value="Red" />
                                                <Setter Property="BorderWidth" Value="2" />

                                            </DataTrigger>
                                        </Button.Triggers>
                                    </Button>
                                </HorizontalStackLayout>

                                <Grid
                                    Grid.Column="1"
                                    ColumnDefinitions="auto,*,auto"
                                    ColumnSpacing="5"
                                    HorizontalOptions="Center">
                                    <Label
                                        Grid.Column="0"
                                        HorizontalTextAlignment="Start"
                                        Text="{Binding CurrentTrackPositionSeconds, Converter={StaticResource DurationConverter}}"
                                        TextColor="{AppThemeBinding Light=DarkSlateblue,
                                                                    Dark=white}">
                                        <Label.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsPlaying}"
                                                TargetType="Label"
                                                Value="True">
                                                <Setter Property="TextColor" Value="DarkSlateBlue" />
                                                <Setter Property="FontAttributes" Value="Bold" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                    <Slider
                                        x:Name="TrackProgressSlider"
                                        Grid.Column="1"
                                        DragCompleted="Slider_DragCompleted"
                                        Maximum="{Binding CurrentPlayingSongView.DurationInSeconds}"
                                        MaximumTrackColor="{AppThemeBinding Dark=White,
                                                                            Light=Black}"
                                        Minimum="0"
                                        MinimumTrackColor="DarkSlateBlue"
                                        ThumbColor="{Binding CurrentPlaySongDominantColor}"
                                        WidthRequest="310"
                                        Value="{Binding CurrentTrackPositionSeconds}" />

                                    <Label
                                        Grid.Column="2"
                                        BackgroundColor="Transparent"
                                        HorizontalTextAlignment="Start"
                                        Text="{Binding CurrentPlayingSongView.DurationInSeconds, Converter={StaticResource DurationConverter}}" />
                                </Grid>

                            </VerticalStackLayout>
                        </ScrollView>
                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>

                <syncf:SfTabItem Header="AudioSection">
                    <syncf:SfTabItem.Content>
                        <Grid RowDefinitions="auto,*" RowSpacing="20">
                            <VerticalStackLayout Grid.Row="0">
                                <Label
                                    FontSize="20"
                                    HorizontalTextAlignment="Center"
                                    Text="{Binding AudioDevices.Count, StringFormat='{0} Output Devices'}" />
                            </VerticalStackLayout>

                            <CollectionView
                                Grid.Row="1"
                                ItemsSource="{Binding AudioDevices}"
                                SelectedItem="{Binding SelectedAudioDevice}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:AudioOutputDevice">
                                        <Border>

                                            <Border.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IsDefaultDevice}"
                                                    TargetType="Border"
                                                    Value="True">
                                                    <Setter Property="Stroke" Value="DarkSlateBlue" />
                                                    <Setter Property="StrokeThickness" Value="2" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding IsDefaultDevice}"
                                                    TargetType="Border"
                                                    Value="False">
                                                    <Setter Property="Stroke" Value="White" />
                                                    <Setter Property="StrokeThickness" Value="0" />
                                                </DataTrigger>
                                            </Border.Triggers>


                                            <VerticalStackLayout Margin="10" Spacing="10">
                                                <Label
                                                    FontSize="24"
                                                    HorizontalTextAlignment="Center"
                                                    IsVisible="{Binding IsDefaultDevice}"
                                                    Text="Active Device"
                                                    TextColor="DarkSlateBlue" />

                                                <Label Text="{Binding Name}" />
                                                <Label Text="{Binding ProductName}" />
                                                <Label Text="{Binding IconString}" />
                                                <Label Text="{Binding Volume, StringFormat='Volume : {0:n2}%'}" />




                                                <Button
                                                    Grid.Column="1"
                                                    Clicked="SetPrefdevice_Clicked"
                                                    Command="{Binding SetPreferredAudioDeviceViewCommand, Source={RelativeSource AncestorType={x:Type vm:BaseViewModelWin}}}"
                                                    CommandParameter="{Binding .}"
                                                    IsVisible="{Binding IsDefaultDevice, Converter={converters:BoolToInverseConverter}}"
                                                    Text="Select Device" />
                                            </VerticalStackLayout>
                                        </Border>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>

                        </Grid>

                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>
                <syncf:SfTabItem x:Name="LyricsView">
                    <Grid Margin="5" RowDefinitions="auto,*">
                        <Grid Grid.Row="0" ColumnDefinitions="*,55">
                            <syncf:SfChip
                                x:Name="OpenLyricsViewOnly"
                                Grid.Column="1"
                                Clicked="OpenLyricsViewOnly_Clicked"
                                HorizontalOptions="End"
                                ImageSize="40"
                                ImageSource="maximize.png"
                                StrokeThickness="0"
                                ToolTipProperties.Text="Open Lyrics Window only" />
                        </Grid>

                        <CollectionView
                            x:Name="AllLyricsColView"
                            Grid.Row="1"
                            ItemsSource="{Binding AllLines}"
                            SelectedItem="{Binding CurrentLine}"
                            SelectionChanged="AllLyricsColView_SelectionChanged"
                            SelectionMode="Single">
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:LyricPhraseModelView">
                                    <Label
                                        FontSize="{Binding NowPlayingLyricsFontSize}"
                                        HorizontalTextAlignment="Center"
                                        Text="{Binding Text}"
                                        TextColor="{Binding HighlightColor}" />
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </Grid>
                </syncf:SfTabItem>
            </syncf:SfTabView>

        </Grid>

        <Grid
            x:Name="TopLeft"
            Grid.Row="1"
            BackgroundColor="{AppThemeBinding Light=#999999,
                                              Dark=transparent}"
            RowDefinitions="*,*">
            <Grid.GestureRecognizers>
                <PointerGestureRecognizer PointerReleased="TogglePanelClicked" />
            </Grid.GestureRecognizers>
            <VerticalStackLayout
                Grid.Row="0"
                Margin="5"
                Spacing="5">
                <HorizontalStackLayout HorizontalOptions="Center" Spacing="15">

                    <ImageButton
                        x:Name="MainPBView"
                        Clicked="MainPBView_Clicked"
                        Source="playcircle.png"
                        ToolTipProperties.Text="Main PlayBack Tab" />

                    <ImageButton
                        x:Name="ViewDeviceAudio"
                        Clicked="ViewDeviceAudio_Clicked"
                        Source="headphonesround.png"
                        ToolTipProperties.Text="View Audio Output Devices" />

                    <ImageButton
                        x:Name="ViewNowPlayingQueue"
                        Clicked="ViewNowPlayingQueue_Clicked"
                        Source="musicplaylist.png" />

                </HorizontalStackLayout>
                <Button
                    Grid.Row="0"
                    BackgroundColor="Transparent"
                    Command="{Binding ToggleAppThemeCommand}"
                    FontAttributes="Bold"
                    FontSize="13"
                    HorizontalOptions="Center"
                    Text="{Binding IsDarkModeOn}"
                    TextColor="{AppThemeBinding Light=Black,
                                                Dark=White}">
                    <Button.Triggers>
                        <DataTrigger
                            Binding="{Binding IsDarkModeOn}"
                            TargetType="Button"
                            Value="True">
                            <Setter Property="Text" Value="Dark Mode On" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding IsDarkModeOn}"
                            TargetType="Button"
                            Value="False">
                            <Setter Property="Text" Value="Light Mode On" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Border
                    x:Name="ViewNPQWrapper"
                    Padding="4"
                    Background="Transparent"
                    Loaded="ButtonViewLoaded"
                    StrokeShape="RoundRectangle 8"
                    Unloaded="ButtonViewUnLoaded">
                    <Button
                        x:Name="ViewNPQ"
                        windows:VisualElement.AccessKey="Q"
                        windows:VisualElement.AccessKeyPlacement="Bottom"
                        Background="Transparent"
                        BorderWidth="0"
                        Clicked="NowPlayingQueueBtnClicked"
                        Text="View Now Playing Queue"
                        TextColor="{AppThemeBinding Light=Black,
                                                    Dark=White}"
                        ToolTipProperties.Text="{Binding CurrentPlaybackQuery, StringFormat='Current Query {0}'}">

                        <Button.Behaviors>

                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                        </Button.Behaviors>
                    </Button>
                </Border>
                <Grid
                    Padding="2"
                    ColumnDefinitions="auto,*"
                    ColumnSpacing="10">

                    <Label Text="Volume" />
                    <syncf:SfEffectsView
                        x:Name="VolumeSlider"
                        Loaded="SfEffectsView_Loaded"
                        Unloaded="SfEffectsView_Unloaded" />
                    <Slider
                        Grid.Column="1"
                        Loaded="VolumeSlider_Loaded"
                        MaximumTrackColor="{AppThemeBinding Dark=White,
                                                            Light=Black}"
                        Minimum="0"
                        MinimumTrackColor="DarkSlateBlue"
                        ThumbColor="{Binding CurrentPlaySongDominantColor}"
                        ToolTipProperties.Text="{Binding DeviceVolumeLevel}"
                        Unloaded="VolumeSlider_Unloaded"
                        Value="{Binding DeviceVolumeLevel}" />

                </Grid>
            </VerticalStackLayout>


            <!--<CollectionView Grid.Row="5" ItemsSource="{Binding TopTrackDashBoard}">
            <CollectionView.ItemsLayout>
                <GridItemsLayout Orientation="Vertical" Span="5" />
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="models:DimmerStats">
                    <Border Padding="5">
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer
                                x:Name="PlaySongTap"
                                CommandParameter="{Binding .}"
                                NumberOfTapsRequired="2"
                                Tapped="PlaySongTapFromRecent_Tapped" />
                        </Border.GestureRecognizers>
                        <VerticalStackLayout>
                            <Image
                                Aspect="AspectFill"
                                HeightRequest="210"
                                Source="{Binding Song.CoverImagePath}"
                                WidthRequest="210" />
                            <Label
                                FontAttributes="Bold"
                                HorizontalTextAlignment="Center"
                                LineBreakMode="TailTruncation"
                                Text="{Binding Song.Title}" />
                        </VerticalStackLayout>
                    </Border>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>-->


        </Grid>



        <!--<Grid BackgroundColor="{AppThemeBinding Light=#999999}" RowDefinitions="auto,*">

        <Grid.GestureRecognizers>


            <DropGestureRecognizer x:Name="SongDropRecognizer"
                AllowDrop="True"
                DragLeave="SongDropRecognizer_DragLeave"
                DragOver="SongDropRecognizer_DragOver"
                Drop="SongDropRecognizer_Drop"
                />
        </Grid.GestureRecognizers>


        <VerticalStackLayout Grid.Row="0" ZIndex="0">



            <VerticalStackLayout x:Name="AdvSearch"
                Padding="5"
                Spacing="5"
                >
                <syncf:SfChip
                    IsVisible="False"
                    Text="Advanced Search (TQL)"
                    ToolTipProperties.Text="Start a Topaz Query using TQL"
                    />
                <Label
                    FontSize="19"
                    HorizontalTextAlignment="Center"
                    Text="{Binding CurrentTqlQuery, StringFormat='Current Query : {0}'}"
                    IsVisible="{Binding PlaybackQueue, Converter={converters:IsEnumerableNullOrEmptyConverter}}"
                    />

                <Grid ColumnDefinitions="*,auto,auto" ColumnSpacing="5">

                    <VerticalStackLayout x:Name="TqlView" Grid.Row="1">
                        <Border
                            Margin="10"
                            Padding="10"
                            IsVisible="False"
                            VerticalOptions="End"
                            >
                            <HorizontalStackLayout HorizontalOptions="Center" Spacing="10">
        -->
        <!-- These commands expect an IEnumerable<SongModelView> -->
        <!--
                                <Button x:Name="CopySongs"
                                    Clicked="CopySongs_Clicked"
                                    Text="Copy"
                                    />
                                <Button Text="Move" />
                                <Button x:Name="DeleteSongs"
                                    Clicked="DeleteSongs_Clicked"
                                    Text="Delete"
                                    TextColor="White"
                                    />
                            </HorizontalStackLayout>
                        </Border>


                        <HorizontalStackLayout Spacing="10">

                            <Button x:Name="ScrollToSong"
                                windows:VisualElement.AccessKey="S"
                                windows:VisualElement.AccessKeyPlacement="Bottom"
                                BackgroundColor="Transparent"
                                BorderWidth="1"
                                Clicked="ScrollToSong_Clicked"
                                HeightRequest="50"
                                ImageSource="eye.png"
                                WidthRequest="50"
                                />
                            <Button x:Name="SearchBtn"
                                windows:SearchBar.IsSpellCheckEnabled="True"
                                windows:VisualElement.AccessKey="F"
                                windows:VisualElement.AccessKeyPlacement="Right"
                                BackgroundColor="Transparent"
                                BorderWidth="2"
                                Clicked="SearchSongSB_Clicked"
                                HorizontalOptions="Start"
                                Loaded="SearchBtn_Loaded"
                                Text="Search"
                                TextColor="{AppThemeBinding Light=Black,
                                                            Dark=WHite}"
                                />

                            <Button x:Name="ClearQueueBtn"
                                windows:SearchBar.IsSpellCheckEnabled="True"
                                windows:VisualElement.AccessKey="C"
                                windows:VisualElement.AccessKeyPlacement="Auto"
                                BackgroundColor="Transparent"
                                BorderWidth="2"
                                Command="{Binding ClearQueueCommand}"
                                HorizontalOptions="Start"
                                Text="Clear"
                                TextColor="{AppThemeBinding Light=Black,
                                                            Dark=WHite}"
                                />
                        </HorizontalStackLayout>
                        <Border
                            Padding="0"
                            BackgroundColor="#A0000000"
                            HorizontalOptions="Fill"
                            IsVisible="{Binding IsCreatingSegment}"
                            StrokeThickness="0"
                            VerticalOptions="Fill"
                            >

                            <Border
                                HorizontalOptions="Center"
                                VerticalOptions="Center"
                                WidthRequest="400"
                                >
                                <VerticalStackLayout Spacing="15">
                                    <Label
                                        FontAttributes="Bold"
                                        FontSize="20"
                                        HorizontalOptions="Center"
                                        Text="Create Song Segment"
                                        />

        -->
        <!--  Segment Name  -->
        <!--
                                    <Entry Placeholder="Segment Name" Text="{Binding NewSegmentName}" />

        -->
        <!--  Start Time  -->
        <!--
                                    <Grid ColumnDefinitions="*,Auto">
                                        <Entry
                                            Grid.Column="0"
                                            Keyboard="Numeric"
                                            Placeholder="Start (seconds)"
                                            Text="{Binding NewSegmentStart}"
                                            />
                                        <Button
                                            Grid.Column="1"
                                            Margin="5,0,0,0"
                                            Command="{Binding SetSegmentStartFromCurrentCommand}"
                                            Text="&#xE15C;"
                                            ToolTipProperties.Text="Set to Current Time"
                                            />
                                    </Grid>

        -->
        <!--  End Time  -->
        <!--
                                    <Grid ColumnDefinitions="*,Auto">
                                        <Entry
                                            Grid.Column="0"
                                            Keyboard="Numeric"
                                            Placeholder="End (seconds)"
                                            Text="{Binding NewSegmentEnd}"
                                            />
                                        <Button
                                            Grid.Column="1"
                                            Margin="5,0,0,0"
                                            Command="{Binding SetSegmentEndFromCurrentCommand}"
                                            Text="&#xE15C;"
                                            ToolTipProperties.Text="Set to Current Time"
                                            />
                                    </Grid>

        -->
        <!--  Action Buttons  -->
        <!--
                                    <HorizontalStackLayout HorizontalOptions="End" Spacing="10">
                                        <Button Command="{Binding CancelCreateSegmentCommand}" Text="Cancel" />
                                        <Button Command="{Binding SaveNewSegmentCommand}" Text="Save Segment" />
                                    </HorizontalStackLayout>

                                </VerticalStackLayout>
                            </Border>
                        </Border>
                    </VerticalStackLayout>
                    <HorizontalStackLayout Grid.Column="2" Spacing="10" />
                </Grid>

            </VerticalStackLayout>



            <Grid
                Grid.Row="0"
                Margin="10,0"
                ColumnDefinitions="auto,*,auto"
                >

                <VerticalStackLayout x:Name="LeftUtilSide"
                    Grid.Column="0"
                    Spacing="10"
                    >
                    <HorizontalStackLayout>




                        <Button
                            windows:VisualElement.AccessKey="C"
                            BackgroundColor="Transparent"
                            Clicked="ChangeLayout_Clicked"
                            HeightRequest="50"
                            ImageSource="hamburgermenu.png"
                            IsVisible="False"
                            WidthRequest="50"
                            />
                        <Label x:Name="PlaybackAndSelectedSongsLabel"
                            FontAttributes="Italic"
                            FontSize="21"
                            HorizontalOptions="Center"
                            Text="{Binding PlaybackQueue.Count, StringFormat='Songs : {0}'}"
                            TextColor="{AppThemeBinding Light=Black,
                                                        Dark=#999999}"
                            />

                    </HorizontalStackLayout>

                    <Border x:Name="PlaybackAndSelectedSongsBorder" IsVisible="False">
                        <Image
                            Source="eye.png"
                            HeightRequest="60"
                            WidthRequest="60"
                            >
                            <Image.Behaviors>
                                <toolkit:IconTintColorBehavior TintColor="DarkSlateGray" />
                            </Image.Behaviors>
                        </Image>
                    </Border>
                </VerticalStackLayout>
                <Border x:Name="LyricsBoxView"
                    Grid.Column="1"
                    HorizontalOptions="Center"
                    />

                <HorizontalStackLayout x:Name="RightUtilSide"
                    Grid.Column="2"
                    HorizontalOptions="Center"
                    Spacing="10"
                    >

                    <VerticalStackLayout Spacing="10">
                        <VerticalStackLayout.Resources>
                            <ResourceDictionary>
                                <Style TargetType="Button">
                                    <Setter Property="BorderWidth" Value="1" />
                                    <Setter Property="HeightRequest" Value="34" />
                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                </Style>
                            </ResourceDictionary>
                        </VerticalStackLayout.Resources>

                    </VerticalStackLayout>
                    <ProgressBar x:Name="MyProgressBar"
                        IsVisible="False"
                        WidthRequest="80"
                        />
                    <Label x:Name="MyProgressLabel"
                        IsVisible="False"
                        WidthRequest="180"
                        />



                    <syncf:SfChip x:Name="EXout"
                        windows:VisualElement.AccessKey="E"
                        windows:VisualElement.AccessKeyPlacement="Bottom"
                        BackgroundColor="Transparent"
                        Clicked="OnNavigateToExperimentalPage"
                        HeightRequest="50"
                        IsVisible="False"
                        StrokeThickness="1"
                        Text="E"
                        TextColor="{AppThemeBinding Dark=WHite,
                                                    Light=Black}"
                        WidthRequest="58"
                        />

                    <toolkit:Expander>
                        <toolkit:Expander.Header>
                            <HorizontalStackLayout Spacing="10" HorizontalOptions="End">



                                <ImageButton x:Name="DeleteSeleted"
                                    Source="delete.png"
                                    HeightRequest="50"
                                    WidthRequest="50"
                                    IsVisible="False"
                                    Clicked="DeleteSeleted_Clicked"
                                    >

                                    <ImageButton.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="DarkSlateBlue" />
                                    </ImageButton.Behaviors>
                                </ImageButton>



                                <ImageButton x:Name="ToggleMultiSelect"
                                    Source="selectmultiple.png"
                                    HeightRequest="50"
                                    WidthRequest="50"
                                    Clicked="ToggleMultiSelect_Clicked"
                                    >

                                    <ImageButton.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="DarkSlateBlue" />
                                    </ImageButton.Behaviors>
                                </ImageButton>



                                <Image
                                    Source="filtertwo.png"
                                    HeightRequest="50"
                                    WidthRequest="50"
                                    >

                                    <Image.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="DarkSlateBlue" />
                                    </Image.Behaviors>
                                </Image>
                            </HorizontalStackLayout>
                        </toolkit:Expander.Header>
                        <toolkit:Expander.Content>
                            <HorizontalStackLayout Spacing="10">

                                <syncf:SfChip
                                    BackgroundColor="Transparent"
                                    Command="{Binding ToggleShuffleCommand}"
                                    HeightRequest="50"
                                    ShowIcon="False"
                                    StrokeThickness="1"
                                    Text="Shuffle"
                                    />
                                <syncf:SfChip
                                    BackgroundColor="Transparent"
                                    Command="{Binding GroupSongsInQueueByAlbumCommand}"
                                    HeightRequest="50"
                                    ShowIcon="False"
                                    StrokeThickness="1"
                                    Text="G. Album"
                                    ToolTipProperties.Text="Group By Album"
                                    />
                                <syncf:SfChip
                                    BackgroundColor="Transparent"
                                    Command="{Binding GroupSongsInQueueByArtistCommand}"
                                    HeightRequest="50"
                                    ShowIcon="False"
                                    StrokeThickness="1"
                                    Text="G. Artist"
                                    ToolTipProperties.Text="Group By Artist"
                                    />
                                <syncf:SfChip
                                    BackgroundColor="Transparent"
                                    Command="{Binding GroupSongsInQueueByGenreCommand}"
                                    HeightRequest="50"
                                    ShowIcon="False"
                                    StrokeThickness="1"
                                    Text="G. Genre"
                                    ToolTipProperties.Text="Group By Genre"
                                    />
                                <syncf:SfChip
                                    BackgroundColor="Transparent"
                                    Command="{Binding OrderQueueByAlbumCommand}"
                                    HeightRequest="50"
                                    ShowIcon="False"
                                    StrokeThickness="1"
                                    Text="O. Album"
                                    ToolTipProperties.Text="Order By Album"
                                    />
                                <syncf:SfChip
                                    BackgroundColor="Transparent"
                                    Command="{Binding OrderQueueByArtistCommand}"
                                    HeightRequest="50"
                                    ShowIcon="False"
                                    StrokeThickness="1"
                                    Text="O. Artist"
                                    ToolTipProperties.Text="Order By Artist"
                                    />
                                <syncf:SfChip
                                    BackgroundColor="Transparent"
                                    Command="{Binding OrderQueueByTitleCommand}"
                                    HeightRequest="50"
                                    ShowIcon="False"
                                    StrokeThickness="1"
                                    Text="O. Title"
                                    ToolTipProperties.Text="Order By Title"
                                    />
                            </HorizontalStackLayout>
                        </toolkit:Expander.Content>
                    </toolkit:Expander>

                </HorizontalStackLayout>

            </Grid>

        </VerticalStackLayout>




        <Grid x:Name="GridSongsColView"
            Grid.Row="1"
            RowDefinitions="*"
            RowSpacing="5"
            >


            <CollectionView x:Name="SongsColView"
                Grid.Row="1"
                EmptyView="No Songs.."
                IsVisible="True"
                ItemTemplate="{StaticResource OGView}"
                ItemsSource="{Binding PlaybackQueue}"
                Loaded="MainSongsColView_Loaded"
                ScrollToRequested="SongsColView_ScrollToRequested"
                Scrolled="SongsColView_Scrolled"
                SelectionChanged="SongsColView_SelectionChanged"
                SelectedItem="{Binding SelectedSong}"
                SelectionMode="Single"
                VerticalOptions="Start"
                />


        </Grid>

        <syncf:SfPopup x:Name="MainPagePopup"
            x:FieldModifier="Public"
            AppearanceMode="TwoButton"
            AutoSizeMode="Both"
            HorizontalOptions="Center"
            IsFullScreen="False"
            IsVisible="False"
            Background="Red"
            BackgroundColor="Red"
            IsOpen="False"
            ShowCloseButton="True"
            ShowFooter="True"
            ShowHeader="True"
            HeightRequest="200"
            WidthRequest="600"
            ShowOverlayAlways="True"
            VerticalOptions="Center"
            >
            <syncf:SfPopup.HeaderTemplate>
                <DataTemplate x:DataType="vm:BaseViewModelWin">
                    <VerticalStackLayout>
                        <Label Text="{Binding PopUpHeaderText}" />
                    </VerticalStackLayout>
                </DataTemplate>
            </syncf:SfPopup.HeaderTemplate>

            <syncf:SfPopup.ContentTemplate>
                <DataTemplate>

                    <VerticalStackLayout>
                        <Label Text="Details " />
                    </VerticalStackLayout>
                </DataTemplate>
            </syncf:SfPopup.ContentTemplate>

        </syncf:SfPopup>

    </Grid>-->
    </Grid>

</ContentPage>