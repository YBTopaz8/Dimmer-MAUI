<?xml version="1.0" encoding="utf-8" ?>
<Shell
    x:Class="Dimmer.WinUI.AppShell"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
    xmlns:cw="clr-namespace:Dimmer.WinUI.Views.CustomViews"
    xmlns:lang="clr-namespace:Dimmer.Resources.Localization;assembly=Dimmer"
    xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
    xmlns:models="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
    xmlns:libSanity="clr-namespace:Dimmer.Data.ModelView.LibSanityModels;assembly=Dimmer"
    xmlns:modeltwo="clr-namespace:Dimmer.WinUI.Utils.Models"
    xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
    xmlns:views="clr-namespace:Dimmer.WinUI.Views"
    FlyoutWidth="380"
        xmlns:vm="clr-namespace:Dimmer.WinUI.ViewModel"
    Shell.FlyoutBehavior="Flyout"  xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
  FlyoutBackgroundColor="Transparent"
    x:DataType="vm:BaseViewModelWin">
    <Shell.Resources>
        <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter" />
        <converters:BytesToMegabytesConverter x:Key="FileSizeConverter" />
        <converters:BytesArrayToImageSource x:Key="BytesToImageConverter" />
        <converters:BoolToInverseConverter x:Key="BoolToInverse" />
        <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter" />
        <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter" />
        <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter" />
        <converters:BoolToYesNoConverter x:Key="BoolToYesNo" />
        <converters:VolumeConverter x:Key="VolConverter" />
        <ResourceDictionary />
    </Shell.Resources>
    <Shell.FlyoutContent>

        <syncf:SfTabView x:Name="ShellTabView"
                         SelectionChanging="ShellTabView_SelectionChanging"
                         SelectedIndex="{Binding ShellTabIndex}"
                         EnableSwiping="True" TabBarHeight="0" TabBarPlacement="Top">
            <syncf:SfTabItem x:FieldModifier="Public" x:Name="MediaControlsView">
                <syncf:SfTabItem.Content>


                    <VerticalStackLayout
            HorizontalOptions="Start"
            x:Name="BottomLeft" Spacing="10"
            Grid.Row="1" BackgroundColor="Transparent"
            Margin="10,10">
                        <HorizontalStackLayout HorizontalOptions="End" IsVisible="False">
                            <Button BackgroundColor="Transparent"
                        windows:VisualElement.AccessKey="E"
                        x:Name="ToggleAppFlyoutState"
                        Clicked="ToggleAppFlyoutState_Clicked"
                        ImageSource="hamburgermenu.png"
                        HeightRequest="80" />
                        </HorizontalStackLayout>

                        <Border StrokeShape="RoundRectangle 15"
                Margin="10,0"  Grid.Row="1"
                StrokeThickness="3"
                  x:Name="NavTab">
                            <Border.Triggers>



                                <DataTrigger
Binding="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
TargetType="Border"
Value="true">
                                    <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}" />
                                </DataTrigger>



                            </Border.Triggers>
                            <Grid>
                            <Image Source="{Binding CurrentPlayingSongView.CoverImagePath}"
      Opacity="0.3" Aspect="AspectFit" >
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image" Binding="{Binding AllLines, Converter={converters:IsEnumerableNullOrEmptyConverter}}"
                                                 Value="True">
                                        <Setter Property="Opacity" Value="1"/>
                                    </DataTrigger>
                                                 
                                </Image.Triggers>
                            </Image>
                        

                                <VerticalStackLayout
x:Name="LyricsSection"
HorizontalOptions="Center" VerticalOptions="Center"
IsVisible="True">
                                    <VerticalStackLayout.Triggers>

                                        <DataTrigger
        Binding="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
        TargetType="VerticalStackLayout"
        Value="true">
                                            <Setter Property="IsVisible" Value="True" />
                                        </DataTrigger>

                                        <DataTrigger
        Binding="{Binding AllLines.Count, Converter={converters:CollectionSizeToVisibility}}"
        TargetType="VerticalStackLayout"
        Value="false">
                                            <Setter Property="IsVisible" Value="False" />
                                        </DataTrigger>
                                    </VerticalStackLayout.Triggers>

                                    <Label
    FontSize="15"
    HorizontalTextAlignment="Center"
    Opacity="0.7"
    Text="{Binding PreviousLine.Text}" />
                                    <Grid 
    HorizontalOptions="Center">
                                        <Border BackgroundColor="{AppThemeBinding Dark=#1e1e1e}" Opacity="0.7" />
                                        <Label
        Margin="10"
        FontAttributes="Bold"
        FontSize="36"
    HorizontalTextAlignment="Center"
        Opacity="1"
        Text="{Binding  CurrentLine.Text}"
        TextColor="DarkSlateBlue">
                                            <Label.Triggers />
                                        </Label>
                                    </Grid>
                                    <Label
    FontSize="17"
    HorizontalTextAlignment="Center"
    Opacity="0.7"
    Text="{Binding NextLine.Text}" />
                                </VerticalStackLayout>


                        </Grid>

                        </Border>
                        <Label HorizontalOptions="Center"
        HorizontalTextAlignment="Justify" LineBreakMode="WordWrap"
                 FontAttributes="Bold"
     Text="{Binding CurrentPlayingSongView.Title}" FontSize="21">
                            <FlyoutBase.ContextFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Text="Share Song" IconImageSource="shared.png"
                                                   Command="{Binding ShareCurrentPlayingAsStoryInCardLikeGradientCommand}" />
                                    <MenuFlyoutItem Text="Share Title Only" 
                                                    Clicked="ShowBtmSheet_Clicked"
                                                    IconImageSource="textitalicsquare.png"/>
                                </MenuFlyout>
                            </FlyoutBase.ContextFlyout>

                        </Label>
                        <HorizontalStackLayout HorizontalOptions="Center">
                            <Button 
                        Command="{Binding ToggleFavSongCommand}"
                        CommandParameter="{Binding CurrentPlayingSongView}"
                        BackgroundColor="Transparent"
                        
                        BorderWidth="0"
                                    
                                    windows:VisualElement.AccessKey="H"
                        ImageSource="heart.png"
                        WidthRequest="58">
                                <Button.Triggers>
                                    <DataTrigger
                                Binding="{Binding CurrentPlayingSongView.IsFavorite}"
                                TargetType="Button"
                                Value="False">
                                        <Setter Property="ImageSource" Value="heartbroken.png" />
                                        <Setter Property="ToolTipProperties.Text" Value="Not Favorite" />

                                    </DataTrigger>
                                    <DataTrigger
                                Binding="{Binding CurrentPlayingSongView.IsFavorite}"
                                TargetType="Button"
                                Value="True">
                                        <Setter Property="ImageSource" Value="heartlock.png" />
                                        <Setter Property="ToolTipProperties.Text" Value="Favorite" />


                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                            <Button WidthRequest="60" BackgroundColor="{Binding CurrentPlaySongDominantColor}"  TextColor="{AppThemeBinding Light=Black,Dark=White}" BorderWidth="0"
                        Text="{Binding CurrentPlayingSongView.PlayCompletedCount, StringFormat='{0}'}" 
                       Opacity="0.6"     Clicked="NavigateToSelectedSongPageContextMenuAsync"/>
                        </HorizontalStackLayout>
                        <Grid ColumnDefinitions="*,auto" >


                        </Grid>

                        <Label HorizontalTextAlignment="Start" 
                   Text="{Binding CurrentPlayingSongView.ArtistName}" FontSize="16">

                            <Label.GestureRecognizers>
                                <PointerGestureRecognizer
                     PointerPressedCommandParameter="{Binding CurrentPlayingSongView.OtherArtistsName}"
                     PointerReleased="QuickFilterGest_PointerReleased"
                     PointerReleasedCommandParameter="artist" />
                            </Label.GestureRecognizers>
                        </Label>

                        <Label HorizontalTextAlignment="Start"
                   Text="{Binding CurrentPlayingSongView.AlbumName}" 
                   FontSize="16">
                            <Label.GestureRecognizers>
                                <PointerGestureRecognizer
PointerPressedCommandParameter="{Binding CurrentPlayingSongView.AlbumName}"
PointerReleased="QuickFilterGest_PointerReleased"
PointerReleasedCommandParameter="album" />
                            </Label.GestureRecognizers>
                        </Label>



                        <HorizontalStackLayout
                       x:Name="MediaBtns"
                       Grid.Row="0"
                       HeightRequest="50"
                       Spacing="10" HorizontalOptions="Center"
                       VerticalOptions="Center">

                            <HorizontalStackLayout.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="HeightRequest" 
                                                    Value="50"/>
                                    <Setter Property="WidthRequest" 
                                                    Value="60"/>
                                </Style>
                            </HorizontalStackLayout.Resources>


                            <Button
         WidthRequest="60"
         BorderWidth="0"
Background="Transparent"
Command="{Binding ToggleShuffleCommand}"
ImageSource="shuffle.png"
ToolTipProperties.Text="{Binding IsShuffleActive, Converter={converters:BoolToYesNoConverter}, StringFormat='Is Shuffle Active? : {0}'}"
         
StyleClass="MediaBtnChip">
                                <Button.Triggers>
                                    <DataTrigger
        Binding="{Binding IsShuffleActive}"
        TargetType="Button"
        Value="True">
                                        <Setter Property="BorderColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                        <Setter Property="BorderWidth" Value="2" />

                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>


                            <Button
                           x:Name="SkipPrev"
                           windows:VisualElement.AccessKey="B"
                           windows:VisualElement.AccessKeyPlacement="Bottom"
                           Background="Transparent"
                    BorderWidth="0"
                           Command="{Binding PreviousTrackCommand}"
                           ImageSource="skipprevious.png"
                           StyleClass="MediaBtnChip" />
                            <Button
                           x:Name="PlayPauseBtn" BorderWidth="0"
                           windows:VisualElement.AccessKey="P"
                           windows:VisualElement.AccessKeyPlacement="Bottom"
                           Background="Transparent"
                           Command="{Binding PlayPauseToggleCommand}"
                           ImageSource="play.png"
                           StyleClass="MediaBtnChip">

                                <Button.Triggers>
                                    <DataTrigger
                                   Binding="{Binding IsPlaying}"
                                   TargetType="Button"
                                   Value="true">
                                        <Setter Property="ImageSource" Value="pause.png" />
                                    </DataTrigger>

                                    <DataTrigger
                                   Binding="{Binding IsPlaying}"
                                   TargetType="Button"
                                   Value="false">
                                        <Setter Property="ImageSource" Value="play.png" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                            <Button BorderWidth="0"
                           x:Name="SkipNext"
                           windows:VisualElement.AccessKey="N"
                           windows:VisualElement.AccessKeyPlacement="Bottom"
                           Background="Transparent"
                           Command="{Binding NextTrackCommand}"
                           ImageSource="skipnext.png"
                           StyleClass="MediaBtnChip" />


                            <Button
         WidthRequest="60"
Background="Transparent"
Command="{Binding ToggleRepeatModeCommand}"
ImageSource="repeat.png"
StyleClass="MediaBtnChip"
ToolTipProperties.Text="{Binding CurrentRepeatMode, StringFormat='Current Repeat Mode : {0}'}">
                                <Button.Triggers>
                                    <DataTrigger
        Binding="{Binding CurrentRepeatMode}"
        TargetType="Button"
        Value="0">
                                        <Setter Property="BorderColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                        <Setter Property="BorderWidth" Value="1" />


                                    </DataTrigger>
                                    <DataTrigger
        Binding="{Binding CurrentRepeatMode}"
        TargetType="Button"
        Value="1">
                                        <Setter Property="BorderColor" Value="LightBlue" />
                                        <Setter Property="BorderWidth" Value="2" />

                                    </DataTrigger>
                                    <DataTrigger
        Binding="{Binding CurrentRepeatMode}"
        TargetType="Button"
        Value="2">
                                        <Setter Property="BorderColor" Value="Orange" />
                                        <Setter Property="BorderWidth" Value="2" />

                                    </DataTrigger>
                                    <DataTrigger
        Binding="{Binding CurrentRepeatMode}"
        TargetType="Button"
        Value="3">
                                        <Setter Property="BorderColor" Value="Red" />
                                        <Setter Property="BorderWidth" Value="2" />

                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                        </HorizontalStackLayout>
                        <Slider
x:Name="TrackProgressSlider"
Grid.Column="1"
DragCompleted="Slider_DragCompleted"
Maximum="{Binding CurrentPlayingSongView.DurationInSeconds}"
Minimum="0" MaximumTrackColor="{AppThemeBinding Dark=White,Light=Black}"
MinimumTrackColor="DarkSlateBlue"
ThumbColor="{Binding CurrentPlaySongDominantColor}"
Value="{Binding CurrentTrackPositionSeconds}" />
                        <HorizontalStackLayout Spacing="10" HorizontalOptions="Center">
                            <Label HorizontalTextAlignment="Start"
                       TextColor="{AppThemeBinding Light=DarkSlateblue,Dark=white}"
                                Grid.Column="0" Text="{Binding CurrentTrackPositionSeconds, Converter={StaticResource DurationConverter}}" >
                                <Label.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}"
                  Value="True"
                  TargetType="Label">
                                        <Setter Property="TextColor" Value="DarkSlateBlue"/>
                                        <Setter Property="FontAttributes" Value="Bold"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>

                            <Label Grid.Column="2"  HorizontalTextAlignment="Start"
                                   BackgroundColor="Transparent"
                                   Text="{Binding CurrentPlayingSongView.DurationInSeconds, Converter={StaticResource DurationConverter}}" />

                        </HorizontalStackLayout>

                    </VerticalStackLayout>
                </syncf:SfTabItem.Content>
            </syncf:SfTabItem>

            <syncf:SfTabItem Header="AudioSection" >
                <syncf:SfTabItem.Content>
                    <Grid RowDefinitions="auto,*" RowSpacing="20">
                        <VerticalStackLayout Grid.Row="0">
                            <Label Text="{Binding AudioDevices.Count , StringFormat='{0} Output Devices'}"
                                   HorizontalTextAlignment="Center" FontSize="20"/>
                        </VerticalStackLayout>

                        <CollectionView ItemsSource="{Binding AudioDevices}" Grid.Row="1"
                                        SelectedItem="{Binding SelectedAudioDevice}"
                                        >
                            <CollectionView.ItemTemplate>
                                <DataTemplate  x:DataType="models:AudioOutputDevice">
                                    <Border>

                                        <Border.Triggers>
                                            <DataTrigger Binding="{Binding IsDefaultDevice}"
                                                         Value="True" TargetType="Border">
                                                <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                                <Setter Property="StrokeThickness" Value="2"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsDefaultDevice}"
                                                         Value="False" TargetType="Border">
                                                <Setter Property="Stroke" Value="White"/>
                                                <Setter Property="StrokeThickness" Value="0"/>
                                            </DataTrigger>
                                        </Border.Triggers>
                                   
                                    
                                    <VerticalStackLayout Spacing="10" Margin="10">
                                            <Label Text="Active Device" 
HorizontalTextAlignment="Center" FontSize="24" TextColor="DarkSlateBlue"
                                               IsVisible="{Binding IsDefaultDevice}
                                          "/>

                                            <Label Text="{Binding Name}"/>
                                        <Label Text="{Binding ProductName}"/>
                                        <Label Text="{Binding IconString}"/>
                                        <Label Text="{Binding Volume, Converter={converters:PercentageInverterConverter}}"/>
                                            



                                            <Button Grid.Column="1" Text="Select Device" 
                                                Clicked="SetPrefdevice_Clicked"
                                                IsVisible="{Binding IsDefaultDevice, Converter={converters:BoolToInverseConverter}}"
                                             CommandParameter="{Binding .}"   Command="{Binding SetPreferredAudioDeviceViewCommand,Source={RelativeSource AncestorType={x:Type vm:BaseViewModelWin}}}"  />
                                    </VerticalStackLayout>
                                    </Border>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                        
                    </Grid>                        

                </syncf:SfTabItem.Content>
            </syncf:SfTabItem>

          </syncf:SfTabView>
       
    </Shell.FlyoutContent>


    <Shell.FlyoutFooter>
        <Grid RowDefinitions="*,*" BackgroundColor="{AppThemeBinding Light=#F5F5F5,Dark=transparent}"
             x:Name="TopLeft" >
            <Grid.GestureRecognizers>
                <PointerGestureRecognizer
                    
                    PointerReleased="TogglePanelClicked"
                   />
            </Grid.GestureRecognizers>
            <VerticalStackLayout Grid.Row="0" Spacing="10" Margin="5">
                <ImageButton Source="headphonesround.png" 
                             x:Name="ViewDeviceAudio"
                             Clicked="ViewDeviceAudio_Clicked"/>
                <Button Command="{Binding ToggleAppThemeCommand}"
                                    Grid.Row="0"
                                    FontAttributes="Bold"
                                    FontSize="13"
                    HorizontalOptions="Center"
                                   BackgroundColor="Transparent" Text="{Binding IsDarkModeOn}" >
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsDarkModeOn}"
                                     Value="True">
                            <Setter Property="Text" Value="Dark Mode On"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding IsDarkModeOn}"
                                     Value="False">
                            <Setter Property="Text" Value="Light Mode On"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>

                <Button
 windows:VisualElement.AccessKey="Q"
                    windows:VisualElement.AccessKeyPlacement="Bottom"
Clicked="ViewNPQ_Clicked" x:Name="ViewNPQ" 
                    BackgroundColor="Transparent"
ToolTipProperties.Text="{Binding CurrentPlaybackQuery, StringFormat='Current Query {0}'}"
                    Text="View Now Playing Queue">

                </Button>

               

                <Grid ColumnDefinitions="auto,*" ColumnSpacing="10">

                    <Label Text="Volume"/>
                    <syncf:SfEffectsView 
                        x:Name="VolumeSlider"
                        Loaded="SfEffectsView_Loaded"
                        Unloaded="SfEffectsView_Unloaded"
                                         >
                        
                    </syncf:SfEffectsView>
                    <Slider
                        Grid.Column="1" 
                        Minimum="0"
                        Loaded="VolumeSlider_Loaded"
                        Unloaded="VolumeSlider_Unloaded"
                        MinimumTrackColor="DarkSlateBlue"
                        ThumbColor="{Binding CurrentPlaySongDominantColor}"
                        Value="{Binding DeviceVolumeLevel}"
                        />

                </Grid>
            </VerticalStackLayout>
            
        </Grid>

    </Shell.FlyoutFooter>
    <ShellContent
        Title="Home"
        ContentTemplate="{DataTemplate views:HomePage}"
        Route="MainPage" />
</Shell>