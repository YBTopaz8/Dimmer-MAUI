<?xml version="1.0" encoding="utf-8" ?>
<Shell
    x:Class="Dimmer.WinUI.AppShell"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
    xmlns:cw="clr-namespace:Dimmer.WinUI.Views.CustomViews"
    xmlns:lang="clr-namespace:Dimmer.Resources.Localization;assembly=Dimmer"
    xmlns:libSanity="clr-namespace:Dimmer.Data.ModelView.LibSanityModels;assembly=Dimmer"
    xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
    xmlns:models="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
    xmlns:modeltwo="clr-namespace:Dimmer.WinUI.Utils.Models"
    xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
    xmlns:views="clr-namespace:Dimmer.WinUI.Views"
    xmlns:vm="clr-namespace:Dimmer.WinUI.ViewModel"
    xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
    x:DataType="vm:BaseViewModelWin"
    FlyoutBackgroundColor="Transparent"
    FlyoutWidth="380"
    Shell.FlyoutBehavior="{Binding AppShellFlyOutBehavior}">
    <Shell.Triggers>
        <DataTrigger
            Binding="{Binding IsLibraryEmpty}"
            TargetType="Shell"
            Value="True">
            <Setter Property="FlyoutBehavior" Value="Disabled" />

        </DataTrigger>
    </Shell.Triggers>

    <Shell.Resources>
        <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter" />
        <converters:BytesToMegabytesConverter x:Key="FileSizeConverter" />
        <converters:BytesArrayToImageSource x:Key="BytesToImageConverter" />
        <converters:BoolToInverseConverter x:Key="BoolToInverse" />
        <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter" />
        <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter" />
        <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter" />
        <converters:BoolToYesNoConverter x:Key="BoolToYesNo" />
        <converters:VolumeConverter x:Key="VolConverter" />
        <ResourceDictionary />
    </Shell.Resources>
    <Shell.FlyoutContent>
        <Grid BackgroundColor="{AppThemeBinding Light=#999999}" RowDefinitions="auto,*">
            <VerticalStackLayout
                Grid.Row="0"
                Margin="10,5"
                BackgroundColor="Transparent">
                <Label
                    HorizontalTextAlignment="Center"
                    LineBreakMode="WordWrap"
                    Text="{Binding LatestAppLog.Log}" />
            </VerticalStackLayout>
            <syncf:SfTabView
                x:Name="ShellTabView"
                Grid.Row="1"
                EnableSwiping="True"
                SelectedIndex="{Binding ShellTabIndex}"
                SelectionChanging="ShellTabView_SelectionChanging"
                TabBarHeight="0"
                TabBarPlacement="Top">
                <syncf:SfTabItem x:Name="MediaControlsView" x:FieldModifier="Public">
                    <syncf:SfTabItem.Content>

                        <ScrollView x:Name="SideBarScrollView">




                            <VerticalStackLayout
                                x:Name="BottomLeft"
                                Grid.Row="1"
                                Margin="10,10"
                                BackgroundColor="Transparent"
                                HorizontalOptions="Start"
                                Spacing="10">
                                <HorizontalStackLayout HorizontalOptions="End" IsVisible="True">
                                    <ImageButton
                                        x:Name="MoreIcon"
                                        BackgroundColor="Transparent"
                                        Clicked="MoreIcon_Clicked"
                                        HeightRequest="65"
                                        Source="more1.png"
                                        WidthRequest="65">
                                        <FlyoutBase.ContextFlyout>
                                            <MenuFlyout>
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="lastFM"
                                                    IconImageSource="lastfm.png"
                                                    Text="View on Last FM" />
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="google"
                                                    IconImageSource="google.png"
                                                    Text="View on Google" />
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="youtube"
                                                    IconImageSource="youtube.png"
                                                    Text="View on YouTube" />
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="spotify"
                                                    IconImageSource="spotify.png"
                                                    Text="View on Spotify" />
                                                <MenuFlyoutItem
                                                    Command="{Binding OpenSongInOnlineSearchCommand}"
                                                    CommandParameter="deezer"
                                                    IconImageSource="deezer.png"
                                                    Text="View on Deezer" />

                                            </MenuFlyout>
                                        </FlyoutBase.ContextFlyout>
                                    </ImageButton>

                                    <syncf:SfChip
                                        x:Name="ShowPlaylistHistory"
                                        Clicked="ShowPlaylistHistory_Clicked"
                                        ImageSize="50"
                                        ImageSource="playlista.png"
                                        WidthRequest="60" />
                                    <ImageButton
                                        Clicked="SettingsNavChips_ChipClicked"
                                        IsEnabled="{Binding IsTimestampingInProgress, Converter={converters:BoolToInverseConverter}}"
                                        Source="settings.png"
                                        WidthRequest="55">
                                        <ImageButton.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="DarkSlateBlue" />
                                        </ImageButton.Behaviors>
                                    </ImageButton>
                                </HorizontalStackLayout>

                                <Border
                                    x:Name="NavTab"
                                    Grid.Row="1"
                                    Margin="0,0"
                                    StrokeShape="RoundRectangle 15"
                                    StrokeThickness="3">
                                    <Border.Triggers>



                                        <DataTrigger
                                            Binding="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
                                            TargetType="Border"
                                            Value="true">
                                            <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}" />
                                        </DataTrigger>



                                    </Border.Triggers>
                                    <Grid>
                                        <ImageButton
                                            x:Name="NowPlayingSong"
                                            Aspect="AspectFit"
                                            Clicked="NowPlayingSong_Clicked"
                                            HeightRequest="300"
                                            Opacity="0.3"
                                            Source="{Binding CurrentPlayingSongView.CoverImagePath, Converter={converters:PathToImageConverter}}"
                                            ToolTipProperties.Text="Click to view song details"
                                            WidthRequest="300">

                                            <ImageButton.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding AllLines, Converter={converters:IsEnumerableNullOrEmptyConverter}}"
                                                    TargetType="ImageButton"
                                                    Value="True">
                                                    <Setter Property="Opacity" Value="1" />
                                                </DataTrigger>

                                            </ImageButton.Triggers>
                                        </ImageButton>


                                        <VerticalStackLayout
                                            x:Name="LyricsSection"
                                            HorizontalOptions="Center"
                                            IsVisible="True"
                                            VerticalOptions="Center">
                                            <VerticalStackLayout.Triggers>

                                                <DataTrigger
                                                    Binding="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
                                                    TargetType="VerticalStackLayout"
                                                    Value="true">
                                                    <Setter Property="IsVisible" Value="True" />
                                                </DataTrigger>

                                                <DataTrigger
                                                    Binding="{Binding IsPlaying}"
                                                    TargetType="VerticalStackLayout"
                                                    Value="false">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>

                                                <DataTrigger
                                                    Binding="{Binding AllLines.Count, Converter={converters:CollectionSizeToVisibility}}"
                                                    TargetType="VerticalStackLayout"
                                                    Value="false">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>
                                            </VerticalStackLayout.Triggers>

                                            <Label
                                                FontSize="15"
                                                HorizontalTextAlignment="Center"
                                                Opacity="0.7"
                                                Text="{Binding PreviousLine.Text}" />
                                            <Grid HorizontalOptions="Center">
                                                <Border BackgroundColor="{AppThemeBinding Dark=#1e1e1e}" Opacity="0.7" />
                                                <Label
                                                    Margin="10"
                                                    FontAttributes="Bold"
                                                    FontSize="36"
                                                    HorizontalTextAlignment="Center"
                                                    Opacity="1"
                                                    Text="{Binding CurrentLine.Text}"
                                                    TextColor="DarkSlateBlue">
                                                    <Label.Triggers />
                                                </Label>
                                            </Grid>
                                            <Label
                                                FontSize="17"
                                                HorizontalTextAlignment="Center"
                                                Opacity="0.7"
                                                Text="{Binding NextLine.Text}" />
                                        </VerticalStackLayout>


                                    </Grid>

                                </Border>
                                <Label
                                    FontAttributes="Bold"
                                    FontSize="20"
                                    HorizontalOptions="Center"
                                    HorizontalTextAlignment="Justify"
                                    LineBreakMode="WordWrap"
                                    Text="{Binding CurrentPlayingSongView.Title}">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                                    </Label.GestureRecognizers>
                                    <FlyoutBase.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem
                                                Command="{Binding ShareSongDetailsAsTextCommand}"
                                                CommandParameter="{Binding CurrentPlayingSongView}"
                                                IconImageSource="shared.png"
                                                Text="Share Song" />
                                            <MenuFlyoutItem
                                                Clicked="ShowBtmSheet_Clicked"
                                                IconImageSource="textitalicsquare.png"
                                                Text="Share Title Only" />
                                        </MenuFlyout>
                                    </FlyoutBase.ContextFlyout>

                                </Label>
                                <HorizontalStackLayout HorizontalOptions="Center">
                                    <syncf:SfEffectsView
                                        x:Name="AddFavoriteRatingToSong"
                                        TouchUp="AddFavoriteRatingToSong_TouchUp"
                                        TouchUpCommandParameter="{Binding CurrentPlayingSongView}">

                                        <Grid>


                                            <ImageButton
                                                windows:VisualElement.AccessKey="H"
                                                BackgroundColor="Transparent"
                                                Command="{Binding AddFavoriteRatingToSongCommand}"
                                                CommandParameter="{Binding CurrentPlayingSongView}"
                                                Source="heart.png"
                                                WidthRequest="58">
                                                <ImageButton.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding CurrentPlayingSongView.IsFavorite}"
                                                        TargetType="ImageButton"
                                                        Value="False">
                                                        <Setter Property="Source" Value="heartbroken.png" />
                                                        <Setter Property="ToolTipProperties.Text" Value="Not Favorite" />

                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding CurrentPlayingSongView.IsFavorite}"
                                                        TargetType="ImageButton"
                                                        Value="True">
                                                        <Setter Property="Source" Value="heartlock.png" />
                                                        <Setter Property="ToolTipProperties.Text" Value="Favorite" />


                                                    </DataTrigger>
                                                </ImageButton.Triggers>
                                            </ImageButton>
                                            <Label HorizontalOptions="Center" Text="{Binding CurrentPlayingSongView.NumberOfTimesFaved}" />

                                        </Grid>
                                    </syncf:SfEffectsView>
                                    <Button
                                        BackgroundColor="{Binding CurrentPlaySongDominantColor}"
                                        BorderWidth="0"
                                        Clicked="NavigateToSelectedSongPageContextMenuAsync"
                                        Opacity="0.6"
                                        Text="{Binding CurrentPlayingSongView.PlayCompletedCount}"
                                        TextColor="{AppThemeBinding Light=Black,
                                                                    Dark=White}"
                                        ToolTipProperties.Text="Number of Dims (Click)"
                                        WidthRequest="60" />

                                </HorizontalStackLayout>

                                <Grid ColumnDefinitions="*,60">
                                    <Button
                                        x:Name="QuickFilterBtn"
                                        Grid.Column="0"
                                        Padding="5"
                                        BackgroundColor="Transparent"
                                        BorderWidth="0"
                                        FontSize="16"
                                        HorizontalOptions="Start"
                                        Text="{Binding CurrentPlayingSongView.ArtistName}"
                                        TextColor="{AppThemeBinding Light=Black,
                                                                    Dark=White}"
                                        ToolTipProperties.Text="{Binding CurrentPlayingSongView.ArtistName}">

                                        <Button.GestureRecognizers>
                                            <PointerGestureRecognizer
                                                PointerPressedCommandParameter="{Binding CurrentPlayingSongView.OtherArtistsName}"
                                                PointerReleased="QuickFilterGest_PointerReleased"
                                                PointerReleasedCommandParameter="artist" />
                                        </Button.GestureRecognizers>
                                    </Button>

                                    <syncf:SfChip
                                        x:Name="ViewLyricsChip"
                                        Grid.Column="1"
                                        Clicked="ViewLyricsChip_Clicked"
                                        CornerRadius="20"
                                        ImageSize="45"
                                        ImageSource="lyrics.png"
                                        IsVisible="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
                                        ShowIcon="True"
                                        StrokeThickness="0" />
                                </Grid>
                                <syncf:SfEffectsView
                                    Margin="2,0"
                                    BackgroundColor="Transparent"
                                    TouchDown="Quickalbumsearch_Clicked"
                                    TouchDownCommandParameter="album"
                                    TouchUpCommandParameter="{Binding CurrentPlayingSongView.AlbumName}">

                                    <Label
                                        BackgroundColor="Transparent"
                                        FontSize="16"
                                        HorizontalOptions="Start"
                                        Text="{Binding CurrentPlayingSongView.AlbumName}"
                                        TextTransform="Lowercase" />

                                </syncf:SfEffectsView>


                                <HorizontalStackLayout
                                    x:Name="MediaBtns"
                                    Grid.Row="0"
                                    Margin="0"
                                    HeightRequest="50"
                                    Spacing="10"
                                    VerticalOptions="Center">

                                    <HorizontalStackLayout.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="HeightRequest" Value="50" />
                                            <Setter Property="WidthRequest" Value="60" />
                                        </Style>
                                    </HorizontalStackLayout.Resources>


                                    <Button
                                        Background="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding ToggleShuffleCommand}"
                                        ImageSource="shuffle.png"
                                        IsEnabled="{Binding IsTimestampingInProgress, Converter={converters:BoolToInverseConverter}}"
                                        StyleClass="MediaBtnChip"
                                        ToolTipProperties.Text="{Binding IsShuffleActive, Converter={converters:BoolToYesNoConverter}, StringFormat='Is Shuffle Active? : {0}'}"
                                        WidthRequest="60">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>
                                        <Button.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsShuffleActive}"
                                                TargetType="Button"
                                                Value="True">
                                                <Setter Property="BorderColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                                <Setter Property="BorderWidth" Value="2" />

                                            </DataTrigger>
                                        </Button.Triggers>
                                    </Button>


                                    <Button
                                        x:Name="SkipPrev"
                                        windows:VisualElement.AccessKey="B"
                                        windows:VisualElement.AccessKeyPlacement="Bottom"
                                        Background="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding PreviousTrackCommand}"
                                        ImageSource="skipprevious.png"
                                        IsEnabled="{Binding IsTimestampingInProgress, Converter={converters:BoolToInverseConverter}}"
                                        StyleClass="MediaBtnChip">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>
                                    </Button>
                                    <Button
                                        x:Name="PlayPauseBtn"
                                        windows:VisualElement.AccessKey="P"
                                        windows:VisualElement.AccessKeyPlacement="Bottom"
                                        Background="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding PlayPauseToggleCommand}"
                                        ImageSource="play.png"
                                        StyleClass="MediaBtnChip">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>

                                        <Button.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsPlaying}"
                                                TargetType="Button"
                                                Value="true">
                                                <Setter Property="ImageSource" Value="pause.png" />
                                            </DataTrigger>

                                            <DataTrigger
                                                Binding="{Binding IsPlaying}"
                                                TargetType="Button"
                                                Value="false">
                                                <Setter Property="ImageSource" Value="play.png" />
                                            </DataTrigger>
                                        </Button.Triggers>
                                    </Button>
                                    <Button
                                        x:Name="SkipNext"
                                        windows:VisualElement.AccessKey="N"
                                        windows:VisualElement.AccessKeyPlacement="Bottom"
                                        Background="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding NextTrackCommand}"
                                        ImageSource="skipnext.png"
                                        IsEnabled="{Binding IsTimestampingInProgress, Converter={converters:BoolToInverseConverter}}"
                                        StyleClass="MediaBtnChip">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>
                                    </Button>


                                    <Button
                                        Background="Transparent"
                                        Command="{Binding ToggleRepeatModeCommand}"
                                        ImageSource="repeat.png"
                                        StyleClass="MediaBtnChip"
                                        ToolTipProperties.Text="{Binding CurrentRepeatMode, StringFormat='Current Repeat Mode : {0}'}"
                                        WidthRequest="60">
                                        <Button.Behaviors>
                                            <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                                        </Button.Behaviors>
                                        <Button.Triggers>
                                            <DataTrigger
                                                Binding="{Binding CurrentRepeatMode}"
                                                TargetType="Button"
                                                Value="0">
                                                <Setter Property="BorderColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                                <Setter Property="BorderWidth" Value="1" />


                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding CurrentRepeatMode}"
                                                TargetType="Button"
                                                Value="1">
                                                <Setter Property="BorderColor" Value="LightBlue" />
                                                <Setter Property="BorderWidth" Value="2" />

                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding CurrentRepeatMode}"
                                                TargetType="Button"
                                                Value="2">
                                                <Setter Property="BorderColor" Value="Orange" />
                                                <Setter Property="BorderWidth" Value="2" />

                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding CurrentRepeatMode}"
                                                TargetType="Button"
                                                Value="3">
                                                <Setter Property="BorderColor" Value="Red" />
                                                <Setter Property="BorderWidth" Value="2" />

                                            </DataTrigger>
                                        </Button.Triggers>
                                    </Button>
                                </HorizontalStackLayout>
                                <Slider
                                    x:Name="TrackProgressSlider"
                                    Grid.Column="1"
                                    DragCompleted="Slider_DragCompleted"
                                    Maximum="{Binding CurrentPlayingSongView.DurationInSeconds}"
                                    MaximumTrackColor="{AppThemeBinding Dark=White,
                                                                        Light=Black}"
                                    Minimum="0"
                                    MinimumTrackColor="DarkSlateBlue"
                                    ThumbColor="{Binding CurrentPlaySongDominantColor}"
                                    Value="{Binding CurrentTrackPositionSeconds}" />
                                <HorizontalStackLayout HorizontalOptions="Center" Spacing="10">
                                    <Label
                                        Grid.Column="0"
                                        HorizontalTextAlignment="Start"
                                        Text="{Binding CurrentTrackPositionSeconds, Converter={StaticResource DurationConverter}}"
                                        TextColor="{AppThemeBinding Light=DarkSlateblue,
                                                                    Dark=white}">
                                        <Label.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsPlaying}"
                                                TargetType="Label"
                                                Value="True">
                                                <Setter Property="TextColor" Value="DarkSlateBlue" />
                                                <Setter Property="FontAttributes" Value="Bold" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                    <Label Text=":" />

                                    <Label
                                        Grid.Column="2"
                                        BackgroundColor="Transparent"
                                        HorizontalTextAlignment="Start"
                                        Text="{Binding CurrentPlayingSongView.DurationInSeconds, Converter={StaticResource DurationConverter}}" />

                                </HorizontalStackLayout>

                            </VerticalStackLayout>
                        </ScrollView>
                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>

                <syncf:SfTabItem Header="AudioSection">
                    <syncf:SfTabItem.Content>
                        <Grid RowDefinitions="auto,*" RowSpacing="20">
                            <VerticalStackLayout Grid.Row="0">
                                <Label
                                    FontSize="20"
                                    HorizontalTextAlignment="Center"
                                    Text="{Binding AudioDevices.Count, StringFormat='{0} Output Devices'}" />
                            </VerticalStackLayout>

                            <CollectionView
                                Grid.Row="1"
                                ItemsSource="{Binding AudioDevices}"
                                SelectedItem="{Binding SelectedAudioDevice}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:AudioOutputDevice">
                                        <Border>

                                            <Border.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IsDefaultDevice}"
                                                    TargetType="Border"
                                                    Value="True">
                                                    <Setter Property="Stroke" Value="DarkSlateBlue" />
                                                    <Setter Property="StrokeThickness" Value="2" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding IsDefaultDevice}"
                                                    TargetType="Border"
                                                    Value="False">
                                                    <Setter Property="Stroke" Value="White" />
                                                    <Setter Property="StrokeThickness" Value="0" />
                                                </DataTrigger>
                                            </Border.Triggers>


                                            <VerticalStackLayout Margin="10" Spacing="10">
                                                <Label
                                                    FontSize="24"
                                                    HorizontalTextAlignment="Center"
                                                    IsVisible="{Binding IsDefaultDevice}"
                                                    Text="Active Device"
                                                    TextColor="DarkSlateBlue" />

                                                <Label Text="{Binding Name}" />
                                                <Label Text="{Binding ProductName}" />
                                                <Label Text="{Binding IconString}" />
                                                <Label Text="{Binding Volume, StringFormat='Volume : {0:n2}%'}" />




                                                <Button
                                                    Grid.Column="1"
                                                    Clicked="SetPrefdevice_Clicked"
                                                    Command="{Binding SetPreferredAudioDeviceViewCommand, Source={RelativeSource AncestorType={x:Type vm:BaseViewModelWin}}}"
                                                    CommandParameter="{Binding .}"
                                                    IsVisible="{Binding IsDefaultDevice, Converter={converters:BoolToInverseConverter}}"
                                                    Text="Select Device" />
                                            </VerticalStackLayout>
                                        </Border>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>

                        </Grid>

                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>
                <syncf:SfTabItem x:Name="LyricsView">
                    <Grid Margin="5" RowDefinitions="auto,*">
                        <Grid Grid.Row="0" ColumnDefinitions="*,55">
                            <syncf:SfChip
                                x:Name="OpenLyricsViewOnly"
                                Grid.Column="1"
                                Clicked="OpenLyricsViewOnly_Clicked"
                                HorizontalOptions="End"
                                ImageSize="40"
                                ImageSource="maximize.png"
                                StrokeThickness="0"
                                ToolTipProperties.Text="Open Lyrics Window only" />
                        </Grid>

                        <CollectionView
                            x:Name="AllLyricsColView"
                            Grid.Row="1"
                            ItemsSource="{Binding AllLines}"
                            SelectedItem="{Binding CurrentLine}"
                            SelectionChanged="AllLyricsColView_SelectionChanged"
                            SelectionMode="Single">
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:LyricPhraseModelView">
                                    <Label
                                        FontSize="{Binding NowPlayingLyricsFontSize}"
                                        HorizontalTextAlignment="Center"
                                        Text="{Binding Text}"
                                        TextColor="{Binding HighlightColor}" />
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </Grid>
                </syncf:SfTabItem>
            </syncf:SfTabView>

        </Grid>
    </Shell.FlyoutContent>


    <Shell.FlyoutFooter>
        <Grid
            x:Name="TopLeft"
            BackgroundColor="{AppThemeBinding Light=#999999,
                                              Dark=transparent}"
            RowDefinitions="*,*">
            <Grid.GestureRecognizers>
                <PointerGestureRecognizer PointerReleased="TogglePanelClicked" />
            </Grid.GestureRecognizers>
            <VerticalStackLayout
                Grid.Row="0"
                Margin="5"
                Spacing="5">
                <HorizontalStackLayout HorizontalOptions="Center" Spacing="15">

                    <ImageButton
                        x:Name="MainPBView"
                        Clicked="MainPBView_Clicked"
                        Source="playcircle.png"
                        ToolTipProperties.Text="Main PlayBack Tab" />

                    <ImageButton
                        x:Name="ViewDeviceAudio"
                        Clicked="ViewDeviceAudio_Clicked"
                        Source="headphonesround.png"
                        ToolTipProperties.Text="View Audio Output Devices" />

                    <ImageButton
                        x:Name="ViewNowPlayingQueue"
                        Clicked="ViewNowPlayingQueue_Clicked"
                        Source="musicplaylist.png" />

                </HorizontalStackLayout>
                <Button
                    Grid.Row="0"
                    BackgroundColor="Transparent"
                    Command="{Binding ToggleAppThemeCommand}"
                    FontAttributes="Bold"
                    FontSize="13"
                    HorizontalOptions="Center"
                    Text="{Binding IsDarkModeOn}"
                    TextColor="{AppThemeBinding Light=Black,
                                                Dark=White}">
                    <Button.Triggers>
                        <DataTrigger
                            Binding="{Binding IsDarkModeOn}"
                            TargetType="Button"
                            Value="True">
                            <Setter Property="Text" Value="Dark Mode On" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding IsDarkModeOn}"
                            TargetType="Button"
                            Value="False">
                            <Setter Property="Text" Value="Light Mode On" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>

                <Button
                    x:Name="ViewNPQ"
                    windows:VisualElement.AccessKey="Q"
                    windows:VisualElement.AccessKeyPlacement="Bottom"
                    Background="Transparent"
                    BorderWidth="0"
                    Clicked="NowPlayingQueueBtnClicked"
                    Text="View Now Playing Queue"
                    TextColor="{AppThemeBinding Light=Black,
                                                Dark=White}"
                    ToolTipProperties.Text="{Binding CurrentPlaybackQuery, StringFormat='Current Query {0}'}">

                    <Button.Behaviors>

                        <toolkit:IconTintColorBehavior TintColor="{Binding CurrentPlaySongDominantColor}" />
                    </Button.Behaviors>
                </Button>

                <Grid ColumnDefinitions="auto,*" ColumnSpacing="10">

                    <Label Text="Volume" />
                    <syncf:SfEffectsView
                        x:Name="VolumeSlider"
                        Loaded="SfEffectsView_Loaded"
                        Unloaded="SfEffectsView_Unloaded" />
                    <Slider
                        Grid.Column="1"
                        Loaded="VolumeSlider_Loaded"
                        MaximumTrackColor="{AppThemeBinding Dark=White,
                                                            Light=Black}"
                        Minimum="0"
                        MinimumTrackColor="DarkSlateBlue"
                        ThumbColor="{Binding CurrentPlaySongDominantColor}"
                        ToolTipProperties.Text="{Binding DeviceVolumeLevel}"
                        Unloaded="VolumeSlider_Unloaded"
                        Value="{Binding DeviceVolumeLevel}" />

                </Grid>
            </VerticalStackLayout>

        </Grid>

    </Shell.FlyoutFooter>
    <ShellContent
        Title="Home"
        ContentTemplate="{DataTemplate views:HomePage}"
        Route="MainPage" />
</Shell>