<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="Dimmer_MAUI.AppShell"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:Dimmer_MAUI"
    xmlns:viewsD="clr-namespace:Dimmer_MAUI.Views.Desktop"    
    xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
    x:DataType="vm:HomePageVM"
    
    x:Name="myPage"
    Shell.FlyoutBehavior="Flyout"
    FlyoutIsPresented="False"
    xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit" 
    xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters"
    xmlns:models="clr-namespace:Dimmer_MAUI.Utilities.Models" 
    Shell.ForegroundColor="DarkSlateBlue"
    Shell.TabBarTitleColor="White"    
    BackgroundColor="Red"
    
    Shell.TabBarUnselectedColor="Gray"
    Shell.FlyoutWidth="350"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    Shell.NavBarIsVisible="False"     
    >
    

    <!--Shell.TabBarUnselectedColor="Gray"-->

    <!--<Shell.FlyoutHeader >
        <VerticalStackLayout >
            <VerticalStackLayout.Resources>
                <ResourceDictionary>
                    <Style TargetType="Label">
                        <Setter Property="TextColor" Value="Grey" />
                    </Style>
                </ResourceDictionary>
            </VerticalStackLayout.Resources>
            <Label Text="{Binding MySelectedSong.Title}" HorizontalOptions="Center" FontSize="18"
                   FontAttributes="Bold"/>
            <Label Text="{Binding MySelectedSong.ArtistName}" HorizontalOptions="Center"
                   FontSize="12"/>
        </VerticalStackLayout>
    </Shell.FlyoutHeader>
    <Shell.FlyoutContent>
        <Grid               RowDefinitions="Auto,auto">

            <VerticalStackLayout Grid.Row="0" IsVisible="False"
            
            Spacing="10" Padding="10"
                             >
                <VerticalStackLayout.Resources>
                    <ResourceDictionary>
                        <Style TargetType="syncf:SfEffectsView">
                            <Setter Property="TouchDownEffects" Value="Ripple"/>

                            <Setter Property="RippleBackground" Value="DarkSlateBlue"/>
                            <Setter Property="RippleAnimationDuration" Value="350"/>

                        </Style>
                        <Style TargetType="Label">
                            <Setter Property="Margin" Value="10" />

                        </Style>
                        <Style TargetType="Border">

                            <Setter Property="BackgroundColor" Value="#1D1932"/>
                            <Setter Property="Stroke" Value="Transparent"/>
                            <Setter Property="StrokeShape" Value="RoundRectangle 8"/>
                        </Style>
                    </ResourceDictionary>
                </VerticalStackLayout.Resources>
                <Border x:Name="GoToSong">
                    <syncf:SfEffectsView TouchDownCommand="{Binding NavToSingleSongShellCommand}">
                        <Label Text="Song Overview" />
                    </syncf:SfEffectsView>
                </Border>
                <Border x:Name="MultiSelect">
                    <syncf:SfEffectsView TouchUpEffects="Selection,Ripple"
                    TouchDown="MultiSelect_TouchDown">
                        <Label Text="Toggle MultiSelection"/>
                    </syncf:SfEffectsView>
                </Border>
                <Border IsVisible="False">
                    <syncf:SfEffectsView TouchDownCommand="{Binding BindingContext.OpenRepeatSetterPopupCommand, Source={x:Reference myPage}}" >
                        <Label Text="Set Repeat Count"/>
                    </syncf:SfEffectsView>
                </Border>
                <Border>
                    <toolkit:Expander x:Name="UtilsExp">
                        <toolkit:Expander.Header>
                            <syncf:SfEffectsView 
                            TouchDownEffects="Highlight" BackgroundColor="#1D1932"
                            HighlightBackground="DarkSlateBlue">

                                <Label Text="Utilities" HorizontalOptions="Start"
                            HeightRequest="20" FontAttributes="Bold"/>
                            </syncf:SfEffectsView>
                        </toolkit:Expander.Header>
                        <toolkit:Expander.Content>

                            <VerticalStackLayout>

                                <syncf:SfEffectsView TouchDownCommand="{Binding OpenEditSongPopupCommand}">
                                    <Label Text="Edit Song" />
                                </syncf:SfEffectsView>
                                <syncf:SfEffectsView TouchDownCommand="{Binding DeleteFileCommand}"  
                                        TouchDownCommandParameter="{Binding MySelectedSong}">
                                    <Label Text="Remove From Device"/>
                                </syncf:SfEffectsView>
                                <syncf:SfEffectsView TouchDownCommand="{Binding OpenSongFolderCommand}">
                                    <Label Text="View File Explorer"/>
                                </syncf:SfEffectsView>
                            </VerticalStackLayout>

                        </toolkit:Expander.Content>

                    </toolkit:Expander>

                </Border>
                <Border>
                    <toolkit:Expander>
                        <toolkit:Expander.Header>
                            <syncf:SfEffectsView
                            TouchDownEffects="Highlight"
                            BackgroundColor="#1D1932"
                            HighlightBackground="DarkSlateBlue">
                                <Label Text="Search On...*" FontAttributes="Bold"/>
                            </syncf:SfEffectsView>
                        </toolkit:Expander.Header>
                        <toolkit:Expander.Content>

                            <VerticalStackLayout>

                                <syncf:SfEffectsView TouchDownCommand="{Binding CntxtMenuSearchCommand}">
                                    <syncf:SfEffectsView.TouchDownCommandParameter>
                                        <x:Int32>0</x:Int32>
                                    </syncf:SfEffectsView.TouchDownCommandParameter>
                                    <Label Text="Google"/>
                                </syncf:SfEffectsView>
                                <syncf:SfEffectsView TouchDownCommand="{Binding CntxtMenuSearchCommand}">
                                    <syncf:SfEffectsView.TouchDownCommandParameter>
                                        <x:Int32>1</x:Int32>
                                    </syncf:SfEffectsView.TouchDownCommandParameter>
                                    <Label Text="YouTube"/>
                                </syncf:SfEffectsView>
                                <syncf:SfEffectsView TouchDownCommand="{Binding CntxtMenuSearchCommand}">
                                    <syncf:SfEffectsView.TouchDownCommandParameter>
                                        <x:Int32>2</x:Int32>
                                    </syncf:SfEffectsView.TouchDownCommandParameter>
                                    <Label Text="Spotify"/>
                                </syncf:SfEffectsView>
                            </VerticalStackLayout>

                        </toolkit:Expander.Content>

                    </toolkit:Expander>

                </Border>
                <Border>
                    -->
    <!--<syncf:SfEffectsView >
                <Label Text="Add To Playlist"/>
            </syncf:SfEffectsView>-->
    
    <!--
                </Border>
            </VerticalStackLayout>

            <FlexLayout JustifyContent="SpaceBetween" Grid.Row="1" x:Name="MultiSelectView"
                        VerticalOptions="End" IsVisible="False"
                        Padding="10,5">

                <Label Text="{Binding MultiSelectText}" VerticalTextAlignment="Center"/>

                <Button x:Name="DltImgBtn" HorizontalOptions="End" Text="Delete"
                    Command="{Binding DeleteFileCommand}"  CommandParameter="{Binding MySelectedSong}">

                </Button>
            </FlexLayout>
            
           
        </Grid>

    </Shell.FlyoutContent>

    <Shell.FlyoutFooter>
        <VerticalStackLayout VerticalOptions="End" 
                             IsVisible="True">
            <VerticalStackLayout.Resources>
                <ResourceDictionary>
                    <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
                    <converters:BoolToInverseConverter x:Key="BoolToInverse"/>

                    <Style TargetType="Label">
                        <Setter Property="HorizontalTextAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="16"/>
                    </Style>

                    <Style TargetType="Border">
                        <Setter Property="StrokeShape" Value="RoundRectangle 20"/>
                        <Setter Property="HeightRequest" Value="50"/>
                        <Setter Property="VisualStateManager.VisualStateGroups">
                            <VisualStateGroupList>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualState Name="Normal">
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="Transparent"/>
                                            <Setter Property="Stroke" Value="Transparent"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="DarkSlateBlue"/>
                                            <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateGroupList>
                        </Setter>

                    </Style>


                </ResourceDictionary>
            </VerticalStackLayout.Resources>
            <Image Source="onlinecloud.gif"  IsVisible="False"
                   HeightRequest="30" HorizontalOptions="Start"/>
            -->
    <!--IsVisible="{Binding IsLoggedIn}"-->
    
    <!--
            
            <syncf:SfTabView x:Name="tabView" SelectionChanged="TabView_SelectionChanged"
                             IndicatorPlacement="Top" 
                             TabBarPlacement="Bottom" ContentTransitionDuration="250">
                <syncf:SfTabView.Items>
                    <syncf:SfTabItem TextColor="White" Header="Over View">

                        <syncf:SfTabItem.Content>
                            <VerticalStackLayout VerticalOptions="End" Spacing="10" 
                                                 Margin="10,0">
                                
                                <toolkit:AvatarView ImageSource="{Binding TemporarilyPickedSong.CoverImagePath}" 
                                        Text="{Binding TemporarilyPickedSong.Title}" 
                                        WidthRequest="245" HeightRequest="215" 
                                        BorderWidth="0" CornerRadius="15">
                                    <toolkit:AvatarView.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ToggleNowPlayingBtmSheetCommand}"/>
                                    </toolkit:AvatarView.GestureRecognizers>
                                    <toolkit:AvatarView.Triggers>
                                        <DataTrigger TargetType="toolkit:AvatarView" Binding="{Binding CurrentQueue}" Value="0">
                                            <Setter Property="StrokeThickness" Value="0"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="toolkit:AvatarView" Binding="{Binding CurrentQueue}" Value="1">
                                            <Setter Property="StrokeThickness" Value="2"/>
                                        </DataTrigger>
                                    </toolkit:AvatarView.Triggers>
                                </toolkit:AvatarView>

                                <Label Text="{Binding TemporarilyPickedSong.Title}" 
                    LineBreakMode="HeadTruncation" FontSize="13"/>
                                <Label Text="{Binding TemporarilyPickedSong.ArtistName}" 
                    LineBreakMode="TailTruncation" Opacity="0.6" />
                                <Label Text="{Binding TemporarilyPickedSong.AlbumName}" 
                           LineBreakMode="HeadTruncation"/>

                                <Grid ColumnDefinitions="Auto,*,Auto" Padding="10,0" >

                                    <Label Grid.Column="0" VerticalOptions="Center" 
                                           Text="{Binding CurrentPositionInSeconds, Converter={StaticResource DurationConverter}}"/>
                                    
                                    <Slider Grid.Column="1" DragCompleted="Slider_DragCompleted" 
                                            Value="{Binding CurrentPositionPercentage, Mode=TwoWay}" 
                                            MinimumTrackColor="DarkSlateBlue" x:Name="slid" VerticalOptions="Start" 
                                            Margin="15,0" >
                                    </Slider>

                                    <Label Grid.Column="2" VerticalOptions="Center" 
                                           Text="{Binding TemporarilyPickedSong.DurationInSeconds, Converter={StaticResource DurationConverter}}"
                                           Opacity="0.6"/>

                                </Grid>

                                <HorizontalStackLayout Spacing="15"
                                                       Margin="0,0,0,15"
                                                       BackgroundColor="Transparent"
              HorizontalOptions="Center" >
                                    <Border WidthRequest="55" StrokeShape="RoundRectangle 30" 
>
                                        <Border.GestureRecognizers>
                                            <TapGestureRecognizer x:Name="ToggleRepeat" Tapped="ToggleRepeat_Tapped">
                                                <TapGestureRecognizer.CommandParameter>
                                                    <x:Boolean>True</x:Boolean>
                                                </TapGestureRecognizer.CommandParameter>
                                            </TapGestureRecognizer>
                                        </Border.GestureRecognizers>

                                        <Image>
                                            <Image.Triggers>
                                                <DataTrigger TargetType="Image" Value="0" Binding="{Binding CurrentRepeatMode}">
                                                    <Setter Property="Source" Value="repoff.png" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image" Value="1" Binding="{Binding CurrentRepeatMode}">
                                                    <Setter Property="Source" Value="repoff.png"/>
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image" Value="2" Binding="{Binding CurrentRepeatMode}">
                                                    <Setter Property="Source" Value="repone.png"/>
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image" Value="4" Binding="{Binding CurrentRepeatMode}">
                                                    <Setter Property="Source" Value="repone.png"/>
                                                </DataTrigger>
                                            </Image.Triggers>

                                            <Image.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Dark=White, Light=Black}"/>
                                            </Image.Behaviors>
                                        </Image>
                                    </Border>

                                    <Border >
                                        <ImageButton Command="{Binding PlayPreviousSongCommand}" Source="stepbackward.png" 
                                     ToolTipProperties.Text="Play Previous">

                                            <ImageButton.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="White" />
                                            </ImageButton.Behaviors>
                                        </ImageButton>

                                    </Border>

                                    <Border WidthRequest="55" StrokeShape="RoundRectangle 30" 
           >
                                        <Border.GestureRecognizers>
                                            <TapGestureRecognizer Command="{Binding PlayPauseSongCommand}">
                                                
                                            </TapGestureRecognizer>
                                        </Border.GestureRecognizers>

                                        <Image>
                                            <Image.Triggers>
                                                <DataTrigger TargetType="Image" Value="True" Binding="{Binding IsPlaying}">
                                                    <Setter Property="Source" Value="pauseicon.png"/>
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image" Value="False" Binding="{Binding IsPlaying}">
                                                    <Setter Property="Source" Value="playdark.png"/>
                                                </DataTrigger>
                                            </Image.Triggers>

                                            <Image.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Dark=White, Light=Black}"/>
                                            </Image.Behaviors>
                                        </Image>
                                    </Border>

                                    <Border WidthRequest="55" StrokeShape="RoundRectangle 30"
                                            HeightRequest="55" Padding="5,0,2,0">

                                        <ImageButton Source="playdark.png" Clicked="PlayPauseBtn_Clicked" x:Name="PlayPauseBtn">
                                           
                                            <ImageButton.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="White" />
                                            </ImageButton.Behaviors>
                                        </ImageButton>
                                    </Border>

                                    <Border>
                                        <ImageButton Command="{Binding PlayNextSongCommand}"
                  ToolTipProperties.Text="Play Next" Source="stepforward.png">
                                            <ImageButton.Behaviors>
                                                <toolkit:IconTintColorBehavior TintColor="White" />
                                            </ImageButton.Behaviors>
                                        </ImageButton>
                                    </Border>

                                    <Border>
                                        <Border.Triggers>
                                            <DataTrigger TargetType="Border" Binding="{Binding IsShuffleOn}" Value="True">
                                                <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                                <Setter Property="StrokeThickness" Value="3"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Border" Binding="{Binding IsShuffleOn}" Value="False">
                                                <Setter Property="Stroke" Value="Transparent"/>
                                            </DataTrigger>
                                        </Border.Triggers>
                                        <VerticalStackLayout>

                                            <ImageButton Command="{Binding ToggleShuffleStateCommand}"  Source="shuffledark.png"
                               WidthRequest="15">
                                                <ImageButton.Behaviors>
                                                    <toolkit:IconTintColorBehavior TintColor="White" />
                                                </ImageButton.Behaviors>
                                                <ImageButton.CommandParameter>
                                                    <x:Boolean>True</x:Boolean>
                                                </ImageButton.CommandParameter>
                                            </ImageButton>

                                        </VerticalStackLayout>
                                    </Border>
                                </HorizontalStackLayout>
                                <syncf:SfChip Command="{Binding ToggleNowPlayingBtmSheetCommand}" IsVisible="False"
              Text="Queue" x:Name="OpenCloseQBtmSheet"/>
                            </VerticalStackLayout>
                        </syncf:SfTabItem.Content>
                    </syncf:SfTabItem>
                    
                    <syncf:SfTabItem Header="Lyrics">
                        <syncf:SfTabItem.Content>
                            <Grid>
                                <CollectionView x:Name="LyricsColView" IsVisible="True" HeightRequest="500"
    
ItemsSource="{Binding MySelectedSong.SyncLyrics}" 
SelectionChanged="LyricsColView_SelectionChanged"  SelectionMode="Single" SelectedItem="{Binding CurrentLyricPhrase}"
EmptyView="No Syncronized Lyrics ..." >
                                    <CollectionView.ItemTemplate>
                                        <DataTemplate x:DataType="models:LyricPhraseModel">

                                            <Label Text="{Binding Text}" FontSize="{Binding NowPlayingLyricsFontSize}" />



                                        </DataTemplate>
                                    </CollectionView.ItemTemplate>
                                </CollectionView>

                            </Grid>
                          
                        </syncf:SfTabItem.Content>
                    </syncf:SfTabItem>

                    
                </syncf:SfTabView.Items>
            </syncf:SfTabView>
         
            

        </VerticalStackLayout>
        
        
    </Shell.FlyoutFooter>-->
    
    <FlyoutItem FlyoutDisplayOptions="AsSingleItem" x:Name="shelltabbar" >
        
        <Tab Title="Home" x:Name="homeTab" Icon="house.png">
            
            <ShellContent
                ContentTemplate="{DataTemplate viewsD:MainPageD}">
                
            </ShellContent>
        </Tab>

        <Tab Title="Artists" x:Name="ArtistTab" Icon="artistdark.png">
            <ShellContent ContentTemplate="{DataTemplate viewsD:ArtistsPageD}"/>
        </Tab>
        <Tab Title="Albums" x:Name="albumTab" Icon="albums11.png">
            <ShellContent ContentTemplate="{DataTemplate viewsD:AlbumsPageD}"/>
        </Tab>

        <Tab Title="Playlists" x:Name="playlistsTab" Icon="playlist.png">
            <ShellContent 
                ContentTemplate="{DataTemplate viewsD:PlaylistsPageD}"
                Route="PlaylistsPageD"/>
            
        </Tab>
        <Tab Title="Stats" x:Name="statsTab" Icon="stats.png">
            <ShellContent ContentTemplate="{DataTemplate viewsD:FullStatsPageD}"
                Route="FullStatsD"/>
        </Tab>
        <Tab Title="Settings" x:Name="settingsTab" Icon="settings.png">
            <ShellContent ContentTemplate="{DataTemplate viewsD:SettingsPageD}"
                Route="SettingsPageD"/>
        </Tab>

        <!--<Tab>
            <ShellContent Title="Exit"/>
        </Tab>-->
    </FlyoutItem>

</Shell>
