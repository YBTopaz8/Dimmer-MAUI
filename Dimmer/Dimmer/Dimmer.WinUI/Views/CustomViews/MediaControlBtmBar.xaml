<?xml version="1.0" encoding="utf-8" ?>
<ContentView
    x:Class="Dimmer.WinUI.Views.CustomViews.MediaControlBtmBar"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
    xmlns:models="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
    xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:vm="clr-namespace:Dimmer.WinUI.ViewModel"
    x:Name="BtmBarView"
    x:DataType="vm:BaseViewModelWin">

    <ContentView.Resources>
        <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter" />
        <converters:BytesToMegabytesConverter x:Key="FileSizeConverter" />
        <converters:BytesArrayToImageSource x:Key="BytesToImageConverter" />
        <converters:BoolToInverseConverter x:Key="BoolToInverse" />
        <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter" />
        <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter" />
        <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter" />
        <converters:BoolToYesNoConverter x:Key="BoolToYesNo" />
        <converters:VolumeConverter x:Key="VolConverter" />
        <Style TargetType="Border">
            <Setter Property="StrokeShape" Value="RoundRectangle 20" />
            <Setter Property="HeightRequest" Value="50" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="Transparent" />
                                <Setter Property="Stroke" Value="Transparent" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="#B197FC" />
                                <Setter Property="Stroke" Value="#B197FC" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
    </ContentView.Resources>
    <ContentView.GestureRecognizers>

        <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered" PointerExited="PointerGestureRecognizer_PointerExited" />

    </ContentView.GestureRecognizers>


    <!--<Grid
        Margin="10,0"
        BackgroundColor="#191919"
        ColumnDefinitions="Auto,*">
        <Grid.GestureRecognizers>
            <TapGestureRecognizer NumberOfTapsRequired="2" Tapped="NavToSingleSongShell_Tapped" />
        </Grid.GestureRecognizers>

        <HorizontalStackLayout
            Grid.Column="0"
            Padding="5"
            Spacing="5"
            ToolTipProperties.Text="Click To View">
            <HorizontalStackLayout.GestureRecognizers>
                <TapGestureRecognizer Tapped="NavToSingleSongShell_Tapped" />
            </HorizontalStackLayout.GestureRecognizers>


            <VerticalStackLayout
                BackgroundColor="Transparent"
                VerticalOptions="Center"
                WidthRequest="200">


                <Label
                    FontSize="16"
                    HorizontalOptions="Start"
                    LineBreakMode="HeadTruncation"
                    Text="{Binding TemporarilyPickedSong.Title}" />
                <Label
                    HorizontalOptions="Start"
                    LineBreakMode="TailTruncation"
                    Opacity="0.6"
                    Text="{Binding TemporarilyPickedSong.ArtistName}" />
                <Label
                    HorizontalOptions="Start"
                    LineBreakMode="HeadTruncation"
                    Text="{Binding TemporarilyPickedSong.AlbumName}" />

            </VerticalStackLayout>

            <ImageButton
                Clicked="ShowCntxtMenuBtn_Clicked"
                CommandParameter="0"
                Opacity="1"
                Rotation="90"
                Source="more1.png" />

        </HorizontalStackLayout>
        <Grid Grid.Column="1" ColumnDefinitions="*,200">

            <VerticalStackLayout Grid.Column="0" HorizontalOptions="Fill">
                <HorizontalStackLayout
                    Padding="10,0"
                    BackgroundColor="Transparent"
                    HorizontalOptions="Center"
                    Spacing="15">

                    <Border StrokeShape="RoundRectangle 30" WidthRequest="55">
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer x:Name="ToggleRepeat" Tapped="ToggleRepeat_Tapped" />
                        </Border.GestureRecognizers>

                        <Image>
                            <Image.Triggers>
                                <DataTrigger
                                    Binding="{Binding RepeatMode}"
                                    TargetType="Image"
                                    Value="0">

                                    -->
    <!--  0 is for repeat off  -->
    <!--
                                    <Setter Property="Source" Value="repoff.png" />
                                </DataTrigger>

                                <DataTrigger
                                    Binding="{Binding RepeatMode}"
                                    TargetType="Image"
                                    Value="1">
                                    -->
    <!--  1 is for repeat all  -->
    <!--
                                    <Setter Property="Source" Value="repeat.png" />
                                </DataTrigger>

                                <DataTrigger
                                    Binding="{Binding RepeatMode}"
                                    TargetType="Image"
                                    Value="2">
                                    -->
    <!--  2 is for repeat one  -->
    <!--
                                    <Setter Property="Source" Value="repone.png" />
                                </DataTrigger>

                                <DataTrigger
                                    Binding="{Binding RepeatMode}"
                                    TargetType="Image"
                                    Value="4">
                                    <Setter Property="Source" Value="repone.png" />
                                </DataTrigger>

                            </Image.Triggers>
                        </Image>
                    </Border>


                    <Border>
                        <ImageButton
                            x:Name="PlayPrevious"
                            Clicked="PlayPrevious_Clicked"
                            Source="skipprevious.png"
                            ToolTipProperties.Text="Play Previous" />
                    </Border>

                    <HorizontalStackLayout>
                        <HorizontalStackLayout.GestureRecognizers>
                            <TapGestureRecognizer Tapped="PlayPauseSong_Tapped" />
                        </HorizontalStackLayout.GestureRecognizers>

                        <Border>
                            <Image
                                HeightRequest="45"
                                IsVisible="{Binding IsPlaying}"
                                Source="pause.png" />
                        </Border>
                        <Border>
                            <Image
                                HeightRequest="45"
                                IsVisible="{Binding IsPlaying, Converter={x:StaticResource BoolToInverse}}"
                                Source="playcircle.png" />
                        </Border>

                    </HorizontalStackLayout>

                    <Border>
                        <ImageButton
                            x:Name="PlayNext"
                            Clicked="PlayNext_Clicked"
                            HeightRequest="55"
                            Source="skipnext.png"
                            ToolTipProperties.Text="Play Next" />
                    </Border>

                    <Border>
                        <ImageButton
                            x:Name="ShuffleBtn"
                            Clicked="ShuffleBtn_Clicked"
                            Source="shuffle.png"
                            WidthRequest="15">
                            <ImageButton.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsShuffle}"
                                    TargetType="ImageButton"
                                    Value="True">
                                    <Setter Property="BackgroundColor" Value="#B197FC" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding IsShuffle}"
                                    TargetType="ImageButton"
                                    Value="False">
                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                </DataTrigger>
                            </ImageButton.Triggers>

                            <ImageButton.CommandParameter>
                                <x:Boolean>True</x:Boolean>
                            </ImageButton.CommandParameter>
                        </ImageButton>
                    </Border>
                </HorizontalStackLayout>

                <Grid Padding="10,0" ColumnDefinitions="Auto,*,Auto">

                    <Label
                        Grid.Column="0"
                        Text="{Binding CurrentPositionInSeconds, Converter={StaticResource DurationConverter}}"
                        VerticalOptions="Center" />
                    <Slider
                        x:Name="slid"
                        Grid.Column="1"
                        Margin="10,0"
                        DragCompleted="Slider_DragCompleted"
                        MinimumTrackColor="DarkSlateBlue"
                        ToolTipProperties.Text="{Binding CurrentPositionInSeconds, Converter={StaticResource DurationConverter}}"
                        VerticalOptions="Start"
                        Value="{Binding CurrentPositionPercentage}" />

                    <Label
                        Grid.Column="2"
                        Opacity="0.6"
                        Text="{Binding TemporarilyPickedSong.DurationInSeconds, Converter={StaticResource DurationConverter}}"
                        VerticalOptions="Center" />

                </Grid>
            </VerticalStackLayout>
            <syncf:SfEffectsView
                Grid.Column="1"
                BackgroundColor="Transparent"
                Loaded="SfEffectsView_Loaded"
                Unloaded="SfEffectsView_Unloaded">
                <VerticalStackLayout VerticalOptions="Center">
                    <Label HorizontalOptions="Center" Text="{Binding VolumeLevel, StringFormat='Volume {0:0%}'}" />

                    <Slider
                        Maximum="1"
                        Minimum="0"
                        MinimumTrackColor="DarkSlateBlue"
                        VerticalOptions="End"
                        Value="{Binding VolumeLevel, Mode=TwoWay}" />
                </VerticalStackLayout>
            </syncf:SfEffectsView>
        </Grid>

    </Grid>-->
</ContentView>
