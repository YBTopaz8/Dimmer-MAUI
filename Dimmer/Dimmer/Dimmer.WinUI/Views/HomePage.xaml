<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Name="myPage"
             x:Class="Dimmer.WinUI.Views.HomePage" xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
             xmlns:cw="clr-namespace:Dimmer.WinUI.Views.CustomViews" xmlns:lang="clr-namespace:Dimmer.Resources.Localization;assembly=Dimmer"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material" xmlns:models="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
             xmlns:modeltwo="clr-namespace:Dimmer.WinUI.Utils.Models" xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit" xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
             xmlns:vm="clr-namespace:Dimmer.WinUI.ViewModel" Title="HomePage"
             x:DataType="vm:BaseViewModelWin" Shell.NavBarIsVisible="False"
             >

    <ContentPage.Resources>
        <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter" />
        <converters:BytesToMegabytesConverter x:Key="FileSizeConverter" />
        <converters:BytesArrayToImageSource x:Key="BytesToImageConverter" />
        <converters:BoolToInverseConverter x:Key="BoolToInverse" />
        <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter" />
        <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter" />
        <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter" />
        <converters:BoolToYesNoConverter x:Key="BoolToYesNo" />
        <converters:VolumeConverter x:Key="VolConverter" />

        <DataTemplate x:Key="MultiColumnsView">
            <Grid ColumnDefinitions="0.4,*,*,*,*,*,*">
                <HorizontalStackLayout Grid.Column="0" />
                <HorizontalStackLayout Grid.Column="1" />
                <HorizontalStackLayout Grid.Column="2" />
                <HorizontalStackLayout Grid.Column="3" />
                <HorizontalStackLayout Grid.Column="4" />
                <HorizontalStackLayout Grid.Column="5" />

            </Grid>
        </DataTemplate>
    </ContentPage.Resources>

    <Grid x:Name="MainAppGrid"
          Margin="10" ColumnDefinitions="*"
          >
        <Grid x:Name="SideBar"
              Grid.Column="0" Padding="10,0"
              RowDefinitions="auto"
              />

        <Grid>
            <Image Opacity="0.06" Source="{Binding CurrentPlayingSongView.CoverImagePath}" />
            <Grid x:Name="MainUI" RowDefinitions="auto,*, auto">
                <Grid Grid.Row="0" RowDefinitions="50,70,auto">

                    <HorizontalStackLayout Grid.Row="0" Margin="0,10"
                                           BackgroundColor="Transparent" HorizontalOptions="Center"
                                           IsVisible="True" Spacing="25"
                                           >
                        <HorizontalStackLayout.Resources>
                            <Style TargetType="Label">
                                <Setter Property="FontSize" Value="21" />
                                <Setter Property="FontAttributes" Value="Bold" />
                            </Style>
                            <Style TargetType="Border">
                                <Setter Property="BackgroundColor" Value="Transparent" />

                            </Style>
                        </HorizontalStackLayout.Resources>
                        <Border BackgroundColor="Transparent" HorizontalOptions="Fill">

                            <Border.GestureRecognizers>
                                <TapGestureRecognizer x:Name="CurrPlayingSongGesRec"
                                                      CommandParameter="Tit" Tapped="CurrPlayingSongGesRec_Tapped"
                                                      />
                            </Border.GestureRecognizers>

                            <Label Text="{Binding CurrentPlayingSongView.Title}" />

                        </Border>
                        <Border>
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer CommandParameter="Art" Tapped="CurrPlayingSongGesRec_Tapped" />
                            </Border.GestureRecognizers>

                            <Label Text="{Binding CurrentPlayingSongView.ArtistName}" />

                        </Border>
                        <Border>
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer CommandParameter="Alb" Tapped="CurrPlayingSongGesRec_Tapped" />
                            </Border.GestureRecognizers>

                            <Label Text="{Binding CurrentPlayingSongView.AlbumName}" />

                        </Border>

                    </HorizontalStackLayout>
                    <Grid x:Name="SecondA"
                          Grid.Row="1" ColumnDefinitions="auto,*,auto"
                          ColumnSpacing="5" VerticalOptions="Center"
                          >

                        <HorizontalStackLayout x:Name="MediaBtns"
                                               HeightRequest="50" Spacing="10"
                                               VerticalOptions="Center"
                                               >
                            <syncf:SfChip x:Name="SkipPrev"
                                          Clicked="SkipPrev_Clicked"
                                          Command="{Binding PreviousTrackCommand}"
                                          ImageSource="skipprevious.png" StyleClass="MediaBtnChip"
                                          />
                            <syncf:SfChip x:Name="PlayPauseBtn"
                                          Clicked="PlayPauseBtn_Clicked"
                                          Command="{Binding PlayPauseToggleCommand}"
                                          ImageSource="play.png" StyleClass="MediaBtnChip"
                                          >
                                <syncf:SfChip.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}"
                                                 TargetType="syncf:SfChip" Value="true"
                                                 >
                                        <Setter Property="ImageSource" Value="pause.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsPlaying}"
                                                 TargetType="syncf:SfChip" Value="false"
                                                 >
                                        <Setter Property="ImageSource" Value="play.png" />
                                    </DataTrigger>
                                </syncf:SfChip.Triggers>
                            </syncf:SfChip>
                            <syncf:SfChip x:Name="SkipNext"
                                          Clicked="SkipNext_Clicked"
                                          Command="{Binding NextTrackCommand}"
                                          ImageSource="skipnext.png" StyleClass="MediaBtnChip"
                                          />


                        </HorizontalStackLayout>

                        <Grid Grid.Column="1" ColumnDefinitions="auto,*,auto"
                              ColumnSpacing="10"
                              ToolTipProperties.Text="{Binding CurrentTrackPositionSeconds, StringFormat='Currently at {0}', Converter={StaticResource DurationConverter}}"
                              VerticalOptions="Center"
                              >
                            <Label Grid.Column="0" Text="{Binding CurrentTrackPositionSeconds, Converter={StaticResource DurationConverter}}" />
                            <Slider Grid.Column="1" DragCompleted="Slider_DragCompleted"
                                    Maximum="{Binding CurrentPlayingSongView.DurationInSeconds}"
                                    Minimum="0" MinimumTrackColor="DarkSlateBlue"
                                    ThumbColor="White"
                                    Value="{Binding CurrentTrackPositionSeconds}"
                                    />
                            <Label Grid.Column="2" Text="{Binding CurrentPlayingSongView.DurationInSeconds, Converter={StaticResource DurationConverter}}" />
                        </Grid>
                        <HorizontalStackLayout Grid.Column="2" VerticalOptions="Center">
                            <syncf:SfChip Command="{Binding ToggleShuffleModeCommand}"
                                          ImageSource="shuffle.png" StyleClass="MediaBtnChip"
                                          >
                                <syncf:SfChip.Triggers>
                                    <DataTrigger Binding="{Binding IsShuffleActive}"
                                                 TargetType="syncf:SfChip" Value="True"
                                                 >
                                        <Setter Property="Stroke" Value="DarkSlateBlue" />
                                        <Setter Property="StrokeThickness" Value="2" />

                                    </DataTrigger>
                                </syncf:SfChip.Triggers>
                            </syncf:SfChip>
                            <syncf:SfChip ImageSource="repeat.png" StyleClass="MediaBtnChip">
                                <syncf:SfChip.Triggers>
                                    <DataTrigger Binding="{Binding CurrentRepeatMode}"
                                                 TargetType="syncf:SfChip" Value="0"
                                                 >
                                        <Setter Property="Stroke" Value="DarkSlateBlue" />
                                        <Setter Property="StrokeThickness" Value="1" />

                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentRepeatMode}"
                                                 TargetType="syncf:SfChip" Value="1"
                                                 >
                                        <Setter Property="Stroke" Value="DarkSlateBlue" />
                                        <Setter Property="StrokeThickness" Value="0" />

                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentRepeatMode}"
                                                 TargetType="syncf:SfChip" Value="2"
                                                 >
                                        <Setter Property="Stroke" Value="Orange" />
                                        <Setter Property="StrokeThickness" Value="2" />

                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentRepeatMode}"
                                                 TargetType="syncf:SfChip" Value="3"
                                                 >
                                        <Setter Property="Stroke" Value="DarkBlue" />
                                        <Setter Property="StrokeThickness" Value="3" />

                                    </DataTrigger>
                                </syncf:SfChip.Triggers>
                            </syncf:SfChip>
                            <Slider Minimum="0" MinimumTrackColor="DarkSlateBlue"
                                    VerticalOptions="Center" WidthRequest="90"
                                    Value="{Binding DeviceVolumeLevel}"
                                    />
                        </HorizontalStackLayout>

                    </Grid>

                </Grid>


                <Grid Grid.Row="1" BackgroundColor="Transparent"
                      RowDefinitions="0.1*,0.1*,*"
                      >

                    <Grid Grid.Row="0" ColumnDefinitions="*,*">
                        <HorizontalStackLayout Grid.Column="0">
                            <Label IsVisible="False" Text="F" />
                        </HorizontalStackLayout>

                    </Grid>

                    <Grid Grid.Row="1" ColumnDefinitions="*">
                        <Grid ColumnDefinitions="1.1*,1.5*,*,*,*,*,10">
                            <Grid.Resources>
                                <Style TargetType="Label">
                                    <Setter Property="FontSize" Value="18" />
                                </Style>
                                <Style TargetType="syncf:SfChip">
                                    <Setter Property="StrokeThickness" Value="0" />
                                    <Setter Property="FontSize" Value="30" />
                                    <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=Black}" />
                                    <Setter Property="SelectionIndicatorColor" Value="DarkSlateBlue" />
                                </Style>
                            </Grid.Resources>
                            <syncf:SfChip Grid.Column="0" Clicked="Sort_Clicked"
                                          CommandParameter="Title" Text="Title"
                                          />
                            <syncf:SfChip Grid.Column="1" Clicked="Sort_Clicked"
                                          CommandParameter="Artist" Text="Artist"
                                          />
                            <syncf:SfChip Grid.Column="2" Clicked="Sort_Clicked"
                                          CommandParameter="Album" Text="Album"
                                          />
                            <syncf:SfChip Grid.Column="3" Clicked="Sort_Clicked"
                                          CommandParameter="Genre" Text="Genre"
                                          />
                            <syncf:SfChip Grid.Column="4" Clicked="Sort_Clicked"
                                          CommandParameter="Duration" Text="Year"
                                          />
                            <syncf:SfChip Grid.Column="5" CommandParameter="Duration"
                                          HorizontalTextAlignment="Center" Text="Duration"
                                          />
                        </Grid>
                    </Grid>

                    <CollectionView x:Name="SongsColView"
                                    Grid.Row="2" EmptyView="No Songs.."
                                    IsVisible="True"
                                    ItemsSource="{Binding NowPlayingDisplayQueue}"
                                    Loaded="MainSongsColView_Loaded" SelectionMode="None"
                                    >

                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="models:SongModelView">
                                <Border Padding="10" BackgroundColor="Transparent"
                                        StrokeShape="RoundRectangle 20"
                                        >
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <VisualState.Setters>
                                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                                </VisualState.Setters>
                                            </VisualState>

                                            <VisualState Name="PointerOver">
                                                <VisualState.Setters>
                                                    <Setter Property="BackgroundColor" Value="DarkSlateBlue" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <syncf:SfEffectsView BackgroundColor="Transparent" TouchDownEffects="Ripple">

                                        <Grid ColumnDefinitions="1.1*,1.5*,*,*,*,*,10" ColumnSpacing="20"
                                              RowDefinitions="80"
                                              >

                                            <Grid.GestureRecognizers>
                                                <TapGestureRecognizer x:Name="TapGestRec"
                                                                      CommandParameter="{Binding .}"
                                                                      NumberOfTapsRequired="2" Tapped="TapGestRec_Tapped"
                                                                      />
                                            </Grid.GestureRecognizers>
                                            <Grid.Resources>
                                                <Style TargetType="Label">
                                                    <Setter Property="FontSize" Value="18" />
                                                </Style>
                                            </Grid.Resources>
                                            <Label Grid.Column="0" Text="{Binding Title}" />
                                            <syncf:SfEffectsView x:Name="ArtistsEffectsView"
                                                                 Grid.Column="1" BackgroundColor="Transparent"
                                                                 LongPressEffects="Scale" LongPressed="ArtistsEffectsView_LongPressed"
                                                                 LongPressedCommandParameter="{Binding .}"
                                                                 >
                                                <FlyoutBase.ContextFlyout>
                                                    <MenuFlyout>
                                                        <MenuFlyoutItem Clicked="ArtistsEffectsView_LongPressed"
                                                                        CommandParameter="{Binding .}"
                                                                        Text="{Binding ArtistName, StringFormat='View Artists : {0}'}"
                                                                        />
                                                    </MenuFlyout>
                                                </FlyoutBase.ContextFlyout>
                                                <Label Grid.Column="1" Text="{Binding ArtistName}" />
                                            </syncf:SfEffectsView>

                                            <Label Grid.Column="2" HorizontalTextAlignment="Start"
                                                   LineBreakMode="TailTruncation"
                                                   Text="{Binding AlbumName}"
                                                   ToolTipProperties.Text="{Binding AlbumName}"
                                                   />
                                            <Label Grid.Column="3" Text="{Binding Genre.Name}" />
                                            <Label Grid.Column="4" Text="{Binding ReleaseYear}" />
                                            <Label Grid.Column="5" HorizontalTextAlignment="Center"
                                                   Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}"
                                                   />
                                        </Grid>

                                    </syncf:SfEffectsView>
                                </Border>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </Grid>

                <Grid Grid.Row="2" BackgroundColor="Transparent"
                      RowSpacing="10"
                      >

                    <SearchBar x:Name="SearchSongSB"
                               Grid.Column="1" BackgroundColor="Transparent"
                               Placeholder="Search Title, Artist, Album..." TextChanged="SearchSongSB_TextChanged"
                               />
                </Grid>

            </Grid>
        </Grid>


        <syncf:SfPopup x:Name="ArtistsContextMenuPopup"
                       IsFullScreen="False" IsOpen="False"
                       IsVisible="False"
                       >
            <syncf:SfPopup.HeaderTemplate>
                <DataTemplate>
                    <HorizontalStackLayout>
                        <Label Text="Artists" />
                    </HorizontalStackLayout>
                </DataTemplate>
            </syncf:SfPopup.HeaderTemplate>

            <syncf:SfPopup.ContentTemplate>
                <DataTemplate>
                    <CollectionView ItemsSource="{Binding CurrentPlayingSongView.ArtistIds}">
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="models:ArtistModelView">
                                <VerticalStackLayout>

                                    <Label FontAttributes="Bold" FontSize="20"
                                           HorizontalOptions="Center"
                                           Text="{Binding Name}"
                                           />
                                    <Button Margin="10,0"
                                            Command="{Binding Source={x:Reference myPage}, Path=BindingContext.ViewArtistCommand}"
                                            CommandParameter="{Binding .}"
                                            HorizontalOptions="Center"
                                            Text="{Binding Source={x:Static lang:DimmerLanguage.txt_view}, FallbackValue='View'}"
                                            />
                                    <Button Margin="10,0"
                                            Command="{Binding Source={x:Reference myPage}, Path=BindingContext.ClosePopupCommand}"
                                            HorizontalOptions="Center"
                                            Text="{Binding Source={x:Static lang:DimmerLanguage.txt_close}, FallbackValue='Close'}"
                                            />
                                </VerticalStackLayout>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>

                    </CollectionView>

                </DataTemplate>
            </syncf:SfPopup.ContentTemplate>
        </syncf:SfPopup>
    </Grid>

</ContentPage>