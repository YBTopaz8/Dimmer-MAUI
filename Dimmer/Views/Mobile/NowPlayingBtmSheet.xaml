<?xml version="1.0" encoding="utf-8" ?>
<dx:BottomSheet xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Mobile.NowPlayingBtmSheet"
             
            xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:containerr="clr-namespace:Dimmer_MAUI.Views.Mobile.CustomViewsM"
            xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters"
            xmlns:mobileViews="clr-namespace:Dimmer_MAUI.Views.Mobile"
            Padding="10,10" 
            CornerRadius="8"
            xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
            xmlns:dx="http://schemas.devexpress.com/maui"
            xmlns:models="clr-namespace:Dimmer_MAUI.Utilities.Models"
            xmlns:cw="clr-namespace:Dimmer_MAUI.Views.CustomViews"
            x:DataType="vm:HomePageVM" ShowGrabber="False"
            State="{Binding NowPlayBtmSheetState}"
            x:Name="myPage">


    <dx:BottomSheet.Resources>
        <ResourceDictionary>
            <Style TargetType="dx:DXButton">
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
            </Style>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>

            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
        </ResourceDictionary>


        <DataTemplate x:Key="HomePageColViewGridOfOne" x:DataType="models:SongModelView">
            <dx:DXBorder BorderThickness="0" HeightRequest="140" 
                   VerticalOptions="Start" 
                   CornerRadius="10,10,10,10">

                <Grid ColumnDefinitions="Auto,*,auto" ColumnSpacing="0"
                      >
                    <dx:DXBorder CornerRadius="15" Grid.Column="0" WidthRequest="90" HeightRequest="90"
                                 >
                        <dx:DXImage Source="{Binding CoverImagePath}"
                                    VerticalOptions="Start" HorizontalOptions="Start" />
                    </dx:DXBorder>
                    
                    <dx:DXButton Grid.Column="1" HorizontalContentAlignment="Start"
                                 VerticalOptions="Center" HeightRequest="90" 
                                 
                                 HorizontalOptions="Start" x:Name="QuickPlaySong"
                                 ShowIcon="False" CommandParameter="{Binding .}"
                                 Clicked="QuickPlaySong_Clicked">
                        <dx:DXButton.Content>
                            
                        <dx:DXStackLayout Orientation="Vertical" 
                                          >
                            <Label Text="{Binding Title}" FontSize="20" 
                                   LineBreakMode="TailTruncation" HorizontalOptions="Start"
                                   />

                            <Label Text="{Binding ArtistName}" FontSize="16" Opacity="0.55"
                     />
                        </dx:DXStackLayout>

                        </dx:DXButton.Content>
                    </dx:DXButton>
                    
                    <!--<dx:DXButton Grid.Column="2" IconHeight="40" IconWidth="40" IconPlacement="Right" 
                                 ShowContent="False" IconColor="Gray" VerticalOptions="Center"
                                 x:DataType="vm:HomePageVM" HeightRequest="50" WidthRequest="50"
                                 HorizontalOptions="End"
                                 Icon="heart2.png">
                        
                    </dx:DXButton>-->
                    

                  
                </Grid>

            </dx:DXBorder>

        </DataTemplate>
    </dx:BottomSheet.Resources>

    <dx:DXScrollView Orientation="Vertical" x:Name="myPageView"                     
                      >
    <dx:DXStackLayout Orientation="Vertical" >
            <Grid ColumnDefinitions="*,*" >
            <dx:DXButton Icon="caretdown.png" Grid.Column="0" HorizontalOptions="Start" PressedBackgroundColor="DarkSlateBlue"
                         PressedIconColor="White" AnimationDuration="400"
                         WidthRequest="50" HeightRequest="50" IconHeight="40" IconWidth="40" IconIndent="0"
                         BackgroundColor="Transparent"  Clicked="DXButton_Clicked"
                         />

            </Grid>
            <dx:DXButton Grid.Row="0" Padding="0" HeightRequest="500"
            x:Name="lyricsCover"  IsVisible="True"
            CornerRadius="15" PressedBackgroundColor="DarkSlateBlue" Clicked="lyricsCover_Clicked">

                <dx:DXButton.Content>
                    <Grid x:Name="TopGrid" BackgroundColor="Transparent" >

                        <Image Source="{Binding TemporarilyPickedSong.CoverImagePath}" 
                           Opacity="0.4" Aspect="AspectFill" HeightRequest="400"/>

                        <dx:DXStackLayout VerticalOptions="Center" >
                            <dx:DXCollectionView ItemsSource="{Binding SynchronizedLyrics}" BackgroundColor="Transparent"
                                                ItemSpacing="5" SelectionMode="Single" HeightRequest="350" VerticalOptions="Center"
                                                SelectionChanged="SyncLyricsColView_SelectionChanged" x:Name="SyncLyricsColView"
                                                SelectedItem="{Binding CurrentLyricPhrase}" >
                                <dx:DXCollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:LyricPhraseModel">
                                        <Label Text="{Binding Text}"   TextColor="Gray"                            
                                            HorizontalTextAlignment="Center"/>
                                    </DataTemplate>
                                </dx:DXCollectionView.ItemTemplate>
                                <dx:DXCollectionView.SelectedItemTemplate>
                                    <DataTemplate x:DataType="models:LyricPhraseModel">
                                        <Label Text="{Binding Text}" TextColor="White" HorizontalTextAlignment="Center"
                                            FontAttributes="Bold" BackgroundColor="Transparent"
                                            FontSize="30"/>
                                    </DataTemplate>
                                </dx:DXCollectionView.SelectedItemTemplate>
                            </dx:DXCollectionView>

                        </dx:DXStackLayout>
                    </Grid>
                </dx:DXButton.Content>
            </dx:DXButton>
            <Grid ColumnDefinitions="*,Auto" >
                <VerticalStackLayout Grid.Column="0" >
                    <Label Text="{Binding TemporarilyPickedSong.Title}" FontSize="19" FontAttributes="Bold" TextColor="#E4EDFB" />
                    <Label Text="{Binding TemporarilyPickedSong.ArtistName}" FontSize="19" TextColor="#ACB1C1" />
                </VerticalStackLayout>
                <dx:DXButton Grid.Column="1">
                    <dx:DXButton.Triggers>
                        <DataTrigger TargetType="dx:DXButton" Binding="{Binding TemporarilyPickedSong.IsFavorite}" Value="True">
                            <Setter Property="IconWidth" Value="40"/>
                            <Setter Property="IconHeight" Value="40"/>
                            <Setter Property="Icon" Value="heart2.png"/>
                            <Setter Property="IconColor" Value="DarkSlateBlue"/>
                            <Setter Property="BackgroundColor" Value="Transparent"/>
                        </DataTrigger>
                        <DataTrigger TargetType="dx:DXButton" Binding="{Binding TemporarilyPickedSong.IsFavorite}" Value="False">
                            <Setter Property="Icon" Value="heartbroken.png"/>
                            <Setter Property="IconHeight" Value="40"/>
                            <Setter Property="IconWidth" Value="40"/>
                            <Setter Property="IconColor" Value="White"/>
                            <Setter Property="BackgroundColor" Value="Transparent"/>
                        </DataTrigger>
                    </dx:DXButton.Triggers>
                </dx:DXButton>
            </Grid>
            <dx:DXStackLayout Orientation="Vertical" Grid.Row="1" ItemSpacing="15" 
                            toolkit:DockLayout.DockPosition="Bottom"
                            x:Name="dl" >

                <dx:DXSlider MinValue="0" 
                         x:Name="ProgressSlider"
                         TapReleased="ProgressSlider_TapReleased"
                         ValueStep="1"
                         Value="{Binding CurrentPositionInSeconds, Mode=TwoWay}" 
                         MaxValue="{Binding TemporarilyPickedSong.DurationInSeconds}">

                    <dx:DXSlider.TooltipAppearance>
                        <dx:DXSliderTooltipAppearance BackgroundColor="#626680" TextColor="DarkSlateBlue"
                                                  FontSize="23" FontAttributes="Bold">
                        </dx:DXSliderTooltipAppearance>
                    </dx:DXSlider.TooltipAppearance>

                    <dx:DXSlider.TrackAppearance>
                        <dx:DXSliderTrackAppearance ActiveBackgroundColor="DarkSlateBlue"
                                                
                                                BackgroundColor="#626680"
                                                >

                        </dx:DXSliderTrackAppearance>
                    </dx:DXSlider.TrackAppearance>
                    <dx:DXSlider.ThumbAppearance>
                        <dx:DXSliderThumbAppearance BackgroundColor="#A99BDE" Height="25" Width="2">

                        </dx:DXSliderThumbAppearance>
                    </dx:DXSlider.ThumbAppearance>
                </dx:DXSlider>


                <Grid ColumnDefinitions="*,Auto" >
                    <VerticalStackLayout Grid.Column="0" >
                        <Label Text="{Binding CurrentPositionInSeconds, Converter={StaticResource DurationConverter}}" />

                    </VerticalStackLayout>

                    <Label Grid.Column="1" Text="{Binding TemporarilyPickedSong.DurationInSeconds, Converter={StaticResource DurationConverter}}"/>
                </Grid>
            </dx:DXStackLayout>

            <Grid HorizontalOptions="Fill" VerticalOptions="End" ColumnSpacing="15"
    Margin="5,0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <dx:DXButton Grid.Column="0" 
            x:Name="ToggleRepeat" Clicked="ToggleRepeat_Clicked">

                    <dx:DXButton.Triggers>
                        <DataTrigger TargetType="dx:DXButton" Value="0" Binding="{Binding CurrentRepeatMode}">
                            
                            <Setter Property="Icon" Value="repoff.png" />
                            <Setter Property="IconHeight" Value="40" />
                            <Setter Property="IconWidth" Value="40" />
                        </DataTrigger>

                        <DataTrigger TargetType="dx:DXButton" Value="1" Binding="{Binding CurrentRepeatMode}">
                            
                            <Setter Property="Icon" Value="repeat.png"/>
                            <Setter Property="IconHeight" Value="40"/>
                            <Setter Property="IconWidth" Value="40"/>
                        </DataTrigger>

                        <DataTrigger TargetType="dx:DXButton" Value="2" Binding="{Binding CurrentRepeatMode}">
                            
                            <Setter Property="Icon" Value="repone.png"/>
                            <Setter Property="IconHeight" Value="40"/>
                            <Setter Property="IconWidth" Value="40"/>
                        </DataTrigger>

                        <DataTrigger TargetType="dx:DXButton" Value="4" Binding="{Binding CurrentRepeatMode}">
                            <Setter Property="Icon" Value="repone.png"/>
                            <Setter Property="IconHeight" Value="40"/>
                            <Setter Property="IconWidth" Value="40"/>
                        </DataTrigger>
                    </dx:DXButton.Triggers>
                </dx:DXButton>

                <dx:DXButton Grid.Column="1" Command="{Binding PlayPreviousSongCommand}"  
                             BackgroundColor="Transparent" Icon="skipprevious.png"
                             IconWidth="40" IconHeight="40" />

                <dx:DXButton BackgroundColor="Transparent" x:Name="NowPlayingBtn"
        CornerRadius="40" Grid.Column="2"
        TapReleased="NowPlayingBtn_TapReleased"
        UseRippleEffect="True">
                    <dx:DXButton.Content>
                        <dx:RadialProgressBar  WidthRequest="80" HeightRequest="80" 
                                    Grid.Column="2" ValueIndicatorFill="Transparent"
                Value="{Binding CurrentPositionPercentage}" ValueIndicatorThickness="6" 
                                               
                                               Thickness="0" AllowAnimation="True"
Fill="Transparent" StartAngle="-180" SweepAngle="360">
                            <dx:RadialProgressBar.Content>
                                <dx:DXImage HeightRequest="45" Opacity="0.8" >
                                    <dx:DXImage.Triggers>

                                        <DataTrigger TargetType="dx:DXImage" Value="True" Binding="{Binding IsPlaying}">
                                            <Setter Property="Source" Value="pause.png"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="dx:DXImage" Value="False" Binding="{Binding IsPlaying}">
                                            <Setter Property="Source" Value="playcircle.png"/>
                                        </DataTrigger>

                                    </dx:DXImage.Triggers>
                                </dx:DXImage>

                            </dx:RadialProgressBar.Content>

                        </dx:RadialProgressBar>

                    </dx:DXButton.Content>
                </dx:DXButton>


                <dx:DXButton Grid.Column="3" Command="{Binding PlayNextSongCommand}" 
                     Icon="skipnext.png" BackgroundColor="Transparent" IconWidth="40" IconHeight="40" >
                </dx:DXButton>
                <dx:DXButton Grid.Column="4" Command="{Binding ToggleShuffleStateCommand}"
                     Icon="shuffle.png" IconWidth="40" IconHeight="40" BackgroundColor="Transparent">
                    <dx:DXButton.Triggers>
                        <DataTrigger Binding="{Binding IsShuffleOn}" Value="True" TargetType="dx:DXButton">
                            <Setter Property="Icon" Value="Darkslateblue"/>
                            <Setter Property="IconHeight" Value="40"/>
                            <Setter Property="IconWidth" Value="40"/>
                        </DataTrigger>
                    </dx:DXButton.Triggers>
                    <dx:DXButton.CommandParameter>
                        <x:Boolean>True</x:Boolean>
                    </dx:DXButton.CommandParameter>

                </dx:DXButton>
            </Grid>
            <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.ReleaseYear}" IsVisible="False"/>
            <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.FileFormat}" FontSize="20"/>
            <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.FileSize, Converter={StaticResource FileSizeConverter}}"
    FontSize="16"/>

            <Grid ColumnDefinitions="Auto,*,Auto" 
                  VerticalOptions="End">

                <dx:DXButton Command="{Binding ShowSleepTimerPopupCommand}" 
                             HorizontalOptions="Start" 
                             Icon="lyrics.png" VerticalOptions="Start"
                         BackgroundColor="Transparent"
                         
                         IconHeight="40" IconWidth="40"
                         Grid.Column="0">

                </dx:DXButton>

                <dx:DXButton x:Name="NextSongsPreview" Clicked="ShowMoreActionsContextMenuBtn_Clicked"
                                 HorizontalOptions="Fill" PressedBackgroundColor="DarkSlateBlue"
                                Grid.Column="1"  HeightRequest="100">
                        <dx:DXButton.Content>
                            <dx:DXStackLayout Orientation="Vertical" HorizontalOptions="FillAndExpand" 
                                              Padding="10" Margin="-10,-10"
                                              
                                              ItemSpacing="5">
                            <Label Text="Up Next" Grid.Column="0" HorizontalOptions="Center"/>

                            <Grid  ColumnDefinitions="Auto,*,Auto" 
                                       ColumnSpacing="15">
                                    <Grid.Resources>
                                        <ResourceDictionary>
                                            <Style TargetType="Label">
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </ResourceDictionary>
                                    </Grid.Resources>
                                    <Label Text="{Binding NextSong.Title}" Grid.Column="0" HorizontalOptions="Start"
                                           WidthRequest="80" LineBreakMode="CharacterWrap"/>
                                <Label Text="{Binding NextSong.ArtistName}" Grid.Column="1" HorizontalOptions="Center"
                                           WidthRequest="100" />
                                <Label Text="{Binding NextSong.DurationInSeconds, Converter={StaticResource DurationConverter}}" Grid.Column="2"
                                           HorizontalOptions="End" FontSize="14"/>
                                </Grid>
                            </dx:DXStackLayout>
                            
                        </dx:DXButton.Content>
                    </dx:DXButton>
                  
                <dx:DXButton IconHeight="50" WidthRequest="50"  
                             
    ShowContent="False" IconPlacement="Left" Clicked="ShowMoreActionsContextMenuBtn_Clicked" VerticalOptions="Start"
    IconWidth="40" x:Name="ShowMoreActionsContextMenuBtn" Grid.Column="2"
      IsVisible="True"       Icon="more1.png" />
              

            </Grid>
            <dx:DXExpander IsExpanded="False" 
                            x:Name="UpcomingSongsExp">
                <dx:DXExpander.Content>
                    <dx:DXCollectionView SelectionMode="Single" 
                            IsScrollBarVisible="False" HeightRequest="180" 
                            Orientation="Vertical"
                            x:Name="SongsColView" 
                            UseRippleEffect="True"
                            RippleColor="DarkSlateBlue"                            
                            ItemsSource="{Binding PartOfNowPlayingSongs}"
                            SelectedItem="{Binding TemporarilyPickedSong}"
                            ItemSpacing="5" 
                                         
                            ItemTemplate="{StaticResource HomePageColViewGridOfOne}" />
                </dx:DXExpander.Content>
            </dx:DXExpander>


        </dx:DXStackLayout>

    </dx:DXScrollView>
    


</dx:BottomSheet>
