<?xml version="1.0" encoding="utf-8" ?>
<the49:BottomSheet xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:the49="https://schemas.the49.com/dotnet/2023/maui"
             x:Class="Dimmer_MAUI.Views.Mobile.NowPlayingBtmPage"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer.Utilities"                            
             xmlns:icon="clr-namespace:IconPacks.IconKind;assembly=IconPacks.Material"
             xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
             xmlns:models="clr-namespace:Dimmer.Models;assembly=Dimmer.Models"
             xmlns:cv="clr-namespace:PanCardView;assembly=PanCardView"
             xmlns:cm="https://github.com/jerry08/Plugin.ContextMenuContainer"
             xmlns:mdc="clr-namespace:Material.Components.Maui;assembly=Material.Components.Maui"
             x:DataType="vm:HomePageVM"
             x:Name="btmPage"
             BackgroundColor="Black">
    
    <the49:BottomSheet.Detents>
        <the49:FullscreenDetent />
    </the49:BottomSheet.Detents>
    <the49:BottomSheet.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=White}"/>
            </Style>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>
            <converters:BoolToImageConverter x:Key="BoolToImage"/>
        </ResourceDictionary>
    </the49:BottomSheet.Resources>
    <Grid toolkit:DockLayout.DockPosition="Bottom">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border StrokeShape="RoundRectangle 18" Margin="1,5,1,10" VerticalOptions="Start" 
                    StrokeThickness="0" Grid.Row="0" MinimumHeightRequest="320" x:Name="lyricsCover">
            <Grid>
                <Image Source="{Binding PickedSongCoverImage}" Aspect="Fill" Opacity="0.45"/>
                <!-- Synced lyics Col View -->
                <CollectionView ItemsSource="{Binding SynchronizedLyrics}" SelectionMode="Single" 
                                    BackgroundColor="Transparent" IsVisible="True" 
                                    SelectedItem="{Binding CurrentLyricPhrase}" SelectionChanged="syncCol_SelectionChanged" IsEnabled="False" 
                                    Margin="10" x:Name="SyncedLyricsColView" MaximumHeightRequest="200" HorizontalOptions="Center">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="models:LyricPhraseModel">
                            <VerticalStackLayout>
                                <Label Text="{Binding Text}" HorizontalOptions="Center" HorizontalTextAlignment="Center"
                        FontSize="22" LineBreakMode="WordWrap" Margin="0,5"/>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualState Name="Normal"></VisualState>
                                        <VisualState Name="Selected">
                                            <VisualState.Setters>
                                                <Setter Property="BackgroundColor" Value="#4D483D8B"></Setter>
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </VerticalStackLayout>

                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </Grid>
        </Border>

        <VerticalStackLayout Margin="0,0" Spacing="15" VerticalOptions="End" 
                 MinimumHeightRequest="310" x:Name="dl" Grid.Row="1">

            <Grid BackgroundColor="Transparent" Margin="5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Left-aligned Label -->
                <Label Grid.Column="0" Text="{Binding CurrentPositionText, Converter={StaticResource DurationConverter}}" 
                           VerticalOptions="Center" FontSize="17"/>

                <!-- Slider in the center -->
                <Slider Grid.Column="1" VerticalOptions="Center"
                            Value="{Binding CurrentPosition, Mode=TwoWay}" MinimumTrackColor="DarkSlateBlue"
                            DragCompletedCommand="{Binding SeekSongPositionCommand}"/>

                <!-- Right-aligned Label -->
                <Label Grid.Column="2" Text="{Binding TemporarilyPickedSong.DurationInSeconds, Converter={StaticResource DurationConverter}}"
                            VerticalOptions="Center" Opacity="0.6" FontSize="16"/>
            </Grid>

            <Label Text="{Binding TemporarilyPickedSong.Title}" HorizontalTextAlignment="Center" 
                        FontAttributes="Bold" FontSize="25"/>

            <Label HorizontalTextAlignment="Center" FontSize="16">
                <Label.Text>
                    <MultiBinding StringFormat="{} {0} - {1}">
                        <Binding Path="TemporarilyPickedSong.ArtistName"/>
                        <Binding Path="TemporarilyPickedSong.AlbumName"/>
                    </MultiBinding>
                </Label.Text>
            </Label>


            <Grid HorizontalOptions="FillAndExpand" VerticalOptions="Start" 
                        ColumnSpacing="10" BackgroundColor="Transparent" 
                        Margin="5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <mdc:IconButton  Grid.Column="0" IconData="{Static icon:Material.Replay}" 
                                 BackgroundColor="Transparent" HeightRequest="45"/>
                <mdc:IconButton  Grid.Column="1" IconData="{Static icon:Material.SkipPrevious}" BackgroundColor="Transparent"
                                 Command="{Binding PlayPreviousSongCommand}" HeightRequest="45"/>
                <mdc:IconButton  Grid.Column="2"  IconData="{Binding PlayPauseImage}" WidthRequest="45"
                                 Command="{Binding PauseResumeSongCommand}" HeightRequest="45"/>
                <mdc:IconButton  Grid.Column="3" IconData="{Static icon:Material.SkipNext}" BackgroundColor="Transparent"
                                 Command="{Binding PlayNextSongCommand}" HeightRequest="45"/>
                <mdc:IconButton  Grid.Column="4" IconData="{Static icon:Material.Shuffle}" BackgroundColor="Transparent"
                                 HeightRequest="35"/>


            </Grid>

            <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.ReleaseYear}" IsVisible="False"/>
            <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.FileFormat}"/>
            <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.FileSize, Converter={StaticResource FileSizeConverter}}" />

            <Grid Margin="5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <!-- For left icon -->
                    <ColumnDefinition Width="*"/>
                    <!-- For the slider -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- For right icon -->
                </Grid.ColumnDefinitions>

                <mdc:IconButton IconData="{Static icon:Material.VolumeDown}" BackgroundColor="Transparent"
                        Grid.Column="0" Command="{Binding DecreaseVolumeCommand}" 
                                HorizontalOptions="Start" HeightRequest="35" WidthRequest="35"/>

                <Slider Grid.Column="1" Value="{Binding VolumeSliderValue}" MinimumTrackColor="DarkSlateBlue" 
                            Maximum="1" Minimum="0" 
                            DragCompletedCommand="{Binding ChangeVolumeCommand}" HorizontalOptions="FillAndExpand"/>

                <mdc:IconButton IconData="{Static icon:Material.VolumeUp}" BackgroundColor="Transparent"
                        Grid.Column="2" Command="{Binding IncreaseVolumeCommand}" 
                        HorizontalOptions="End" HeightRequest="35" WidthRequest="35"/>

            </Grid>

            <FlexLayout JustifyContent="SpaceBetween" 
                            toolkit:DockLayout.DockPosition="Top">
                <Label Text="" />

                <HorizontalStackLayout>
                    <Label Text="sleep" IsVisible="False"/>
                    <Label Text="ShowLyrics" IsVisible="False"/>
                    <mdc:IconButton IconData="{Binding TemporarilyPickedSong.IsFavorite, Converter={StaticResource BoolToImage}}" 
                                    Command="{Binding Source={x:Reference myPage}, Path=BindingContext.AddSongToFavoritesCommand}"
                                    CommandParameter="{Binding TemporarilyPickedSong}" BackgroundColor="Transparent"/>
                    <mdc:IconButton IconData="{Static icon:Material.ArrowDownward}" BackgroundColor="Transparent"
                                    Clicked="BringNowPlayBtmSheetDownBtn_Clicked"/>

                </HorizontalStackLayout>

            </FlexLayout>

        </VerticalStackLayout>
    </Grid>
</the49:BottomSheet>
