<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Mobile.HomePageM"
            xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
            xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
            xmlns:m="clr-namespace:UraniumUI.Icons.MaterialSymbols;assembly=UraniumUI.Icons.MaterialSymbols"
            xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters" 
            xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
            xmlns:models="clr-namespace:Dimmer_MAUI.Utilities.Services.Models"
            xmlns:viewsM="clr-namespace:Dimmer_MAUI.Views.Mobile"
             xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"   
            xmlns:cv="clr-namespace:Dimmer_MAUI.Views.Mobile.CustomViewsM"
            xmlns:cm="https://github.com/jerry08/Plugin.ContextMenuContainer"
            x:DataType="vm:HomePageVM"
            Shell.NavBarIsVisible="True"                        
            xmlns:dx="http://schemas.devexpress.com/maui"
            
            x:Name="myPage" Shell.TitleColor="Black"
            
            Shell.TabBarBackgroundColor="Red"
            >

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=White}"/>
            </Style>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>
            <converters:BoolToImageConverter x:Key="BoolToImage"/>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
    
        </ResourceDictionary>

        <DataTemplate x:Key="HomePageColViewTemplate" x:DataType="models:SongsModelView">
            <Border Stroke="Transparent" Padding="10,0">

                <Border.Triggers>
                    <DataTrigger TargetType="Border" Binding="{Binding IsCurrentPlayingHighlight}" Value="True">
                        <Setter Property="Stroke" Value="DarkSlateBlue"/>
                        <Setter Property="StrokeThickness" Value="0.8"/>
                    </DataTrigger>
                    <DataTrigger TargetType="Border" Binding="{Binding IsCurrentPlayingHighlight}" Value="False">
                        <Setter Property="Stroke" Value="Transparent"/>
                        <Setter Property="StrokeThickness" Value="1"/>
                    </DataTrigger>
                </Border.Triggers>

                <Grid ColumnDefinitions="*,Auto" Margin="0,3">

                    <HorizontalStackLayout Grid.Column="0" Spacing="5">
                        <toolkit:AvatarView ImageSource="{Binding CoverImagePath}" Text="{Binding Title}"                                            
                                            CornerRadius="10" BorderWidth="0"/>
                        <VerticalStackLayout>                            
                            <Label Text="{Binding Title}" FontSize="16" 
                                   LineBreakMode="WordWrap" MaxLines="2"
                                   />
                            <Label Text="{Binding ArtistName}" FontSize="14" Opacity="0.5"/>
                            <Label Text="{Binding DatesPlayedAndWasPlayCompleted.Count}"/>
                        </VerticalStackLayout>
                    </HorizontalStackLayout>


                    <dx:DXButton Grid.Column="1" Clicked="SingleSongCxtMenuArea_Clicked" 
                                 Padding="0" IconPlacement="Right"
                                 x:Name="SingleSongCxtMenuArea" ButtonType="ToolButton">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.More_vert}"/>
                        </dx:DXButton.Icon>

                        <VerticalStackLayout>
                            <Label Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" FontSize="18"/>
                              
                            <Image BackgroundColor="Transparent" 
                                         WidthRequest="20" HorizontalOptions="Center"
>
                                <Image.Source>
                                    <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Lyrics}"/>
                                </Image.Source>
                            </Image>
                        </VerticalStackLayout>
                    </dx:DXButton>
                </Grid>

            </Border>

        </DataTemplate>

    </ContentPage.Resources>

    
            

                <!--Label at the extreme left-->
                <!--<Label Grid.Column="0"
        Text="{Binding , Source={x:Reference myPage}, StringFormat='{0} Songs'}"
        HorizontalTextAlignment="Start"
        VerticalTextAlignment="Center"
        FontAttributes="Bold"
        TextColor="DarkSlateBlue"
        FontSize="20" />-->

    <dx:DXStackLayout>
        
                <!--HorizontalStackLayout at the extreme right-->
            <HorizontalStackLayout HorizontalOptions="End" Padding="10" x:Name="TopPart">
                <!--<ImageButton HeightRequest="35" Command="{Binding Commands.ShowFilteringUIForm,Source={Reference SongsColView}}">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Search}"/>
                    </ImageButton.Source>
                </ImageButton>-->

                <ImageButton Clicked="ShowFolderSelectorImgBtn_Clicked" 
                HeightRequest="35">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Settings}"/>
                    </ImageButton.Source>
                </ImageButton>
            </HorizontalStackLayout>


            <!--<ActivityIndicator IsRunning="{Binding IsLoadingSongs}" IsVisible="{Binding IsLoadingSongs}" toolkit:DockLayout.DockPosition="Top"/>-->

        <!--SelectedItemTemplate="{StaticResource SelectedSongHomePage}"-->
        <Grid>

            <dx:DXCollectionView 
                            IsScrollBarVisible="False"
                            x:Name="SongsColView"
                            UseRippleEffect="True"
                            RippleColor="DarkSlateBlue"
                            ItemTemplate="{StaticResource HomePageColViewTemplate}"
                            ItemsSource="{Binding DisplayedSongs}"
                
                Tap="SongsColView_Tap" 
                LongPress="SongsColView_LongPress">
                <dx:DXCollectionView.SortDescriptions>
                    <dx:SortDescription FieldName="Title" SortOrder="Ascending"/>
                </dx:DXCollectionView.SortDescriptions>
            </dx:DXCollectionView>

            <VerticalStackLayout Spacing="2" VerticalOptions="End" 
                                 
                                 HorizontalOptions="End" 
                HeightRequest="250" x:Name="NormalMiniUtilFABs" Margin="10,0">

                <!--Command="{Binding Commands.ShowFilteringUIForm,
                    Source={Reference SongsColView}}"-->
                <dx:DXButton WidthRequest="60" HeightRequest="60"
                             Clicked="ShowFilterUIImgBtm_Clicked"
                             x:Name="ShowFilterUIImgBtm" CornerRadius="30"
                             Padding="10" BackgroundColor="DarkSlateBlue">
                    <dx:DXButton.Content>
                        <dx:DXImage>
                            <dx:DXImage.Source>
                                <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Search}"/>
                            </dx:DXImage.Source>
                        </dx:DXImage>

                    </dx:DXButton.Content>
                </dx:DXButton>

                <!--<dx:DXButton Clicked="ScrollToSongFAB_Clicked"
                             x:Name="ScrollToSongFAB"
                             CornerRadius="30" Padding="10"
                             WidthRequest="60" HeightRequest="60"
                BackgroundColor="DarkSlateBlue">
                    <dx:DXButton.Content>
                        <dx:DXImage>
                            <dx:DXImage.Source>
                                <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Center_focus_strong}"/>
                            </dx:DXImage.Source>
                        </dx:DXImage>

                    </dx:DXButton.Content>
                </dx:DXButton>-->
                
                <dx:DXButton BackgroundColor="Transparent" x:Name="NowPlayingBtn"
                             CornerRadius="40" TapPressed="NowPlayingBtn_TapPressed"
                             TapReleased="NowPlayingBtn_TapReleased"
                             
                             WidthRequest="70" HeightRequest="70" >
                    <dx:DXButton.Content>
                        
                    <dx:RadialProgressBar  
                        WidthRequest="80" HeightRequest="80"
                        Value="{Binding CurrentPositionPercentage}" 
                        ValueIndicatorThickness="12" 
                        Thickness="10" AllowAnimation="True"
                        Fill="Transparent" StartAngle="-180" SweepAngle="360"
                       ValueIndicatorFill="DarkSlateBlue">
                        
                        <dx:RadialProgressBar.Content>
                            
                                <toolkit:AvatarView ImageSource="{Binding TemporarilyPickedSong.CoverImagePath}"
                                       WidthRequest="80" HeightRequest="80" VerticalOptions="Fill"
                                            BorderWidth="0" CornerRadius="40" 
                                       Text="{Binding TemporarilyPickedSong.Title}" Opacity="0.8" />
                            </dx:RadialProgressBar.Content>

                        </dx:RadialProgressBar>
                    </dx:DXButton.Content>
                </dx:DXButton>
                <!--<dx:DXImage.Source>
                    <FontImageSource Size="50" 
FontFamily="MaterialRounded" Glyph="{Binding PlayPauseIcon}"/>
                </dx:DXImage.Source>
                </dx:DXImage>-->

            </VerticalStackLayout>

            <VerticalStackLayout Spacing="3" VerticalOptions="End" IsVisible="False"
                                 HeightRequest="180" x:Name="MultiSelectMiniUtilFABs">
                <Border BackgroundColor="DarkSlateBlue" WidthRequest="45" 
                        HorizontalOptions="End" VerticalOptions="End"
                        StrokeThickness="0">
                    <ImageButton Clicked="CancelMultiSelect_Clicked" 
                >
                        <ImageButton.Source>
                            <FontImageSource Size="45" FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Arrow_back}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Border>
                <Border BackgroundColor="DarkSlateBlue" WidthRequest="45" HorizontalOptions="End"
                        VerticalOptions="End" StrokeThickness="0">
                    <ImageButton Command="{Binding MultiSelectUtilClickedCommand}" 
            >
                        <ImageButton.Source>
                            <FontImageSource Size="45"
                            FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Delete_forever}"/>
                        </ImageButton.Source>
                        <ImageButton.CommandParameter>
                            <x:Int32>0</x:Int32>
                        </ImageButton.CommandParameter>
                    </ImageButton>
                </Border>
                <HorizontalStackLayout VerticalOptions="End" HorizontalOptions="Center">
                    <Label Text="{Binding MultiSelectText}" FontSize="16"
        FontAttributes="Bold" TextColor="DarkSlateBlue" />
                </HorizontalStackLayout>

            </VerticalStackLayout>

            <dx:BottomSheet HalfExpandedRatio="0.55" AllowedState="HalfExpanded"
                x:Name="SearchSongPopUp" >
                <VerticalStackLayout Spacing="10" Margin="10,0">
                    <!--Favorite Filter (Toggle)-->
                    <dx:FilterSwitchItem Text="Is Favorite?" ThumbColor="DarkSlateBlue"
                                         FieldName="IsFavorite"
                        TextFontSize="23" Context="{Binding Source={x:Reference SongsColView}, Path=FilteringContext}"
                        UseRippleEffect="True" ImageWidth="25">
                        <dx:FilterSwitchItem.ImageSource>
                            <FontImageSource FontFamily="MaterialRounded" 
                             Glyph="{x:Static m:MaterialRounded.Favorite}"/>

                        </dx:FilterSwitchItem.ImageSource>
                    </dx:FilterSwitchItem>

                    <!--Title Filter (Text Input)-->
                    <!--<dx:filter FilterTextInputItem FieldName="Title" Placeholder="Search by Title"/>-->
                    <!--BindingContext="{Binding SongsColView.FilteringContext,Source={x:Reference myPage}}"-->
                    <!--Artist Filter (Picker)-->
                    <dx:FilterCheckedListPickerItem FieldName="ArtistName" Text="Artist"
                                  PickerShowMode="Popup" PickerBottomSheetState="HalfExpanded"
                                ShowValuesOutOfFilter="true"
                            Context="{Binding Source={x:Reference SongsColView}, Path=FilteringContext}">
                        
                        <dx:FilterCheckedListPickerItem.PickerTitleView>
                            <Label Text="Artist" VerticalOptions="Center" HorizontalOptions="Center"
                   FontSize="30" />
                        </dx:FilterCheckedListPickerItem.PickerTitleView>
                    </dx:FilterCheckedListPickerItem>

                    <dx:FilterCheckedListPickerItem FieldName="AlbumName" Text="Album" PickerShowMode="Popup"
                                  ShowValuesOutOfFilter="true" Context="{Binding Source={x:Reference SongsColView}, Path=FilteringContext}">
                        <dx:FilterCheckedListPickerItem.PickerTitleView>
                            <Label Text="Artist" VerticalOptions="Center"
                   FontSize="30"/>
                        </dx:FilterCheckedListPickerItem.PickerTitleView>
                    </dx:FilterCheckedListPickerItem>

                    <!--Genre Filter (Chip Group)-->
                    <dx:FilterCheckedListPickerItem Text="Genre" PickerShowMode="Popup"
                                                    Context="{Binding Source={x:Reference SongsColView}, Path=FilteringContext}"
                                                    FieldName="GenreName"/>

                   
                    <!--File Format Filter (Chip Group)-->
                    <dx:FilterChipGroupItem Text="File Format" 
                                            Context="{Binding Source={x:Reference SongsColView}, Path=FilteringContext}"
                                            FieldName="FileFormat"/>
                    <dx:FilterRadioListPickerItem Text="Sort" ShowValuesOutOfFilter="True"
                              ShowSearchPanel="True" PickerShowMode="Popup"
                              ShowRadioButtons="True">
                        
                    </dx:FilterRadioListPickerItem>
                </VerticalStackLayout>
            </dx:BottomSheet>
            
            <dx:BottomSheet x:Name="songsMenuBtm" AllowedState="HalfExpanded"
                AllowDismiss="True" HalfExpandedRatio="0.63"
                ShowGrabber="True">
                <VerticalStackLayout>
                    <VerticalStackLayout.Resources>
                        <ResourceDictionary>
                            <Style TargetType="dx:DXButton">
                                <Setter Property="ButtonType" Value="ToolButton"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>

                            </Style>
                            <Style TargetType="Label">
                                <Setter Property="FontSize" Value="24"/>
                                <Setter Property="FontAttributes" Value="Bold"/>

                            </Style>
                        </ResourceDictionary>
                    </VerticalStackLayout.Resources>
                    <VerticalStackLayout HorizontalOptions="Center" >

                        <Label Text="{Binding SelectedSongToOpenBtmSheet.Title}" HorizontalTextAlignment="Center"
                               LineBreakMode="TailTruncation" />
                        <Label Text="-" HorizontalTextAlignment="Center"/>
                        <Label Text="{Binding SelectedSongToOpenBtmSheet.ArtistName}" 
                               FontSize="20"
                               HorizontalTextAlignment="Center"/>
                    </VerticalStackLayout>

                    <dx:DXSeparator />
                    <dx:DXButton Content="Set Play Repeat Count"
                            Command="{Binding OpenRepeatSetterPopupCommand}">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Play_circle}" />
                        </dx:DXButton.Icon>
                    </dx:DXButton>
                    <dx:DXButton Content="Add to Playlist**">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Playlist_add}" />
                        </dx:DXButton.Icon>
                    </dx:DXButton>
                    <dx:DXButton Content="Go to Album" Command="{Binding NavigateToSpecificAlbumPageFromBtmSheetCommand}">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Album}" />
                        </dx:DXButton.Icon>
                    </dx:DXButton>

                    <dx:DXButton Content="Go to Artist" x:Name="GotoArtistBtn" Clicked="GotoArtistBtn_Clicked">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Person}" />
                        </dx:DXButton.Icon>
                    </dx:DXButton>
                    <dx:DXButton Content="Tag Editor" CommandParameter="{Binding SelectedSongToOpenBtmSheet}"
                            Command="{Binding OpenEditSongPopupCommand}">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Edit_audio}" />
                        </dx:DXButton.Icon>
                    </dx:DXButton>
                    <dx:DXButton Content="Song Info" 
                            Command="{Binding OpenViewSongDetailsPopupCommand}">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Person}" />
                        </dx:DXButton.Icon>
                    </dx:DXButton>
                    <dx:DXButton Content="Share" Clicked="ShareSong_Clicked"
                            Command="{Binding NavigateToShareStoryPageCommand}">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Share}" />
                        </dx:DXButton.Icon>
                    </dx:DXButton>
                    <dx:DXButton Content="Delete" CommandParameter="{Binding SelectedSongToOpenBtmSheet}"
                            Command="{Binding DeleteFileCommand}">
                        <dx:DXButton.Icon>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Delete}" />
                        </dx:DXButton.Icon>
                    </dx:DXButton>

                </VerticalStackLayout>

            </dx:BottomSheet>
         
            <viewsM:NowPlayingBtmSheet x:Name="NowPlayingBtmSheet"
                           />
        </Grid>
    </dx:DXStackLayout>

    
</ContentPage>