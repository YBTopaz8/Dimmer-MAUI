<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Mobile.HomePageM"            
             xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters" 
             xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
             xmlns:models="clr-namespace:Dimmer_MAUI.Utilities.Models"
             xmlns:viewsM="clr-namespace:Dimmer_MAUI.Views.Mobile"  
             xmlns:cv="clr-namespace:Dimmer_MAUI.Views.Mobile.CustomViewsM"
            x:DataType="vm:HomePageVM"
            xmlns:dx="http://schemas.devexpress.com/maui"
             xmlns:customControl="clr-namespace:Dimmer_MAUI.Utilities.OtherUtils.CustomControl"   
            x:Name="myPage" 
            Shell.FlyoutItemIsVisible="True"
            Shell.TabBarIsVisible="True"
             xmlns:contextPopUp="clr-namespace:Dimmer_MAUI.CustomPopUpViews"
            Shell.NavBarIsVisible="False">

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=White}"/>
            </Style>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>            
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid x:Name="MainPage" Margin="5,0" >
        
        <Grid x:Name="MainDock"
          Margin="5,5" RowDefinitions="*,auto" >

            <dx:DXDockLayout IsVisible="True" StretchLastItem="False" x:Name="NormalNowPlayingUI"
                            Loaded="NormalNowPlayingUI_Loaded" Grid.Row="0" 
                            Unloaded="NormalNowPlayingUI_Unloaded">

                <dx:DXStackLayout x:Name="SearchModeUI" dx:DXDockLayout.Dock="Top"
                            IsVisible="False">
                    <dx:TextEdit x:Name="SearchBy" TextChanged="SearchBy_TextChanged"
        LabelText="Search by" dx:DXDockLayout.Dock="Bottom"
        TextChangedCommandParameter="All" ClearIconClicked="SearchBy_ClearIconClicked"/>

                    <dx:ChoiceChipGroup HorizontalOptions="Center"
                                    BackgroundColor="Transparent"
                                    ChipBackgroundColor="Transparent"
                    ChipTap="SearchFiltersChips_ChipTap" x:Name="SearchFiltersChips">
                        <dx:ChoiceChipGroup.Resources>
                        </dx:ChoiceChipGroup.Resources>
                        <dx:Chip Text="Song" TapCommandParameter="Title"/>
                        <dx:Chip Text="Artist" TapCommandParameter="Artist"/>
                        <dx:Chip Text="Album" TapCommandParameter="Album"/>
                    </dx:ChoiceChipGroup>
                </dx:DXStackLayout>

                <dx:TabView IsSelectedItemIndicatorVisible="True" SwipeEnabled="True"
                    x:Name="HomeTabView" HeaderPanelPosition="Bottom"  PropertyChanged="HomeTabView_PropertyChanged"
                        HeaderPanelMinHeight="0" HeaderPanelMaxHeight="0" 
                        HeaderPanelHeight="0" SelectedItemIndex="{Binding SelectedItemIndexMobile}"
                        ItemHeaderMinHeight="0" ItemHeaderHeight="0">

                    <dx:TabViewItem>
                        <dx:DXCollectionView 
                            SelectionMode="Single" dx:DXDockLayout.Dock ="Top"
                            Orientation="Vertical" x:Name="SongsColView" 
                            ItemsSource="{Binding DisplayedSongs}"
                            Tap="SongsColView_Tap" ItemSpacing="8"
                    Scrolled="SongsColView_Scrolled">
                            <dx:DXCollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:SongModelView">
                                    <dx:DXBorder Padding="5,2" CornerRadius="15">
                                        <dx:DXBorder.Triggers>
                                            <DataTrigger TargetType="dx:DXBorder" Binding="{Binding IsCurrentPlayingHighlight}" Value="True">
                                                <Setter Property="BorderColor" Value="DarkSlateBlue" />
                                                <Setter Property="BorderThickness" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger TargetType="dx:DXBorder" Binding="{Binding IsCurrentPlayingHighlight}" Value="False">
                                                <Setter Property="BorderColor" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0" />
                                            </DataTrigger>
                                        </dx:DXBorder.Triggers>
                                        <Grid ColumnDefinitions="*, 120" ColumnSpacing="10">

                                            <dx:DXStackLayout Grid.Column="0" Orientation="Horizontal"
                                    ItemSpacing="5">
                                                <dx:DXBorder WidthRequest="60" CornerRadius="10">
                                                    <dx:DXImage Source="{Binding CoverImagePath}"/>
                                                </dx:DXBorder>

                                                <dx:DXStackLayout >
                                                    <Label Text="{Binding Title}" 
                                FontSize="19" />
                                                    <Label Text="{Binding ArtistName}" 
                                FontSize="14" FontAttributes="Italic"/>
                                                    <Label Text="{Binding AlbumName}" 
                                FontSize="10" FontAttributes="Italic"/>
                                                </dx:DXStackLayout>
                                            </dx:DXStackLayout>
                                            <dx:DXButton Grid.Column="1" BackgroundColor="Transparent"
                            HorizontalOptions="End" Clicked="ShowMoreBtn_Clicked"
                            PressedBackgroundColor="DarkSlateBlue"
                            AnimationDuration="1000" HorizontalContentAlignment="End">
                                                <dx:DXButton.Content>
                                                    <dx:DXStackLayout Orientation="Horizontal" 
                                        HorizontalOptions="Start">

                                                        <dx:DXStackLayout Orientation="Vertical" 
                                                Grid.Column="0"
                                                VerticalOptions="Center">
                                                            <Label 
                                    Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" 
                                FontSize="16"/>
                                                            <dx:DXImage WidthRequest="30" HeightRequest="30" HorizontalOptions="End"  
                                        IsVisible="{Binding HasLyrics}" Source="lyrics.png" Opacity="1" TintColor="White"
                                                BackgroundColor="Transparent">

                                                            </dx:DXImage>
                                                        </dx:DXStackLayout>
                                                        <dx:DXStackLayout>

                                                            <dx:DXImage Source="more1.png" 
                                                                    WidthRequest="40" HeightRequest="40" 
                                                                    x:Name="ShowMoreBtn" Rotation="90"/>
                                                        </dx:DXStackLayout>

                                                    </dx:DXStackLayout>
                                                </dx:DXButton.Content>
                                            </dx:DXButton>


                                        </Grid>

                                    </dx:DXBorder>
                                </DataTemplate>
                            </dx:DXCollectionView.ItemTemplate>

                        </dx:DXCollectionView>
                    </dx:TabViewItem>
                    <dx:TabViewItem x:Name="NowPlayingView" >
                        <Grid x:Name="NowPlayingUI">

                            <Image Source="{Binding TemporarilyPickedSong.CoverImagePath}" Opacity="0.10"
                Aspect="AspectFill" x:Name="PageBGImg"
            />
                            <dx:DXCollectionView IsScrollBarVisible="False" VerticalOptions="Center"
x:Name="LyricsColView" HeightRequest="300"
                     SelectionChanged="LyricsColView_SelectionChanged"
                     ItemsSource="{Binding SynchronizedLyrics}"                                
                      SelectionMode="Single" Tap="LyricsColView_Tap"
                     SelectedItem="{Binding CurrentLyricPhrase}"
                     Loaded="LyricsColView_Loaded" ItemSpacing="10"
                     Unloaded="LyricsColView_Unloaded">

                                <dx:DXCollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:LyricPhraseModel">
                                        <dx:DXBorder 
                     HorizontalOptions="Center">
                                            <Label x:Name="LyrBorder" Text="{Binding Text}"  
                   
               FontSize="21" FontAttributes="{Binding LyricsFontAttributes}"
                   Opacity="{Binding Opacity}"
            HorizontalTextAlignment="Center">
                                            </Label>
                                        </dx:DXBorder>
                                    </DataTemplate >

                                </dx:DXCollectionView.ItemTemplate>
                                <dx:DXCollectionView.SelectedItemAppearance>
                                    <dx:CollectionViewSelectedItemAppearance TextColor="DarkSlateBlue"
                                                 FontSize="30"
                                                 />
                                </dx:DXCollectionView.SelectedItemAppearance>
                            </dx:DXCollectionView>
                            <Grid ColumnDefinitions="Auto,*,Auto" 
                                  >
                                <dx:DXSlider MinimumHeightRequest="500"
                                    Grid.Column="0" Opacity="0.35" VerticalOptions="End"
                                    MinValue="0" Orientation="Vertical"
                                    x:Name="ProgressSlider2" 
                                    
           TapReleased="ProgressSlider_TapReleased" ValueStep="1"
           Value="{Binding CurrentPositionInSeconds, Mode=TwoWay}" 
           MaxValue="{Binding TemporarilyPickedSong.DurationInSeconds}">

                                    <dx:DXSlider.TooltipAppearance>
                                        <dx:DXSliderTooltipAppearance                                             
                                            BackgroundColor="#626680" TextColor="DarkSlateBlue"
                                            FontSize="16" FontAttributes="Bold">
                                            
                                        </dx:DXSliderTooltipAppearance>
                                    </dx:DXSlider.TooltipAppearance>

                                    <dx:DXSlider.TrackAppearance>
                                        <dx:DXSliderTrackAppearance ActiveBackgroundColor="DarkSlateBlue"
BackgroundColor="#626680">
                                        </dx:DXSliderTrackAppearance>
                                    </dx:DXSlider.TrackAppearance>
                                    <dx:DXSlider.ThumbAppearance>
                                        <dx:DXSliderThumbAppearance BackgroundColor="#A99BDE" 
                                                                    Height="15" Width="2">

                                        </dx:DXSliderThumbAppearance>
                                    </dx:DXSlider.ThumbAppearance>
                                </dx:DXSlider>
                                <dx:DXSlider MinValue="0" Grid.Column="2" Orientation="Vertical" 
                                             Opacity="0.35" VerticalOptions="End"
                                             MinimumHeightRequest="500"
                                             x:Name="ProgressSlider"                        
           TapReleased="ProgressSlider_TapReleased" ValueStep="1"
           Value="{Binding CurrentPositionInSeconds, Mode=TwoWay}" 
           MaxValue="{Binding TemporarilyPickedSong.DurationInSeconds}">

                                    <dx:DXSlider.TooltipAppearance>
                                        <dx:DXSliderTooltipAppearance BackgroundColor="#626680" TextColor="DarkSlateBlue"
  FontSize="16" FontAttributes="Bold">
                                        </dx:DXSliderTooltipAppearance>
                                    </dx:DXSlider.TooltipAppearance>

                                    <dx:DXSlider.TrackAppearance>
                                        <dx:DXSliderTrackAppearance ActiveBackgroundColor="DarkSlateBlue"
BackgroundColor="#626680">
                                        </dx:DXSliderTrackAppearance>
                                    </dx:DXSlider.TrackAppearance>
                                    <dx:DXSlider.ThumbAppearance>
                                        <dx:DXSliderThumbAppearance BackgroundColor="#A99BDE" Height="15" Width="2">

                                        </dx:DXSliderThumbAppearance>
                                    </dx:DXSlider.ThumbAppearance>
                                </dx:DXSlider>


                            </Grid>

                        </Grid>
                        
                    </dx:TabViewItem>

                    <dx:TabViewItem x:Name="UpSertPlayListView">
                        <dx:DXStackLayout Orientation="Vertical">

                        </dx:DXStackLayout>
                    </dx:TabViewItem>
                </dx:TabView>

            </dx:DXDockLayout>
           

            <dx:DXBorder Grid.Row="1" Opacity="0.8"
                    Loaded="BtmBar_Loaded"  
                    CornerRadius="12" BorderColor="Transparent"
                    BackgroundColor="#252526" HorizontalOptions="Fill"
                    x:Name="BtmBar" >
                    <dx:DXBorder.GestureRecognizers>
                        <TapGestureRecognizer x:Name="BtmBarTapGest" Tapped="BtmBarTapGest_Tapped"/>
                        <PanGestureRecognizer x:Name="PanGesture" PanUpdated="PanGesture_PanUpdated" />
                    </dx:DXBorder.GestureRecognizers>       
                    <dx:DXBorder.Content>
                    
                <Grid ColumnDefinitions="*,auto" RowDefinitions="Auto,*"  >
                <dx:DXStackLayout Grid.Row="0" HorizontalOptions="Start"
                                          Grid.Column="0" x:Name="TopBtmBarView"
                                          Orientation="Horizontal" >                            
                            <dx:ChipGroup >

                                <dx:Chip Icon="repoff.png" BorderColor="Transparent"
                                         IconSize="35,35" IconColor="MediumPurple"
                                         Tap="Chip_Tap"
                                         TapCommandParameter="repeat">
                                    <dx:Chip.Triggers>
                                        <DataTrigger TargetType="dx:Chip" Value="0" Binding="{Binding CurrentRepeatMode}">

                                            <Setter Property="Icon" Value="repoff.png" />
                                            <Setter Property="IconSize" Value="15,15" />
                                            
                                        </DataTrigger>

                                        <DataTrigger TargetType="dx:Chip" Value="1" Binding="{Binding CurrentRepeatMode}">

                                            <Setter Property="Icon" Value="repeat.png"/>
                                            <Setter Property="IconSize" Value="15,15"/>
                                            
                                        </DataTrigger>

                                        <DataTrigger TargetType="dx:Chip" Value="2" Binding="{Binding CurrentRepeatMode}">

                                            <Setter Property="Icon" Value="repone.png"/>
                                            <Setter Property="IconSize" Value="15,15"/>

                                        </DataTrigger>

                                        <DataTrigger TargetType="dx:Chip" Value="4" Binding="{Binding CurrentRepeatMode}">
                                            <Setter Property="Icon" Value="repone.png"/>
                                            <Setter Property="IconSize" Value="15,15"/>
                                            
                                        </DataTrigger>
                                    </dx:Chip.Triggers>
                                </dx:Chip>

                                <dx:Chip  BorderColor="Transparent" Tap="ToggleShuffle_Tap"
                                         IconSize="35,35" IconColor="MediumPurple"         x:Name="ToggleShuffle"                                 
                                         
     Icon="shuffle.png"  BackgroundColor="Transparent">
                                    <dx:Chip.Triggers>
                                            <DataTrigger Binding="{Binding IsShuffleOn}" Value="True" TargetType="dx:Chip">
                                                <Setter Property="BackgroundColor" Value="#B197FC"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="dx:Chip" Binding="{Binding IsShuffleOn}" Value="False">
                                                <Setter Property="BackgroundColor" Value="Transparent"/>
                                            </DataTrigger>
                                        </dx:Chip.Triggers>

                                </dx:Chip>
                            </dx:ChipGroup>
                            <dx:DXStackLayout.Triggers>
                                <DataTrigger TargetType="dx:DXStackLayout" Binding="{Binding SelectedItemIndexMobile}" Value="0">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="dx:DXStackLayout" Binding="{Binding SelectedItemIndexMobile}" Value="1">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                            </dx:DXStackLayout.Triggers>
                        </dx:DXStackLayout>

                <dx:DXStackLayout Orientation="Horizontal" Grid.ColumnSpan="2" 
                                          Grid.Row="1" 
                                      Padding="4">
                            <dx:DXStackLayout.Triggers>
                                <DataTrigger TargetType="dx:DXStackLayout" Binding="{Binding SelectedItemIndexMobile}" Value="0">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="dx:DXStackLayout" Binding="{Binding SelectedItemIndexMobile}" Value="1">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </dx:DXStackLayout.Triggers>
                            <dx:RadialProgressBar Grid.Row="1" HeightRequest="65" Value="{Binding CurrentPositionPercentage}" 
                            ValueIndicatorThickness="3" Thickness="10" AllowAnimation="True"
                            Fill="Transparent" StartAngle="-180" SweepAngle="360"
                            ValueIndicatorFill="DarkSlateBlue">

                                <dx:RadialProgressBar.Triggers>
                                <DataTrigger TargetType="dx:RadialProgressBar" Binding="{Binding CurrentQueue}" Value="0">
                                        <Setter Property="ValueIndicatorFill" Value="MediumPurple"/>
                                </DataTrigger>
                                <DataTrigger TargetType="dx:RadialProgressBar" Binding="{Binding CurrentQueue}" Value="1">
                                    <Setter Property="ValueIndicatorFill" Value="LightCoral"/>
                                </DataTrigger>
                            </dx:RadialProgressBar.Triggers>
                            <dx:RadialProgressBar.Content>
                                <dx:Chip Icon="{Binding TemporarilyPickedSong.CoverImagePath}"
                                    IsIconVisible="True" BorderThickness="0"
                                    IconSize="50,50" PressedBackgroundColor="DarkSlateBlue"
                                    x:Name="BtmCoverImg"
                                    WidthRequest="60" HeightRequest="60"/>

                            </dx:RadialProgressBar.Content>
                        </dx:RadialProgressBar>

                        <dx:DXStackLayout>
                            <Label Text="{Binding TemporarilyPickedSong.Title}" 
                                   FontSize="20" x:Name="BtmBarTitle" Loaded="BtmBarTitle_Loaded"/>
                            <Label Text="{Binding TemporarilyPickedSong.ArtistName}" FontSize="14"
                                       x:Name="BtmBarArtistName"/>

                        </dx:DXStackLayout>

                    </dx:DXStackLayout>

                <dx:DXStackLayout Orientation="Horizontal" Grid.Column="1" Margin="15" Grid.Row="0">

                            <dx:DXStackLayout.Triggers>
                                <DataTrigger TargetType="dx:DXStackLayout" Binding="{Binding SelectedItemIndexMobile}" Value="0">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                                <DataTrigger TargetType="dx:DXStackLayout" Binding="{Binding SelectedItemIndexMobile}" Value="1">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                            </dx:DXStackLayout.Triggers>
                    
                    <dx:Chip Icon="vinyl.png" WidthRequest="45" 
                             x:Name="ContextIconn" IsVisible="False"
                             Tap="ViewNowPlayPage_Tap" BorderColor="Transparent"
                             IsIconVisible="True" IconColor="MediumPurple"
                              IconSize="35,35"/>

                            <dx:Chip Icon="infocircle.png" WidthRequest="45"
                        x:Name="ContextIcon"
                        Tap="ContextIcon_Tap"
                        BorderColor="Transparent"
                        IsIconVisible="True"
                        IconColor="MediumPurple"
                        IconSize="35,35"
                        />
                    
                </dx:DXStackLayout>

                <dx:DXStackLayout Orientation="Horizontal" Grid.Column="1" Margin="15" Grid.Row="0">

                            <dx:DXStackLayout.Triggers>
                                <DataTrigger TargetType="dx:DXStackLayout" Binding="{Binding SelectedItemIndexMobile}" Value="0">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="dx:DXStackLayout" Binding="{Binding SelectedItemIndexMobile}" Value="1">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </dx:DXStackLayout.Triggers>
                    <dx:Chip Icon="vinyl.png" WidthRequest="45" x:Name="ViewNowPlayPage"
                                Tap="ViewNowPlayPage_Tap" BorderColor="Transparent"
                                IsIconVisible="True" IconColor="MediumPurple"
                                IconSize="35,35"/>
                    
                    <dx:Chip Icon="songfind.png" WidthRequest="45"
                        x:Name="SearchSong"
                        Tap="SearchSong_Tap"
                        BorderColor="Transparent"
                        IsIconVisible="True"
                        IconColor="MediumPurple"
                        IconSize="35,35"
                        />
                    
                </dx:DXStackLayout>

            </Grid>

            </dx:DXBorder.Content>
                
    </dx:DXBorder>
           
        </Grid>
        
        <dx:BottomSheet x:Name="ContextBtmSheet" CornerRadius="5"
              HalfExpandedRatio="0.8">
            <dx:BottomSheet.Content>
                <Grid>

                    <Image Source="{Binding TemporarilyPickedSong.CoverImagePath}" 
                                   Aspect="AspectFill" IsVisible="True"
                                   Opacity="0.24"/>
                    <dx:TabView SelectedItemIndex="{Binding BtmSheetIndex}">
                    <dx:TabViewItem HeaderText="Now Playing Queue">
                            
                        <dx:DXDockLayout x:Name="NowPlayingQueueView" >
                            <Grid Margin="20,0" ColumnDefinitions="*,Auto" dx:DXDockLayout.Dock="Top">
                                <dx:DXStackLayout Grid.Column="0">
                                    <Label Text="{Binding MySelectedSong.Title}" FontSize="24"/>
                                    <Label Text="{Binding MySelectedSong.ArtistName}" FontSize="15"/>
                                    <Label Text="{Binding MySelectedSong.AlbumName}" FontSize="13"/>
                                </dx:DXStackLayout>

                                <dx:DXButton Icon="bookmark.png" Grid.Column="1"
                                         BackgroundColor="Transparent"
                                         Content="Save Playlist"/>
                                    </Grid>
                            <dx:DXCollectionView ItemsSource="{Binding PartOfNowPlayingSongs}" 
                                                 Margin="5,5" Grid.Row="1" Tap="CurrQueueColView_Tap"
                                                 Header="Songs Queue" VerticalOptions="End" 
                                                 ItemSpacing="4" x:Name="CurrQueueColView" 
                                                 Loaded="CurrQueueColView_Loaded">

                                    <dx:DXCollectionView.ItemTemplate>
                                        <DataTemplate x:DataType="models:SongModelView">
                                            <dx:DXBorder HorizontalOptions="Fill" BorderThickness="2" CornerRadius="20"
                                                     x:Name="SingleSongRow">
                                                <dx:DXBorder.Triggers>
                                                    <DataTrigger TargetType="dx:DXBorder" Binding="{Binding IsPlaying}" Value="True">
                                                        <Setter Property="BorderColor" Value="DarkSlateBlue" />
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="dx:DXBorder" Binding="{Binding IsCurrentPlayingHighlight}" Value="False">
                                                        <Setter Property="BorderColor" Value="#1E1E1E" />
                                                    </DataTrigger>
                                                </dx:DXBorder.Triggers>
                                                <Grid ColumnDefinitions="*,*" Margin="10,0">
                                                    <dx:DXStackLayout BackgroundColor="Transparent" Grid.Column="0">
                                                        <Label Text="{Binding Title}" FontSize="20" HorizontalOptions="Start"/>
                                                        <Label Text="{Binding ArtistName}" FontSize="15" TextColor="Gray"/>

                                                    </dx:DXStackLayout>

                                                </Grid>

                                            </dx:DXBorder>
                                        </DataTemplate>
                                    </dx:DXCollectionView.ItemTemplate>
                                </dx:DXCollectionView>

                        </dx:DXDockLayout>

                    </dx:TabViewItem>
                    <dx:TabViewItem HeaderText="Fetch Lyrics">
                        <Grid x:Name="SearchLyricsGrid" Grid.Row="1" 
                          
                          >
                            <Border>
                                <Grid Margin="5,5" RowDefinitions="*,Auto,*"
                                ColumnDefinitions="*,*">
                                    <Grid.Resources>
                                        <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
                                        <converters:CountToVisibilityConverter x:Key="CountToVisibility"/>

                                    </Grid.Resources>

                                    <HorizontalStackLayout Grid.Row="1" HorizontalOptions="End" Grid.ColumnSpan="2">

                                        <ImageButton Source="backb.png" x:Name="CancelAction" Clicked="CancelAction_Clicked" />
                                    </HorizontalStackLayout>

                                    <VerticalStackLayout Grid.Row="0" Spacing="10" 
                                                     Margin="5" Grid.ColumnSpan="2">

                                        <Label Text="{Binding MySelectedSong.FilePath,StringFormat='Full Path: {0}'}"/>
                                        <dx:TextEdit PlaceholderText="Song Title" Text="{Binding LyricsSearchSongTitle}"/>
                                        <dx:TextEdit PlaceholderText="Song Album" Text="{Binding LyricsSearchAlbumName}"/>
                                        <dx:TextEdit PlaceholderText="Song Artist" Text="{Binding LyricsSearchArtistName}"/>

                                        <HorizontalStackLayout Spacing="10">

                                            <Button Text="Search Lyrics" x:Name="SearchLyricsOnLyrLib"
                                                Clicked="SearchLyricsOnLyrLib_Clicked">

                                                <Button.CommandParameter>
                                                    <x:Boolean>True</x:Boolean>
                                                </Button.CommandParameter>
                                            </Button>
                                            <Button Text="Paste Lyrics"
                                                x:Name="PasteLyricsFromClipBoardBtn"
                                                Clicked="PasteLyricsFromClipBoardBtn_Clicked"/>
                                        </HorizontalStackLayout>

                                    </VerticalStackLayout>

                                    <Grid Grid.Row="2" ColumnDefinitions="*,*" 
                                      RowDefinitions="Auto,*"  IsVisible="False"
                                      x:Name="ManualSyncLyricsView"
                                      Grid.Column="0" Grid.ColumnSpan="2" >
                                        <ScrollView Grid.Column="0" Grid.Row="1" HorizontalOptions="Start">
                                            <VerticalStackLayout 
                                                         x:Name="PlainLyricSection" Spacing="5"
                                                         >

                                                <Button x:Name="StartSyncingBtn" Clicked="StartSyncing_Clicked"
                                            Text="Start Syncing" HorizontalOptions="Center"/>
                                                <Editor Text="{Binding MySelectedSong.UnSyncLyrics}" 
                                                x:Name="LyricsEditor" MinimumWidthRequest="350"
                                                MinimumHeightRequest="350"
                                                Placeholder="Paste Plain Lyrics Here !"/>
                                            </VerticalStackLayout>

                                        </ScrollView>

                                        <Grid Grid.Row="1" 
                                        Grid.Column="1" RowDefinitions="*,Auto" x:Name="SyncLyrView" IsVisible="False">
                                            <CollectionView Grid.Row="0" ItemsSource="{Binding LyricsLines}">
                                                <CollectionView.ItemTemplate>
                                                    <DataTemplate x:DataType="models:LyricPhraseModel">
                                                        <Grid ColumnDefinitions="*,Auto" ColumnSpacing="5">
                                                            <Editor Text="{Binding Text}" Grid.Column="0"/>
                                                            <HorizontalStackLayout Grid.Column="1">
                                                                <Editor Text="{Binding TimeStampText}" WidthRequest="70"/>
                                                                <ImageButton Source="backk.png" CommandParameter="{Binding .}"
x:Name="DeleteLine" Clicked="DeleteLine_Clicked"/>
                                                                <ImageButton Source="time.png" CommandParameter="{Binding .}"
x:Name="Stamp" Clicked="Stamp_Clicked" WidthRequest="60"/>
                                                            </HorizontalStackLayout>
                                                        </Grid>
                                                    </DataTemplate>
                                                </CollectionView.ItemTemplate>
                                            </CollectionView>
                                            <Button Grid.Row="1" 
                   Text="Save" x:Name="SaveCapturedLyrics" Clicked="SaveCapturedLyrics_Clicked"/>

                                        </Grid>
                                    </Grid>

                                    <CollectionView Grid.Row="2" x:Name="OnlineLyricsResView"
                                                ItemsSource="{Binding AllSyncLyrics}"
                                                x:DataType="vm:HomePageVM">
                                        <CollectionView.EmptyView>
                                            <ContentView>
                                                <VerticalStackLayout HorizontalOptions="Center" Spacing="5"
                                 BackgroundColor="Transparent"
                                 x:Name="emptyV">
                                                    <Label Text="Searching..." IsVisible="{Binding IsFetching}"/>

                                                    <Image x:Name="Lookgif" Source="eyes.gif" IsVisible="False" IsAnimationPlaying="False"
                   HeightRequest="0" WidthRequest="0" />
                                                    <Image x:Name="fetchFailed" Source="disappointed_face.gif" HeightRequest="100" WidthRequest="100"                                                               
                   IsVisible="False" IsAnimationPlaying="False"/>

                                                    <Label Text="Service is Unavailable, try again !" 
                   x:Name="NoLyricsFoundMsg" IsVisible="False"
                   />
                                                </VerticalStackLayout>

                                            </ContentView>
                                        </CollectionView.EmptyView>
                                        <CollectionView.ItemTemplate>
                                            <DataTemplate x:DataType="models:Content">

                                                <Border Stroke="DarkSlateBlue" StrokeShape="RoundRectangle, 10"
                            Padding="10" Margin="0,5">
                                                    <VerticalStackLayout HorizontalOptions="Start" >

                                                        <Label Text="{Binding TrackName, StringFormat='Song Title: {0}'}" HorizontalTextAlignment="Center"/>

                                                        <Label Text="{Binding ArtistName, StringFormat='Artist Name : {0}'}"/>

                                                        <Label Text="{Binding AlbumName, StringFormat='Album Name: {0}'}"/>

                                                        <HorizontalStackLayout IsVisible="{Binding Instrumental}">
                                                            <Label Text="Song is an Intrumental" />
                                                        </HorizontalStackLayout>

                                                        <HorizontalStackLayout IsVisible="{Binding Instrumental, Converter={StaticResource BoolToInverse}}">

                                                            <Button Text="Plain Lyrics" HorizontalOptions="Center" 
                                        Clicked="ViewLyricsBtn_Clicked" BackgroundColor="#5A4CA3"
                                        IsVisible="{Binding IsSynced, Converter= {x:StaticResource BoolToInverse}}"/>

                                                            <Button Text="Synced Lyrics" HorizontalOptions="Center" 
                                        IsVisible="{Binding IsSynced}" Clicked="ViewLyricsBtn_Clicked" />
                                                        </HorizontalStackLayout>
                                                    </VerticalStackLayout>
                                                </Border>

                                            </DataTemplate>
                                        </CollectionView.ItemTemplate>
                                    </CollectionView>
                                </Grid>
                            </Border>
                        </Grid>
                    </dx:TabViewItem>
                    
                    <dx:TabViewItem HeaderText="View Songs">
                        
                        <Grid x:Name="ArtistSongsView" IsVisible="True">                        
                        <dx:DXStackLayout Margin="10,0" BackgroundColor="Transparent">
                            <HorizontalStackLayout Grid.Row="0" Spacing="10" 
                BackgroundColor="Transparent" 
                                   HorizontalOptions="Fill">
                                <dx:DXImage Source="{Binding SelectedArtistOnArtistPage.ImagePath}" HeightRequest="150"
                            WidthRequest="150" />
                                <VerticalStackLayout BackgroundColor="Transparent">
                                    <Label Text="{Binding SelectedArtistOnArtistPage.Name}"/>
                                </VerticalStackLayout>
                            </HorizontalStackLayout>

                            <dx:DXCollectionView ItemsSource="{Binding AllArtistsAlbums}" HeightRequest="150" Orientation="Horizontal"
                                                 Tap="DXCollectionView_Tap">
                                <dx:DXCollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:AlbumModelView">
                                        <dx:DXButton BackgroundColor="Transparent" 
                                     CommandParameter="{Binding .}" PressedBackgroundColor="DarkSlateBlue">
                                            <dx:DXButton.Content>
                                                <VerticalStackLayout BackgroundColor="Transparent">
                                                    <Image Source="{Binding AlbumImagePath}" HeightRequest="50"/>
                                                    <Label Text="{Binding Name}"/>
                                                </VerticalStackLayout>
                                            </dx:DXButton.Content>
                                        </dx:DXButton>
                                    </DataTemplate>
                                </dx:DXCollectionView.ItemTemplate>
                            </dx:DXCollectionView>
                            <dx:DXCollectionView Grid.Row="2"  IsVisible="True"
                ItemsSource="{Binding AllArtistsAlbumSongs}"
                                 SelectionMode="Single" ItemSpacing="5">
                                <dx:DXCollectionView.Header>
                                    <FlexLayout JustifyContent="SpaceBetween">
                                        <Label Text="Songs"/>
                                        <dx:DXButton TapPressed="ResetSongs_TapPressed" x:Name="ResetSongs"
                                     BackgroundColor="Transparent" IconColor="White"
                                     PressedBackgroundColor="DarkSlateBlue"
                                     Icon="repeat.png">

                                        </dx:DXButton>
                                    </FlexLayout>
                                </dx:DXCollectionView.Header>
                                <dx:DXCollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:SongModelView">
                                        <dx:DXButton CornerRadius="10" Padding="5" x:Name="SingleSongBtn"
                                     BackgroundColor="Transparent" Clicked="SingleSongBtn_Clicked"
                                     PressedBackgroundColor="DarkSlateBlue">

                                            <FlexLayout JustifyContent="SpaceBetween" >

                                                <VerticalStackLayout VerticalOptions="Center" 
                                     BackgroundColor="Transparent">
                                                    <Label Text="{Binding Title}" WidthRequest="250" HeightRequest="30" />
                                                    <Image WidthRequest="13" HorizontalOptions="Start"
                                       IsVisible="{Binding IsCurrentPlayingHighlight}"
                                       Source="playcircle.png"/>
                                                </VerticalStackLayout>
                                                <dx:DXButton Grid.Column="1"  
                                 IconPlacement="Right" x:Name="SingleSongCxtMenuArea" ButtonType="ToolButton"
                                         Icon="more1.png">


                                                    <VerticalStackLayout BackgroundColor="Transparent">
                                                        <Label Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" FontSize="16"/>

                                                        <Image BackgroundColor="Transparent" IsVisible="{Binding HasLyrics}"
                                         WidthRequest="20" HorizontalOptions="Center"
                                           Source="musicfile.png"
>
                                                        </Image>
                                                    </VerticalStackLayout>
                                                </dx:DXButton>
                                            </FlexLayout>

                                        </dx:DXButton>
                                    </DataTemplate>
                                </dx:DXCollectionView.ItemTemplate>
                            </dx:DXCollectionView>
                        
                    </dx:DXStackLayout>

                    </Grid>

                    </dx:TabViewItem>

                    </dx:TabView>
                </Grid>
            </dx:BottomSheet.Content>
        </dx:BottomSheet>

        <dx:DXPopup x:Name="SongsMenuPopup" PlacementTarget="{x:Reference myPage}"
         AllowScrim="True" CloseOnScrimTap="True" >
            <Grid>
                <dx:DXImage Source="{Binding MySelectedSong.CoverImagePath}"
                 Opacity="0.1"/>
                <dx:DXStackLayout Orientation="Vertical" BackgroundColor="Transparent">
                    <dx:DXStackLayout.Resources>
                        <ResourceDictionary>
                            <Style TargetType="dx:DXButton">
                                <Setter Property="ButtonType" Value="ToolButton"/>
                                <Setter Property="HorizontalContentAlignment" Value="Start"/>

                            </Style>
                            <Style TargetType="Label">
                                <Setter Property="FontSize" Value="24"/>
                                <Setter Property="FontAttributes" Value="Bold"/>

                            </Style>
                        </ResourceDictionary>
                    </dx:DXStackLayout.Resources>
                    <dx:DXStackLayout Orientation="Horizontal" HorizontalOptions="Center" VerticalOptions="Center"
                             ItemSpacing="10" BackgroundColor="Transparent">
                        <!--<toolkit:AvatarView ImageSource="{Binding MySelectedSong.CoverImagePath}"
                     HeightRequest="100" WidthRequest="100"
                     CornerRadius="15" BorderWidth="0"/>-->
                        <dx:DXStackLayout Orientation="Vertical" VerticalOptions="Center" >

                            <Label Text="{Binding MySelectedSong.Title}" HorizontalTextAlignment="Center"
                 LineBreakMode="NoWrap" FontSize="30"/>
                            <Label Text="{Binding MySelectedSong.ArtistName}" 
                 FontSize="22"
                 HorizontalTextAlignment="Center"/>
                        </dx:DXStackLayout>
                    </dx:DXStackLayout>

                    <dx:DXSeparator />
                    <dx:DXButton Content="Set Play Repeat Count" BackgroundColor="Transparent"
             Command="{Binding OpenRepeatSetterPopupCommand}" 
                     Icon="repone.png">

                    </dx:DXButton>
                    <dx:DXButton Content="Add to Playlist**"
                  Icon="playlistminimalistic.png">

                    </dx:DXButton>
                    <dx:DXButton Content="Go to Album" Command="{Binding NavigateToSpecificAlbumPageFromBtmSheetCommand}"
                     CommandParameter="{Binding MySelectedSong}"  
                     Icon="album.png"
             x:Name="GoToAlbumBtn">

                    </dx:DXButton>
                    <dx:DXButton Content="Go to Artist" x:Name="GotoArtistBtn" Clicked="GotoArtistBtn_Clicked"
                     Icon="artist.png">

                    </dx:DXButton>
                    <dx:DXButton Content="Tag Editor" CommandParameter="{Binding MySelectedSong}" 
                     Icon="clapperboardedit.png"
             Command="{Binding OpenEditSongPopupCommand}">

                    </dx:DXButton>
                    <dx:DXButton Content="Song Info"  Icon="fileinfo.png"
             Command="{Binding OpenViewSongDetailsPopupCommand}">

                    </dx:DXButton>
                    <dx:DXButton Content="Share" Clicked="ClosePopup" Icon="squareforward.png"
             Command="{Binding NavigateToShareStoryPageCommand}">

                    </dx:DXButton>
                    <dx:DXButton Content="Delete" CommandParameter="{Binding MySelectedSong}" Icon="delete.png"
             Command="{Binding DeleteFileCommand}">

                    </dx:DXButton>

                </dx:DXStackLayout>
            </Grid>

        </dx:DXPopup>
    </Grid>
</ContentPage>