<?xml version="1.0" encoding="utf-8" ?>
<uranium:UraniumContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Mobile.HomePageM"
            xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
            xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
            xmlns:m="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
            xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters" 
            xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
            xmlns:models="clr-namespace:Dimmer_MAUI.Utilities.Services.Models"
            xmlns:viewsM="clr-namespace:Dimmer_MAUI.Views.Mobile"
            xmlns:cv="clr-namespace:Dimmer_MAUI.Views.Mobile.CustomViewsM"
            xmlns:cm="https://github.com/jerry08/Plugin.ContextMenuContainer"
            x:DataType="vm:HomePageVM"
            Shell.NavBarIsVisible="True"                            
            x:Name="myPage" Shell.TitleColor="Black"
            BackgroundColor="Black"
            Shell.TabBarBackgroundColor="Black"
            >

<uranium:UraniumContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=White}"/>
            </Style>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>
            <converters:BoolToImageConverter x:Key="BoolToImage"/>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
        </ResourceDictionary>
    </uranium:UraniumContentPage.Resources>
    
    
    <toolkit:DockLayout Margin="5,0">

        <Grid ColumnDefinitions="auto,*,auto" toolkit:DockLayout.DockPosition="Top">

            <!-- Label at the extreme left -->
            <Label Grid.Column="0"
           Text="{Binding TotalNumberOfSongs, StringFormat='{0} Songs'}"
           HorizontalTextAlignment="Start"
           VerticalTextAlignment="Center"
           FontAttributes="Bold"
           TextColor="DarkSlateBlue"
           FontSize="20" />

            <!-- 2nd Grid to occupy the middle (full remaining space) -->
            <Grid Grid.Column="1" Margin="2"
                  IsVisible="False" ColumnDefinitions="*,Auto"
                  x:Name="TitleSearchView">
                <material:TextField Title="Search The Music ..."
                            x:Name="SearchSongSB" Grid.Column="0"
                            ClearButtonVisibility="WhileEditing"
                            TextColor="White"
                            TextChanged="SearchSongSB_TextChanged"/>
                <ImageButton Clicked="HideSearchView_Clicked"
                     HeightRequest="30"
                     Grid.Column="1">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Close}"/>
                    </ImageButton.Source>
                </ImageButton>
            </Grid>

        <DataTemplate x:Key="HomePageColViewTemplate" x:DataType="models:SongsModelView">
            <dx:SwipeContainer FullSwipeMode="End">
                <dx:SwipeContainer.ItemView>
                    <Border StrokeThickness="0" Padding="10,0,0,0">

                        <Grid ColumnDefinitions="*,Auto">
                            <HorizontalStackLayout Grid.Column="0" Spacing="5">
                                <toolkit:AvatarView ImageSource="{Binding CoverImagePath}" Text="{Binding Title}"                                            
                                            CornerRadius="10" BorderWidth="0"/>
                                <VerticalStackLayout VerticalOptions="Center">
                                    <Label Text="{Binding Title}" FontSize="16" LineBreakMode="TailTruncation"
                                           WidthRequest="220"/>
                                    <Label Text="{Binding ArtistName}" FontSize="14" Opacity="0.55"/>
                                    
                                </VerticalStackLayout>
                            </HorizontalStackLayout>

                            <dx:DXButton Grid.Column="1"  
                                 IconPlacement="Right" x:Name="SingleSongCxtMenuArea" ButtonType="ToolButton">
                                <dx:DXButton.Icon>
                                    <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.More_vert}"/>
                                </dx:DXButton.Icon>

                                <VerticalStackLayout >
                                    <Label Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" FontSize="18"/>

                                    <Image BackgroundColor="Transparent" 
                                         WidthRequest="20" HorizontalOptions="Center"
>
                                        <Image.Source>
                                            <FontImageSource FontFamily="MaterialRounded" Glyph="{x:Static m:MaterialRounded.Lyrics}"/>
                                        </Image.Source>
                                    </Image>
                                </VerticalStackLayout>
                            </dx:DXButton>
                        </Grid>

                    </Border>

                </dx:SwipeContainer.ItemView>

                <dx:SwipeContainer.EndSwipeItems>
                    <dx:SwipeContainerItem
                        Caption="View Lyrics" x:Name="ShowSongDetails" Tap="ShowSongDetails_Tap"
                        BackgroundColor="DarkSlateBlue" FontColor="White"
                        >
                        <dx:SwipeContainerItem.Image>
                            <FontImageSource FontFamily="MaterialRounded" Glyph="{Static m:MaterialRounded.Visibility}"/>
                        </dx:SwipeContainerItem.Image>
                    </dx:SwipeContainerItem>
                </dx:SwipeContainer.EndSwipeItems>
            </dx:SwipeContainer>

        </DataTemplate>

    </ContentPage.Resources>

                <ImageButton Clicked="ShowFolderSelectorImgBtn_Clicked" 
                     HeightRequest="35">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Settings}"/>
                    </ImageButton.Source>
                </ImageButton>
            </HorizontalStackLayout>

        </Grid>


        <ActivityIndicator IsRunning="{Binding IsLoadingSongs}" IsVisible="{Binding IsLoadingSongs}" toolkit:DockLayout.DockPosition="Top"/>

        <Grid>
            <CollectionView
                ItemsSource="{Binding DisplayedSongs}" SelectionMode="None" 
                SelectionChanged="SongsColView_SelectionChanged"
                VerticalScrollBarVisibility="Always" x:Name="SongsColView">
                <CollectionView.EmptyView>
                    <VerticalStackLayout>
                        <Label Text="No Songs Found..... ðŸ’”" HorizontalOptions="Center" FontSize="30"/>
                        <Label Text="Tap On Search Icon On Top Right To Scan Songs" HorizontalOptions="Center" FontSize="15"/>
                    </VerticalStackLayout>
                </CollectionView.EmptyView>
                <CollectionView.ItemTemplate>

                    <DataTemplate x:DataType="models:SongsModelView">

                        <Border Stroke="Transparent" Padding="10,0">
                            <Border.Triggers>
                                <DataTrigger TargetType="Border" Binding="{Binding IsCurrentPlayingHighlight}" Value="True">
                                    <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                    <Setter Property="StrokeThickness" Value="0.8"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Border" Binding="{Binding IsCurrentPlayingHighlight}" Value="False">
                                    <Setter Property="Stroke" Value="Transparent"/>
                                    <Setter Property="StrokeThickness" Value="1"/>
                                </DataTrigger>
                            </Border.Triggers>
                            <Grid ColumnDefinitions="*,Auto" Margin="0,3">

                                <HorizontalStackLayout Grid.Column="0" Spacing="5">
                                    <HorizontalStackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped"/>
                                    </HorizontalStackLayout.GestureRecognizers>
                                    <toolkit:AvatarView ImageSource="{Binding CoverImagePath}"
        CornerRadius="10" BorderWidth="0"/>
                                    <VerticalStackLayout>
                                        <Label Text="{Binding Title}" FontSize="18" LineBreakMode="TailTruncation" />
                                        <Label Text="{Binding ArtistName}" FontSize="14" Opacity="0.5"/>
                                        <Label Text="{Binding DatesPlayedAndWasPlayCompleted.Count}"/>
                                    </VerticalStackLayout>
                                </HorizontalStackLayout>


                                <uranium:StatefulContentView Grid.Column="1"
                                                        LongPressed="StatefulContentView_LongPressed"
                                                         
                                                        Tapped="StatefulContentView_Tapped"
                                                        CommandParameter="{Binding .}"
                                                        x:Name="SingleSongStateFullContent">
                                    <HorizontalStackLayout>
                                        <VerticalStackLayout>
                                            <Label Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" FontSize="18"/>
                                            <Label Text="{Binding FileFormat}" HorizontalTextAlignment="End" FontSize="13"/>
                                            <Image IsVisible="{Binding HasLyrics}" HeightRequest="10" HorizontalOptions="End">
                                                <Image.Source>
                                                    <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Lyrics}"/>
                                                </Image.Source>
                                            </Image>
                                        </VerticalStackLayout>
                                        <ImageButton BackgroundColor="Transparent" 
                                    WidthRequest="20" HorizontalOptions="Center"
                                    Command="{Binding BindingContext.OpenSingleSongOptionsBtmSheetCommand, Source={x:Reference myPage}}"
                                    CommandParameter="{Binding .}">
                                            <ImageButton.Source>
                                                <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.More_vert}"/>
                                            </ImageButton.Source>
                                        </ImageButton>
                                    </HorizontalStackLayout>
                                </uranium:StatefulContentView>
                            </Grid>

                        </Border>

                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            
            <VerticalStackLayout Spacing="3" VerticalOptions="End" HorizontalOptions="End" 
                                 HeightRequest="160" x:Name="NormalMiniUtilFABs">
                <ImageButton  Clicked="ShowSearchView_Clicked" Padding="10"
                                  BackgroundColor="DarkSlateBlue" CornerRadius="20">
                    
                    <ImageButton.GestureRecognizers>
                        <SwipeGestureRecognizer Direction="Up" Swiped="SwipeGestureRecognizer_SwipedUp"/>
                        <SwipeGestureRecognizer Direction="Down" Swiped="SwipeGestureRecognizer_SwipedDown"/>
                    </ImageButton.GestureRecognizers>
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Search}"/>
                    </ImageButton.Source>
                </ImageButton>

                <ImageButton  BackgroundColor="DarkSlateBlue"  
                  CornerRadius="20" Clicked="SearchFAB_Clicked"
                  Padding="10" >
                    <ImageButton.GestureRecognizers>
                        <SwipeGestureRecognizer Direction="Up" Swiped="SwipeGestureRecognizer_SwipedUp"/>
                        <SwipeGestureRecognizer Direction="Down" Swiped="SwipeGestureRecognizer_SwipedDown"/>
                    </ImageButton.GestureRecognizers>
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Center_focus_strong}"/>
                    </ImageButton.Source>
                </ImageButton>
            </VerticalStackLayout>

            <VerticalStackLayout Spacing="3" VerticalOptions="End" IsVisible="False"
                     HeightRequest="180" x:Name="MultiSelectMiniUtilFABs">
                <Border BackgroundColor="DarkSlateBlue" WidthRequest="45" 
                        HorizontalOptions="End" VerticalOptions="End"
                        StrokeThickness="0">
                    <ImageButton Clicked="CancelMultiSelect_Clicked" 
                                 >
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Size="45" Glyph="{x:Static m:MaterialRound.Arrow_back}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Border>
                <Border BackgroundColor="DarkSlateBlue" WidthRequest="45" HorizontalOptions="End" 
                        VerticalOptions="End" StrokeThickness="0">
                    <ImageButton Command="{Binding MultiSelectUtilClickedCommand}" 
                             >
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Size="45"
                                             Glyph="{x:Static m:MaterialRound.Delete_forever}"/>
                            </ImageButton.Source>
                        <ImageButton.CommandParameter>
                            <x:Int32>0</x:Int32>
                        </ImageButton.CommandParameter>
                    </ImageButton>
                </Border>
                <HorizontalStackLayout VerticalOptions="End" HorizontalOptions="Center">
                    <Label Text="{Binding MultiSelectText}" FontSize="16"
                           FontAttributes="Bold" TextColor="DarkSlateBlue" />
                </HorizontalStackLayout>
                
            </VerticalStackLayout>
        </Grid>


    </toolkit:DockLayout>


</uranium:UraniumContentPage>