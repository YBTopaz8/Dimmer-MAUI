<?xml version="1.0" encoding="utf-8" ?>
<uranium:UraniumContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Mobile.HomePageM"
            xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
            xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
            xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer.Utilities"                            
            xmlns:icon="clr-namespace:IconPacks.IconKind;assembly=IconPacks.Material"
            xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
            xmlns:models="clr-namespace:Dimmer.Models;assembly=Dimmer.Models"
            xmlns:cv="clr-namespace:PanCardView;assembly=PanCardView"
            xmlns:cm="https://github.com/jerry08/Plugin.ContextMenuContainer"
            xmlns:mdc="clr-namespace:Material.Components.Maui;assembly=Material.Components.Maui"
            x:DataType="vm:HomePageVM"
            x:Name="myPage"          
            BackgroundColor="Black"
            Title="{Binding TotalNumberOfSongs, StringFormat='{0} Songs'}"
            >

    <Shell.TitleColor>
        <OnPlatform x:TypeArguments="Color">
            <On Platform="Android" Value="DarkSlateBlue"/>
            <On Platform="iOS" Value="White"/>
        </OnPlatform>
    </Shell.TitleColor>

    <uranium:UraniumContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{AppThemeBinding Dark=White, Light=White}"/>
            </Style>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>
            <converters:BoolToImageConverter x:Key="BoolToImage"/>
        </ResourceDictionary>
    </uranium:UraniumContentPage.Resources>

    <AbsoluteLayout >
        

        <toolkit:DockLayout Margin="5,0" AbsoluteLayout.LayoutBounds="0,0,1,1" AbsoluteLayout.LayoutFlags="All">

        <Button Text="Select Songs" Command="{Binding SelectSongFromFolderCommand}" toolkit:DockLayout.DockPosition="Top"/>
            <ActivityIndicator IsRunning="{Binding IsLoadingSongs}" IsVisible="{Binding IsLoadingSongs}" toolkit:DockLayout.DockPosition="Top"/>

            <CollectionView ItemsSource="{Binding DisplayedSongs}" SelectionMode="Single" VerticalScrollBarVisibility="Always"
                        SelectedItem="{Binding PickedSong}" toolkit:DockLayout.DockPosition="Top"
                        Margin="0,0,0,40">
            <CollectionView.ItemTemplate>

                <DataTemplate x:DataType="models:SongsModelView">
                    <FlexLayout JustifyContent="SpaceBetween" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal"></VisualState>
                                <VisualState Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor" Value="#99483D8B"></Setter>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        
                        <FlexLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding BindingContext.PlaySongCommand, Source={x:Reference myPage}}"
                                                  CommandParameter="{Binding .}"/>
                        </FlexLayout.GestureRecognizers>
                        <HorizontalStackLayout Spacing="5">
                            
                            <VerticalStackLayout>
                                <Label Text="{Binding Title}" FontSize="19"/>
                                <Label Text="{Binding ArtistName}" FontSize="14" Opacity="0.5"/>
                                <Label Text="{Binding PlayCount}" FontSize="14" Opacity="0.5"/>
                            </VerticalStackLayout>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <VerticalStackLayout>
                                <Label Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" FontSize="18"/>
                                <Label Text="{Binding FileFormat}" HorizontalTextAlignment="End" FontSize="13"/>
                            </VerticalStackLayout>
                                <cm:ContextMenuContainer>
                                    <cm:ContextMenuContainer.MenuItems >
                                        <cm:ContextMenuItem Text="Share"/>
                                        <cm:ContextMenuItem Text="Delete"/>
                                    </cm:ContextMenuContainer.MenuItems>

                                    <cm:ContextMenuContainer.Content >
                                        <mdc:IconButton IconData="{Static icon:Material.MoreVert}" VerticalOptions="Start" HeightRequest="42" 
                                                        WidthRequest="20" BackgroundColor="Transparent"/>
                                    </cm:ContextMenuContainer.Content>
                                </cm:ContextMenuContainer>
                            </HorizontalStackLayout>

                        </FlexLayout>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>


    </toolkit:DockLayout>


        <mdc:FAB IconData="{Static icon:Material.Search}" BackgroundColor="DarkSlateBlue" IconColor="White"
                 AbsoluteLayout.LayoutBounds="1,1,AutoSize, AutoSize"
                 AbsoluteLayout.LayoutFlags="PositionProportional"
                 Margin="0,0,5,45" x:Name="SearchFAB"
                 Clicked="SearchFAB_Clicked" 
                 LongPressed="SearchFAB_LongPressed"/>
    </AbsoluteLayout>
    <uranium:UraniumContentPage.Attachments>

        <material:BackdropView Title="Search" IconImageSource="search_d" x:Name="SearchBackDrop">
            <VerticalStackLayout Margin="0,0" HeightRequest="60">
                <Border BackgroundColor="#252526" Stroke="Transparent" 
                        StrokeShape="RoundRectangle 10">
                    <Entry Placeholder="Type to Search" x:Name="SearchSongSB"
                           TextColor="White" TextChanged="SearchSongSB_TextChanged"/>

                </Border>
            </VerticalStackLayout>

        </material:BackdropView>

        <material:BottomSheetView x:Name="nowPlayingBtmSheet" CloseOnTapOutside="True" BackgroundColor="Black">
            <material:BottomSheetView.Header>
                <FlexLayout JustifyContent="SpaceBetween" x:Name="btmcontrols" BackgroundColor="Red">
                    
                    <HorizontalStackLayout Spacing="5">
                        <Image Source="{Binding TemporarilyPickedSong.CoverImage}"
                            HeightRequest="40" Aspect="AspectFill"/>
                        <Label Text="{Binding TemporarilyPickedSong.Title}" VerticalOptions="Center"/>
                        <Label Text="{Binding TemporarilyPickedSong.ArtistName}" VerticalOptions="Center"/>
                    </HorizontalStackLayout>

                    <HorizontalStackLayout Spacing="5">
                        <mdc:IconButton IconData="{Static icon:Material.SkipPrevious}" Command="{Binding PlayPreviousSongCommand}" 
                                        HeightRequest="45" BackgroundColor="Transparent"/>
                        <mdc:IconButton IconData="{Binding PlayPauseImage}" Command="{Binding PauseResumeSongCommand}" 
                                        HeightRequest="45" BackgroundColor="Transparent"/>
                        <mdc:IconButton IconData="{Static icon:Material.SkipNext}" Command="{Binding PlayNextSongCommand}" 
                                        HeightRequest="45" BackgroundColor="Transparent"/>
                    </HorizontalStackLayout>
                </FlexLayout>

            </material:BottomSheetView.Header>

          
                <Grid toolkit:DockLayout.DockPosition="Bottom" 
                      HeightRequest="{Binding Height, Source={Reference nowPlayingBtmSheet}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Border StrokeShape="RoundRectangle 18" Margin="1,5,1,10" VerticalOptions="Start" 
                            StrokeThickness="0" Grid.Row="0" MinimumHeightRequest="320" x:Name="lyricsCover">
                        <Grid>
                            <Image Source="{Binding PickedSongCoverImage}" Aspect="Fill" Opacity="0.45"/>
                            <!-- Synced lyics Col View -->
                            <CollectionView ItemsSource="{Binding SynchronizedLyrics}" SelectionMode="Single" 
                                            BackgroundColor="Transparent" IsVisible="True" 
                                            SelectedItem="{Binding CurrentLyricPhrase}" SelectionChanged="syncCol_SelectionChanged" IsEnabled="False" 
                                            Margin="10" x:Name="SyncedLyricsColView" MaximumHeightRequest="200" HorizontalOptions="Center">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:LyricPhraseModel">
                                        <VerticalStackLayout>
                                            <Label Text="{Binding Text}" HorizontalOptions="Center" HorizontalTextAlignment="Center"
                                FontSize="22" LineBreakMode="WordWrap" Margin="0,5"/>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup Name="CommonStates">
                                                    <VisualState Name="Normal"></VisualState>
                                                    <VisualState Name="Selected">
                                                        <VisualState.Setters>
                                                            <Setter Property="BackgroundColor" Value="#4D483D8B"></Setter>
                                                        </VisualState.Setters>
                                                    </VisualState>

                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </VerticalStackLayout>

                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </Grid>
                    </Border>

                    <VerticalStackLayout Margin="0,0" Spacing="15" VerticalOptions="End" 
                         MinimumHeightRequest="310" x:Name="dl" Grid.Row="1">

                        <Grid BackgroundColor="Transparent" Margin="5,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- Left-aligned Label -->
                            <Label Grid.Column="0" Text="{Binding CurrentPositionText, Converter={StaticResource DurationConverter}}" 
                                   VerticalOptions="Center" FontSize="17"/>

                            <!-- Slider in the center -->
                            <Slider Grid.Column="1" VerticalOptions="Center"
                                    Value="{Binding CurrentPosition, Mode=TwoWay}" MinimumTrackColor="DarkSlateBlue"
                                    DragCompletedCommand="{Binding SeekSongPositionCommand}"/>

                            <!-- Right-aligned Label -->
                            <Label Grid.Column="2" Text="{Binding PickedSong.DurationInSeconds, Converter={StaticResource DurationConverter}}"
                                    VerticalOptions="Center" Opacity="0.6" FontSize="16"/>
                        </Grid>

                        <Label Text="{Binding TemporarilyPickedSong.Title}" HorizontalTextAlignment="Center" 
                                FontAttributes="Bold" FontSize="25"/>

                    <Label HorizontalTextAlignment="Center" FontSize="16"> 
                        <Label.Text>
                            <MultiBinding StringFormat="{} {0} - {1}">
                                <Binding Path="TemporarilyPickedSong.ArtistName"/>
                                <Binding Path="TemporarilyPickedSong.AlbumName"/>
                            </MultiBinding>
                        </Label.Text>
                    </Label>
                        

                        <Grid HorizontalOptions="FillAndExpand" VerticalOptions="Start" 
                                ColumnSpacing="10" BackgroundColor="Transparent" 
                                Margin="5,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                        <mdc:IconButton  Grid.Column="0" IconData="{Static icon:Material.Replay}" 
                                         BackgroundColor="Transparent" HeightRequest="45"/>
                        <mdc:IconButton  Grid.Column="1" IconData="{Static icon:Material.SkipPrevious}" BackgroundColor="Transparent"
                                         Command="{Binding PlayPreviousSongCommand}" HeightRequest="45"/>
                        <mdc:IconButton  Grid.Column="2"  IconData="{Binding PlayPauseImage}" WidthRequest="45"
                                         Command="{Binding PauseResumeSongCommand}" HeightRequest="45"/>
                        <mdc:IconButton  Grid.Column="3" IconData="{Static icon:Material.SkipNext}" BackgroundColor="Transparent"
                                         Command="{Binding PlayNextSongCommand}" HeightRequest="45"/>
                        <mdc:IconButton  Grid.Column="4" IconData="{Static icon:Material.Shuffle}" BackgroundColor="Transparent"
                                         HeightRequest="35"/>


                        </Grid>

                        <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.ReleaseYear}" IsVisible="False"/>
                        <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.FileFormat}"/>
                        <Label HorizontalTextAlignment="Center" Text="{Binding TemporarilyPickedSong.FileSize, Converter={StaticResource FileSizeConverter}}" />

                        <Grid Margin="5,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <!-- For left icon -->
                                <ColumnDefinition Width="*"/>
                                <!-- For the slider -->
                                <ColumnDefinition Width="Auto"/>
                                <!-- For right icon -->
                            </Grid.ColumnDefinitions>

                            <mdc:IconButton IconData="{Static icon:Material.VolumeDown}" BackgroundColor="Transparent"
                                Grid.Column="0" Command="{Binding DecreaseVolumeCommand}" 
                                        HorizontalOptions="Start" HeightRequest="35" WidthRequest="35"/>
                            
                            <Slider Grid.Column="1" Value="{Binding VolumeSliderValue}" MinimumTrackColor="DarkSlateBlue" 
                                    Maximum="1" Minimum="0" 
                                    DragCompletedCommand="{Binding ChangeVolumeCommand}" HorizontalOptions="FillAndExpand"/>
                            
                            <mdc:IconButton IconData="{Static icon:Material.VolumeUp}" BackgroundColor="Transparent"
                                Grid.Column="2" Command="{Binding IncreaseVolumeCommand}" 
                                HorizontalOptions="End" HeightRequest="35" WidthRequest="35"/>

                        </Grid>

                        <FlexLayout JustifyContent="SpaceBetween" 
                                    toolkit:DockLayout.DockPosition="Top">
                            <Label Text="" />

                            <HorizontalStackLayout>
                                <Label Text="sleep" IsVisible="False"/>
                            <Label Text="ShowLyrics" IsVisible="False"/>
                            <mdc:IconButton IconData="{Binding TemporarilyPickedSong.IsFavorite, Converter={StaticResource BoolToImage}}" 
                                            Command="{Binding Source={x:Reference myPage}, Path=BindingContext.AddSongToFavoritesCommand}"
                                            CommandParameter="{Binding TemporarilyPickedSong}" BackgroundColor="Transparent"/>
                            <mdc:IconButton IconData="{Static icon:Material.ArrowDownward}" BackgroundColor="Transparent"
                                            Clicked="BringNowPlayBtmSheetDownBtn_Clicked"/>
                            
                            </HorizontalStackLayout>

                        </FlexLayout>

                    </VerticalStackLayout>

                </Grid>
            
            
        </material:BottomSheetView>
    </uranium:UraniumContentPage.Attachments>
</uranium:UraniumContentPage>