<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
            xmlns:dx="http://schemas.devexpress.com/maui"
            xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             
            x:DataType="vm:HomePageVM" VerticalOptions="End" HorizontalOptions="End"
             x:Class="Dimmer_MAUI.Views.Mobile.EachPageNPFAB_Mobile">
    <HorizontalStackLayout VerticalOptions="End" Spacing="10" BackgroundColor="Transparent"
                      HorizontalOptions="End">
        <dx:DXExpander x:Name="NowPlayingMiniControl" Opacity="1" 
                    IsExpanded="False" BackgroundColor="Transparent"
                    HorizontalExpandMode="FromEndToStart">
            <dx:DXExpander.Resources>
                <ResourceDictionary>
                    <Style TargetType="dx:DXButton">
                        <Setter Property="WidthRequest" Value="60"/>
                        <Setter Property="HeightRequest" Value="60"/>
                        <Setter Property="IconHeight" Value="45"/>
                        <Setter Property="IconWidth" Value="45"/>
                        <Setter Property="BackgroundColor" Value="Transparent"/>
                        <Setter Property="IconWidth" Value="60"/>
                        <Setter Property="PressedBackgroundColor" Value="DarkSlateBlue"/>
                    </Style>
                </ResourceDictionary>
            </dx:DXExpander.Resources>
            
            <dx:DXExpander.Content>
                <Grid WidthRequest="270" HeightRequest="150" BackgroundColor="Transparent">
                    <toolkit:AvatarView ImageSource="{Binding MySelectedSong.CoverImagePath}" BackgroundColor="Transparent"
                           Opacity="0.10" HeightRequest="150" WidthRequest="260" BorderWidth="0"/>
                    <dx:DXStackLayout Orientation="Vertical" x:DataType="vm:HomePageVM"
                               BackgroundColor="Transparent" 
                               CornerRadius="25" VerticalOptions="Center"
                               >
                    <dx:DXStackLayout.GestureRecognizers>
                        <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" Command="{Binding ShowNowPlayingBtmSheetCommand}"/>
                    </dx:DXStackLayout.GestureRecognizers>
                    <Label Text="{Binding TemporarilyPickedSong.Title}" LineBreakMode="TailTruncation"
                        FontSize="16" FontAttributes="Bold" Padding="5,0"
                        HorizontalOptions="Center"/>
                    <HorizontalStackLayout VerticalOptions="Center" HorizontalOptions="Center"
                                        Spacing="10" BackgroundColor="Transparent">
                        <dx:DXButton ShowContent="False" Command="{Binding PlayPreviousSongCommand}"
                                  Icon="skipprevious.png"
                                     IconHeight="80">
                            
                        </dx:DXButton>
                        <dx:DXButton Clicked="DXButton_Clicked"
                                     IconHeight="80">
                                <dx:DXButton.Triggers>
                                    <DataTrigger TargetType="dx:DXButton" Value="True" Binding="{Binding IsPlaying}">
                                        <Setter Property="Icon" Value="pause.png"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="dx:DXButton" Value="False" Binding="{Binding IsPlaying}">
                                        <Setter Property="Icon" Value="playcircle.png"/>
                                    </DataTrigger>
                                </dx:DXButton.Triggers>
                        </dx:DXButton>

                            <dx:DXButton Command="{Binding PlayNextSongCommand}" Icon="skipnext.png" IconHeight="80">
                        </dx:DXButton>
                    </HorizontalStackLayout>
                    <Label Text="{Binding TemporarilyPickedSong.ArtistName}" 
                        FontSize="17" LineBreakMode="TailTruncation"
                        HorizontalOptions="Center" Padding="10"/>
                </dx:DXStackLayout>
                </Grid>
            </dx:DXExpander.Content>
        </dx:DXExpander>

        <dx:DXButton  x:Name="NowPlayingBtn" Clicked="NowPlayingBtn_Clicked" BackgroundColor="Transparent"
                       
                       CornerRadius="40" WidthRequest="120" HeightRequest="120">
            <dx:DXButton.Content>

                <dx:RadialProgressBar  WidthRequest="120" HeightRequest="120" Value="{Binding CurrentPositionPercentage}" 
                                       ValueIndicatorThickness="6" Thickness="10" AllowAnimation="True"
                                       Fill="Transparent" StartAngle="-180" SweepAngle="360"
                                       ValueIndicatorFill="DarkSlateBlue">
                    <dx:RadialProgressBar.Triggers>
                        <DataTrigger TargetType="dx:RadialProgressBar" Binding="{Binding CurrentQueue}" Value="0">
                            <Setter Property="ValueIndicatorFill" Value="DarkSlateBlue"/>
                        </DataTrigger>
                        <DataTrigger TargetType="dx:RadialProgressBar" Binding="{Binding CurrentQueue}" Value="1">
                            <Setter Property="ValueIndicatorFill" Value="LightCoral"/>
                        </DataTrigger>
                    </dx:RadialProgressBar.Triggers>
                    <dx:RadialProgressBar.Content>

                        <toolkit:AvatarView ImageSource="{Binding MySelectedSong.CoverImagePath}"
                WidthRequest="120" HeightRequest="120" VerticalOptions="Fill"
                     BorderWidth="0" CornerRadius="50" Scale="0.9"
                Text="{Binding TemporarilyPickedSong.Title}" Opacity="0.8" />
                    </dx:RadialProgressBar.Content>

                </dx:RadialProgressBar>
            </dx:DXButton.Content>
        </dx:DXButton>

    </HorizontalStackLayout>
</ContentView>
