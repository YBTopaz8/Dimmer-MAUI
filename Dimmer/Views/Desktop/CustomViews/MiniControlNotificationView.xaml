<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.CustomViews.MiniControlNotificationView"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"             
             
             xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters"
             xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
             Title="MiniControlNotificationView">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="ImageButton">
                <Setter Property="WidthRequest" Value="40"/>
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="BorderColor" Value="Transparent"/>
            </Style>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <VerticalStackLayout Spacing="10" Margin="5,5" 
                         x:DataType="vm:HomePageVM">
        
        <FlexLayout JustifyContent="SpaceBetween" >


            <ImageButton x:Name="ImagePathh" WidthRequest="140"
                Command="{Binding BringAppToFrontCommand}" 
                            Opacity="0.5"/>


            <VerticalStackLayout VerticalOptions="End" Spacing="10" Margin="0,5">

                <ImageButton 
                        VerticalOptions="Start" 
                        HorizontalOptions="End"
                        Margin="5,0,-8,0"
                        Clicked="CloseImgBtn_Clicked">
                    <ImageButton.Source>
                        <x:String>X</x:String>
                    </ImageButton.Source>
                </ImageButton>

                <Label x:Name="songTitle"
                    LineBreakMode="HeadTruncation"
                   FontSize="16" FontAttributes="Bold" MaximumWidthRequest="220"
                       HorizontalOptions="Center"/>

                <Label x:Name="ArtistName"
                       TextColor="DarkSlateBlue" MaximumWidthRequest="180"
                       CharacterSpacing="1" FontSize="16" LineBreakMode="HeadTruncation"
                       HorizontalOptions="Center"/>

                <HorizontalStackLayout Spacing="15"
                                                       Margin="0,0,0,15"
                                                       BackgroundColor="Transparent"
              HorizontalOptions="Center" >
                    <Border WidthRequest="55" StrokeShape="RoundRectangle 30" 
>
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer x:Name="ToggleRepeat" Tapped="ToggleRepeat_Tapped">
                                <TapGestureRecognizer.CommandParameter>
                                    <x:Boolean>True</x:Boolean>
                                </TapGestureRecognizer.CommandParameter>
                            </TapGestureRecognizer>
                        </Border.GestureRecognizers>

                        <Image BackgroundColor="White">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image" Value="0" Binding="{Binding CurrentRepeatMode}">
                                    <Setter Property="Source" Value="repoff.png" />
                                </DataTrigger>
                                <DataTrigger TargetType="Image" Value="1" Binding="{Binding CurrentRepeatMode}">
                                    <Setter Property="Source" Value="repoff.png"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image" Value="2" Binding="{Binding CurrentRepeatMode}">
                                    <Setter Property="Source" Value="repone.png"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image" Value="4" Binding="{Binding CurrentRepeatMode}">
                                    <Setter Property="Source" Value="repone.png"/>
                                </DataTrigger>
                            </Image.Triggers>

                        </Image>
                    </Border>

                    <Border >
                        <ImageButton Command="{Binding PlayPreviousSongCommand}" Source="stepbackward.png" 
                                     ToolTipProperties.Text="Play Previous">

                            <ImageButton.Behaviors>
                                <toolkit:IconTintColorBehavior TintColor="White" />
                            </ImageButton.Behaviors>
                        </ImageButton>

                    </Border>

                    <Border WidthRequest="55" StrokeShape="RoundRectangle 30" 
           >
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding PlayPauseSongCommand}">

                            </TapGestureRecognizer>
                        </Border.GestureRecognizers>

                        <Image>
                            <Image.Triggers>
                                <DataTrigger TargetType="Image" Value="True" Binding="{Binding IsPlaying}">
                                    <Setter Property="Source" Value="pauseicon.png"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image" Value="False" Binding="{Binding IsPlaying}">
                                    <Setter Property="Source" Value="playdark.png"/>
                                </DataTrigger>
                            </Image.Triggers>

                        </Image>
                    </Border>

                    <Border WidthRequest="55" StrokeShape="RoundRectangle 30"
                                            HeightRequest="55" Padding="5,0,2,0">

                        <ImageButton Source="playdark.png" Command="{Binding PlayPreviousSongCommand}"  x:Name="PlayPauseBtn">

                        </ImageButton>
                    </Border>

                    <Border>
                        <ImageButton Command="{Binding PlayNextSongCommand}"
                  ToolTipProperties.Text="Play Next" Source="stepforward.png">
                            <ImageButton.Behaviors>
                                <toolkit:IconTintColorBehavior TintColor="White" />
                            </ImageButton.Behaviors>
                        </ImageButton>
                    </Border>

                    <Border>
                        <Border.Triggers>
                            <DataTrigger TargetType="Border" Binding="{Binding IsShuffleOn}" Value="True">
                                <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                <Setter Property="StrokeThickness" Value="3"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Border" Binding="{Binding IsShuffleOn}" Value="False">
                                <Setter Property="Stroke" Value="Transparent"/>
                            </DataTrigger>
                        </Border.Triggers>
                        <VerticalStackLayout>

                            <ImageButton Command="{Binding ToggleShuffleStateCommand}"  Source="shuffledark.png"
                               WidthRequest="15">
                                <ImageButton.Behaviors>
                                    <toolkit:IconTintColorBehavior TintColor="White" />
                                </ImageButton.Behaviors>
                                <ImageButton.CommandParameter>
                                    <x:Boolean>True</x:Boolean>
                                </ImageButton.CommandParameter>
                            </ImageButton>

                        </VerticalStackLayout>
                    </Border>
                </HorizontalStackLayout>
            </VerticalStackLayout>            
        </FlexLayout>
    </VerticalStackLayout>
</ContentPage>