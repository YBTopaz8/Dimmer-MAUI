<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.CustomViews.MediaPlaybackControlsView"
             IsVisible="True"
             xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
            xmlns:models="clr-namespace:Dimmer_MAUI.Utilities.Models"    
             xmlns:cw="clr-namespace:Dimmer_MAUI.Views.CustomViews"
             xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"                
             xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:DataType="vm:HomePageVM" BackgroundColor="#111111" Opacity="0.5"
             x:Name="myPage"
             HeightRequest="105">
    
    <ContentView.GestureRecognizers>
        
        <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered"
                                  PointerExited="PointerGestureRecognizer_PointerExited"/>
        
    </ContentView.GestureRecognizers>
    <ContentView.Resources>
        <ResourceDictionary>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
            <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter"/>
            <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter"/>
            <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter"/>
            <converters:BoolToYesNoConverter x:Key="BoolToYesNo"/>
            <converters:VolumeConverter x:Key="VolConverter" />
            <Style TargetType="Border">
                <Setter Property="StrokeShape" Value="RoundRectangle 20"/>
                <Setter Property="HeightRequest" Value="50"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                    <Setter Property="Stroke" Value="Transparent"/>
                                </VisualState.Setters>
                            </VisualState>                            
                            
                            <VisualState Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="#B197FC"/>
                                    <Setter Property="Stroke" Value="#B197FC"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ContentView.Resources>

    <Grid >

        <Grid ColumnDefinitions="Auto,*,200" BackgroundColor="#191919">
            <Grid.GestureRecognizers>
                <TapGestureRecognizer Tapped="NavToSingleSongShell_Tapped" NumberOfTapsRequired="2"/>
            </Grid.GestureRecognizers>

            <HorizontalStackLayout Grid.Column="0" Spacing="5" 
                                   Padding="5" ToolTipProperties.Text="Click To View">
                <HorizontalStackLayout.GestureRecognizers>
                    <TapGestureRecognizer Tapped="NavToSingleSongShell_Tapped"/>
                </HorizontalStackLayout.GestureRecognizers>
                <toolkit:AvatarView ImageSource="{Binding PickedSong.CoverImagePath}" Stroke="#B197FC" StrokeThickness="2"
                         Text="{Binding PickedSong.Title}"
                     WidthRequest="95" HeightRequest="95" Margin="2,0,0,0"
                         BorderWidth="0" CornerRadius="20">

                    <toolkit:AvatarView.Triggers>
                        <DataTrigger TargetType="toolkit:AvatarView" Binding="{Binding CurrentQueue}" Value="0">
                            <Setter Property="StrokeThickness" Value="0"/>
                        </DataTrigger>
                        <DataTrigger TargetType="toolkit:AvatarView" Binding="{Binding CurrentQueue}" Value="1">
                            <Setter Property="StrokeThickness" Value="2"/>
                        </DataTrigger>
                    </toolkit:AvatarView.Triggers>
                </toolkit:AvatarView>

                <VerticalStackLayout VerticalOptions="Center" BackgroundColor="Transparent" WidthRequest="200">
                    <Label Text="{Binding PickedSong.Title}" HorizontalOptions="Start"
                LineBreakMode="HeadTruncation" FontSize="16"/>
                    <Label Text="{Binding PickedSong.ArtistName}" 
                LineBreakMode="TailTruncation"
                Opacity="0.6" HorizontalOptions="Start"/>
                    <Label Text="{Binding PickedSong.AlbumName}" HorizontalOptions="Start"
            LineBreakMode="HeadTruncation"/>

                </VerticalStackLayout>

                <ImageButton Source="more1.png" Rotation="90"
                             Clicked="ShowCntxtMenuBtn_Clicked"                         
                             CommandParameter="0"
                             Opacity="1">
                </ImageButton>

            </HorizontalStackLayout>

            <VerticalStackLayout HorizontalOptions="Fill" Grid.Column="1">
                <HorizontalStackLayout Spacing="15" BackgroundColor="Transparent"
                        HorizontalOptions="Center" Padding="10,0">

                    <Border WidthRequest="55" StrokeShape="RoundRectangle 30" 
    >
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer x:Name="ToggleRepeat" Tapped="ToggleRepeat_Tapped"/>
                        </Border.GestureRecognizers>

                        <Image>
                            <Image.Triggers>

                                <DataTrigger TargetType="Image" Value="0" Binding="{Binding CurrentRepeatMode}">
                                    <!-- 0 is for repeat off -->
                                    <Setter Property="Source" Value="repoff.png" />
                                </DataTrigger>

                                <DataTrigger TargetType="Image" Value="1" Binding="{Binding CurrentRepeatMode}">
                                    <!-- 1 is for repeat all -->
                                    <Setter Property="Source" Value="repeat.png"/>
                                </DataTrigger>

                                <DataTrigger TargetType="Image" Value="2" Binding="{Binding CurrentRepeatMode}">
                                    <!-- 2 is for repeat one-->
                                    <Setter Property="Source" Value="repone.png"/>
                                </DataTrigger>

                                <DataTrigger TargetType="Image" Value="4" Binding="{Binding CurrentRepeatMode}">
                                    <Setter Property="Source" Value="repone.png"/>
                                </DataTrigger>

                            </Image.Triggers>
                        </Image>
                    </Border>


                    <Border>
                        <ImageButton Command="{Binding PlayPreviousSongCommand}" Source="skipprevious.png" 
                                     ToolTipProperties.Text="Play Previous">

                        </ImageButton>
                    </Border>

                    <Border WidthRequest="55" StrokeShape="RoundRectangle 30" 
                            >
                        <Border.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding PlayPauseSongCommand}"/>
                        </Border.GestureRecognizers>

                        <Image>
                            <Image.Triggers>
                                <DataTrigger TargetType="Image" Value="True" Binding="{Binding IsPlaying}">
                                    <Setter Property="Source" Value="pause.png"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image" Value="False" Binding="{Binding IsPlaying}">
                                    <Setter Property="Source" Value="playcircle.png"/>
                                </DataTrigger>
                            </Image.Triggers>


                        </Image>
                    </Border>

                    <Border>
                        <ImageButton Command="{Binding PlayNextSongCommand}"
                            ToolTipProperties.Text="Play Next" Source="skipnext.png">
                        </ImageButton>
                    </Border>

                    <Border>

                        <VerticalStackLayout>

                            <ImageButton Command="{Binding ToggleShuffleStateCommand}"  Source="shuffle.png"
                                         WidthRequest="15">
                                <ImageButton.Triggers>
                                    <DataTrigger TargetType="ImageButton" Binding="{Binding IsShuffleOn}" Value="True">
                                        <Setter Property="BackgroundColor" Value="#B197FC"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="ImageButton" Binding="{Binding IsShuffleOn}" Value="False">
                                        <Setter Property="BackgroundColor" Value="Transparent"/>
                                    </DataTrigger>
                                </ImageButton.Triggers>

                                <ImageButton.CommandParameter>
                                    <x:Boolean>True</x:Boolean>
                                </ImageButton.CommandParameter>
                            </ImageButton>

                        </VerticalStackLayout>
                    </Border>
                </HorizontalStackLayout>

                <Grid ColumnDefinitions="Auto,*,Auto" Padding="10,0" >

                    <Label Grid.Column="0" VerticalOptions="Center"
                Text="{Binding CurrentPositionInSeconds, Converter={StaticResource DurationConverter}}"
                   />
                    <Slider Grid.Column="1" 
                Value="{Binding CurrentPositionPercentage}" 
    MinimumTrackColor="DarkSlateBlue" x:Name="slid" VerticalOptions="Start"
    DragCompleted="Slider_DragCompleted" Margin="15,0" >
                    </Slider>

                    <Label Grid.Column="2" VerticalOptions="Center"
                Text="{Binding TemporarilyPickedSong.DurationInSeconds, Converter={StaticResource DurationConverter}}"
                Opacity="0.6"/>

                </Grid>
            </VerticalStackLayout>

            <syncf:SfEffectsView Grid.Column="2" BackgroundColor="Transparent"
                                 Loaded="SfEffectsView_Loaded"
                                 Unloaded="SfEffectsView_Unloaded">
                <VerticalStackLayout VerticalOptions="Center">
                    <Label Text="{Binding VolumeSliderValue,StringFormat='Volume {0}', Converter={StaticResource VolConverter}}" HorizontalOptions="Center"/>
     
                    <Slider Value="{Binding VolumeSliderValue}" VerticalOptions="End"
                            MinimumTrackColor="DarkSlateBlue"/>
                </VerticalStackLayout>
            </syncf:SfEffectsView>
        </Grid>
        
    </Grid>
</ContentView>