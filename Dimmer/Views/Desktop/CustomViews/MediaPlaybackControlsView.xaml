<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.CustomViews.MediaPlaybackControlsView"
             xmlns:m="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"                          
             xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
             xmlns:cw="clr-namespace:Dimmer_MAUI.Views.CustomViews"
            xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
             xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:DataType="vm:HomePageVM" BackgroundColor="#111111" Opacity="0.5"
             x:Name="myPage">
    <ContentView.GestureRecognizers>
        <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered"
                                  PointerExited="PointerGestureRecognizer_PointerExited"/>
    </ContentView.GestureRecognizers>
    <ContentView.Resources>
        <ResourceDictionary>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>

            <Style TargetType="Border">
                <Setter Property="StrokeShape" Value="RoundRectangle 20"/>
                <Setter Property="HeightRequest" Value="50"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                    <Setter Property="Stroke" Value="Transparent"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="DarkSlateBlue"/>
                                    <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ContentView.Resources>

    <VerticalStackLayout  HeightRequest="130" BackgroundColor="Transparent">
        <!--<VerticalStackLayout.Effects>
            <uranium:BlurEffect AccentOpacity="0.1" AccentColor="DarkSlateBlue"/>
        </VerticalStackLayout.Effects>-->
        <Slider Value="{Binding CurrentPositionPercentage, Mode=TwoWay}"
                MinimumTrackColor="DarkSlateBlue" x:Name="slid"
                DragCompleted="Slider_DragCompleted" Margin="3,0">

        </Slider>

        <Grid ColumnSpacing="25" BackgroundColor="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="230"/>
            </Grid.ColumnDefinitions>
            <HorizontalStackLayout Grid.Column="0" Spacing="5" BackgroundColor="Transparent">
                <HorizontalStackLayout.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding NavToNowPlayingPageCommand}" CommandParameter="{Binding TemporarilyPickedSong}"/>
                </HorizontalStackLayout.GestureRecognizers>
                <toolkit:AvatarView ImageSource="{Binding TemporarilyPickedSong.CoverImagePath}" 
                                WidthRequest="95" HeightRequest="95" Margin="2,0,0,0"
                                    BorderWidth="0" CornerRadius="8">
                </toolkit:AvatarView>

                <VerticalStackLayout VerticalOptions="Center" >
                    <Label Text="{Binding TemporarilyPickedSong.Title}" HorizontalOptions="Start"
                           LineBreakMode="HeadTruncation" FontSize="18"/>
                    <Label Text="{Binding TemporarilyPickedSong.ArtistName}" MaximumWidthRequest="150"
                           LineBreakMode="TailTruncation"
                           Opacity="0.6" HorizontalOptions="Start"/>
                    <Label Text="{Binding TemporarilyPickedSong.AlbumName}" HorizontalOptions="Start"
                       LineBreakMode="HeadTruncation"/>
                </VerticalStackLayout>
                <!--<ImageButton HeightRequest="40" BackgroundColor="Transparent"
             Command="{Binding AddSongToFavoritesCommand}" CommandParameter="{Binding TemporarilyPickedSong}">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialRound" Glyph="{Binding TemporarilyPickedSong.IsFavorite, Converter={StaticResource BoolToImage}}"/>
                    </ImageButton.Source>
                </ImageButton>-->
            </HorizontalStackLayout>

            <HorizontalStackLayout Spacing="15" Grid.Column="1" BackgroundColor="Transparent"
                               HorizontalOptions="Center">
                <Border>
                    <ImageButton Command="{Binding ToggleRepeatModeCommand}">
                        <ImageButton.CommandParameter>
                            <x:Boolean>True</x:Boolean>
                        </ImageButton.CommandParameter>
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{Binding RepeatModeImage}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Border>

                <Border >
                    <ImageButton Command="{Binding PlayPreviousSongCommand}"
                    ToolTipProperties.Text="Play Previous">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Skip_previous}"/>
                        </ImageButton.Source>
                    </ImageButton>

                </Border>

                <cw:PlayPauseView x:Name="PlayPauseV" />

                <Border>
                    <ImageButton Command="{Binding PlayNextSongCommand}">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Skip_next}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Border>

                <Border>
                    <ImageButton Command="{Binding ToggleShuffleStateCommand}">
                        <ImageButton.CommandParameter>
                            <x:Boolean>True</x:Boolean>
                        </ImageButton.CommandParameter>
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{Binding ShuffleOnOffImage}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Border>
            </HorizontalStackLayout>

            <VerticalStackLayout Grid.Column="2" Margin="10,0" BackgroundColor="Transparent">
                <HorizontalStackLayout HorizontalOptions="End" Spacing="2" BackgroundColor="Transparent">
                    <Label Text="{Binding CurrentPositionInSeconds, Converter={StaticResource DurationConverter}}"/>
                    <Label Text="{Binding TemporarilyPickedSong.DurationInSeconds, StringFormat='/ {0}', Converter={StaticResource DurationConverter}}"
                       Opacity="0.6"/>
                </HorizontalStackLayout>

                <Border HorizontalOptions="End" BackgroundColor="Transparent">
                    <ImageButton Command="{Binding ShowSleepTimerPopupCommand}"
                                 HorizontalOptions="End">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Timer}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Border>
            </VerticalStackLayout>
        </Grid>
    </VerticalStackLayout>
</ContentView>