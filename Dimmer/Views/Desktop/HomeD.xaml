<?xml version="1.0" encoding="utf-8" ?>
<uranium:UraniumContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Desktop.HomeD"             
             xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
             xmlns:m="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer.Utilities"             
             xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
             xmlns:models="clr-namespace:Dimmer.Models;assembly=Dimmer.Models"
             xmlns:xc="clr-namespace:Xceed.Maui.Toolkit;assembly=Xceed.Maui.Toolkit"
             xmlns:cm="https://github.com/jerry08/Plugin.ContextMenuContainer"
             xmlns:cw="clr-namespace:Dimmer_MAUI.Views.CustomViews"
             x:DataType="vm:HomePageVM"             
             x:Name="page">

    <uranium:UraniumContentPage.Resources>
        <ResourceDictionary>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BoolToImageConverter x:Key="BoolToImage"/>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>

            <MenuFlyout x:Key="SelectedSongContextMenu">
                <MenuFlyoutItem Text="View File Explorer" 
                                Command="{Binding BindingContext.OpenSongFolderCommand, Source={x:Reference page}}" CommandParameter="{Binding .}"/>
                <MenuFlyoutItem Text="Delete File" 
                                Command="{Binding BindingContext.DeleteFileCommand, Source={x:Reference page}}" CommandParameter="{Binding .}"/>
            </MenuFlyout>
            <Style TargetType="ImageButton">
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="BorderColor" Value="Transparent"/>
                <Setter Property="WidthRequest" Value="50"/>
                <Setter Property="HeightRequest" Value="45"/>
            </Style>
        </ResourceDictionary>
    </uranium:UraniumContentPage.Resources>

    <uranium:UraniumContentPage.ToolbarItems>
        <ToolbarItem Text="Select Songs" Command="{Binding SelectSongFromFolderCommand}"/>
    </uranium:UraniumContentPage.ToolbarItems>

    <toolkit:DockLayout>

        <VerticalStackLayout BackgroundColor="#111111" toolkit:DockLayout.DockPosition="Bottom" 
                             HeightRequest="135" >
            <Slider Value="{Binding CurrentPositionPercentage, Mode=TwoWay}" MinimumTrackColor="DarkSlateBlue"
                    DragCompletedCommand="{Binding SeekSongPositionCommand}" Margin="3,0">
            </Slider>
            <Grid ColumnSpacing="25">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="230"/>
                </Grid.ColumnDefinitions>
                <HorizontalStackLayout Grid.Column="0" Spacing="5" >
                    <HorizontalStackLayout.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding NavToNowPlayingPageCommand}"/>
                    </HorizontalStackLayout.GestureRecognizers>
                    <toolkit:AvatarView ImageSource="{Binding TemporarilyPickedSong.CoverImagePath}" Margin="10,0,5,5" 
                                        MinimumWidthRequest="80" MinimumHeightRequest="70" HeightRequest="70"
                                        BorderWidth="0" CornerRadius="8"> 
                    </toolkit:AvatarView>
                    
                    <VerticalStackLayout VerticalOptions="Center" >
                        <Label Text="{Binding TemporarilyPickedSong.ArtistName}" Opacity="0.6"/>
                        <Label Text="{Binding TemporarilyPickedSong.Title}" LineBreakMode="HeadTruncation"/>
                        <Label Text="{Binding TemporarilyPickedSong.PlayCount}" />
                        <Label Text="{Binding TemporarilyPickedSong.AlbumName}" MaximumWidthRequest="200"
                               LineBreakMode="HeadTruncation"/>
                    </VerticalStackLayout>

                </HorizontalStackLayout>

                <HorizontalStackLayout Spacing="15" Grid.Column="1" Margin="10,0" 
                                       HorizontalOptions="Center">
                    <ImageButton HeightRequest="30" Command="{Binding ToggleRepeatModeCommand}">
                        <ImageButton.CommandParameter>
                            <x:Boolean>True</x:Boolean>
                        </ImageButton.CommandParameter>
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{Binding RepeatModeImage}"/>
                        </ImageButton.Source>
                    </ImageButton>

                    <ImageButton
                        Command="{Binding PlayPreviousSongCommand}"
                        ToolTipProperties.Text="Play Previous">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Skip_previous}"/>
                        </ImageButton.Source>
                    </ImageButton>

                    <cw:PlayPauseView x:Name="PlayPauseV" />

                    <ImageButton Command="{Binding PlayNextSongCommand}">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Skip_next}"/>
                        </ImageButton.Source>
                    </ImageButton>
                    <ImageButton Command="{Binding ToggleShuffleStateCommand}">
                        <ImageButton.CommandParameter>
                            <x:Boolean>True</x:Boolean>
                        </ImageButton.CommandParameter>
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{Binding ShuffleOnOffImage}"/>
                        </ImageButton.Source>
                    </ImageButton>

                </HorizontalStackLayout>

                <VerticalStackLayout Grid.Column="2" Margin="5,0">
                    <HorizontalStackLayout HorizontalOptions="Center" Spacing="2">
                        <Label Text="{Binding CurrentPositionInSeconds, Converter={StaticResource DurationConverter}}"/>
                        <Label Text="{Binding TemporarilyPickedSong.DurationInSeconds, StringFormat='/ {0}', Converter={StaticResource DurationConverter}}"
                               Opacity="0.6"/>
                    </HorizontalStackLayout>

                    <HorizontalStackLayout>
                        <ImageButton BackgroundColor="Transparent" Command="{Binding DecreaseVolumeCommand}">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Volume_down}"/>
                            </ImageButton.Source>
                        </ImageButton>

                        <Slider Value="{Binding VolumeSliderValue}" x:Name="VolumeSlider" MinimumTrackColor="DarkSlateBlue"  
                            DragCompletedCommand="{Binding ChangeVolumeCommand}" WidthRequest="120" Margin="0,5"
                                Minimum="0" Maximum="1"/>

                        <ImageButton BackgroundColor="Transparent" Command="{Binding IncreaseVolumeCommand}">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Volume_up}"/>
                            </ImageButton.Source>
                        </ImageButton>
                    </HorizontalStackLayout>

                    <Label Text="{Binding TotalSongsSize}" HorizontalOptions="Center" />
                    <Label Text="{Binding TotalSongsDuration}" HorizontalOptions="Center"/>
                </VerticalStackLayout>
            </Grid>
        </VerticalStackLayout>

        <SearchBar HorizontalOptions="End" WidthRequest="200" toolkit:DockLayout.DockPosition="Top"
                   Placeholder="Search Your Music..." TextChanged="SearchSongSB_TextChanged"
                   x:Name="SearchSongSB"/>
        <VerticalStackLayout toolkit:DockLayout.DockPosition="Top" >

            <FlexLayout JustifyContent="SpaceBetween" toolkit:DockLayout.DockPosition="Top" Margin="10,0,0,0">
                <Label Text="{Binding TotalNumberOfSongs, StringFormat='{0} Songs'}" FontSize="18"
            FontAttributes="Bold" TextColor="DarkSlateBlue"/>

                <HorizontalStackLayout Spacing="10">
                    <material:CheckBox Text="Show Preferred folders" IsChecked="True" x:Name="TogglePrefFoldersChbx"/>
                    <ImageButton Clicked="Button_Clicked">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Visibility }"/>
                        </ImageButton.Source>
                    </ImageButton>
                </HorizontalStackLayout>
                
            </FlexLayout>
        </VerticalStackLayout>
        <VerticalStackLayout toolkit:DockLayout.DockPosition="Top" Margin="10,0"
                             IsVisible="{Binding IsChecked,Source={x:Reference TogglePrefFoldersChbx}}">
           
                <CollectionView ItemsSource="{Binding FolderPaths}" EmptyView="No Folders Yet">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="x:String">
                            <Label Text="{Binding .}"/>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                <Button Text="Scan All" Command="{Binding LoadSongsFromFoldersCommand}"/>
            <ActivityIndicator IsRunning="{Binding IsLoadingSongs}" IsVisible="{Binding IsLoadingSongs}" toolkit:DockLayout.DockPosition="Top"/>
            <Label Text="{Binding LoadingSongsProgress, StringFormat='{0}%'}"/>
        </VerticalStackLayout>
        
            
        
        <Grid ColumnSpacing="25" Padding="10" toolkit:DockLayout.DockPosition="Top" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <ResourceDictionary>
                    <Style TargetType="Label">
                        <Setter Property="TextColor" Value="#383838"/>
                        <Setter Property="FontAttributes" Value="Bold"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="HorizontalOptions" Value="Center"/>
                    </Style>
                </ResourceDictionary>
            </Grid.Resources>
            <Label Text="Song Title" Grid.Column="0"/>
            <Label Text="Artist" Grid.Column="1" />
            <Label Text="Has Lyrics?" Grid.Column="2" 
                            HeightRequest="30" ToolTipProperties.Text="Has Lyrics?"/>
            <Label Text="Love" Grid.Column="3" />
            <Label Text="Duration" Grid.Column="4" />
            <Label Text="Bitrate" Grid.Column="5" />
            <Label Text="File Format" Grid.Column="6"/>
            <Label Text="Is Playing" Grid.Column="7" />
        </Grid>
        <BoxView HeightRequest="0.5" BackgroundColor="#383838" toolkit:DockLayout.DockPosition="Top"/>
        <CollectionView ItemsSource="{Binding DisplayedSongs}" SelectionMode="Single" SelectedItem="{Binding PickedSong, Mode=TwoWay}" 
                        toolkit:DockLayout.DockPosition="Top"  VerticalScrollBarVisibility="Default"
                        x:Name="SongsColView" SelectionChanged="SongsColView_SelectionChanged"
                        Loaded="SongsColView_Loaded"
                        >
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="models:SongsModelView">
                    <Grid ColumnSpacing="25" Padding="8">
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding BindingContext.PlaySongCommand, Source={x:Reference page}}"
                                                  NumberOfTapsRequired="2"
                                                  CommandParameter="{Binding .}"/>
                        </Grid.GestureRecognizers>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="250" />
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor" Value="DarkSlateBlue"/>
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <BoxView HeightRequest="1" BackgroundColor="#212121" 
                                 Grid.ColumnSpan="8" Grid.Row="1"/>

                        <HorizontalStackLayout Grid.Column="0" Spacing="10">
                            <toolkit:AvatarView WidthRequest="55" HeightRequest="55" ImageSource="{Binding CoverImagePath}" 
                                                BorderWidth="0" CornerRadius="5"/>
                            <VerticalStackLayout>
                                <Label Text="{Binding Title}" HorizontalOptions="Start"/>
                                <Image IsVisible="{Binding IsPlaying}" HorizontalOptions="Start">
                                    <Image.Source>
                                        <FontImageSource FontFamily="MaterialRound" Glyph="{Static m:MaterialRound.Equalizer}" Color="DarkSlateBlue"/>
                                    </Image.Source>
                                </Image>
                            </VerticalStackLayout>
                        </HorizontalStackLayout>
                        
                        <Label Text="{Binding ArtistName}" Grid.Column="1" HorizontalTextAlignment="Center"
                               LineBreakMode="WordWrap"/>

                        <Image WidthRequest="30" Grid.Column="2" IsVisible="{Binding HasLyrics}">
                            <Image.Source>
                                <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Lyrics}"/>
                            </Image.Source>
                        </Image>
                        <ImageButton Command="{Binding Source={x:Reference page},Path=BindingContext.AddSongToFavoritesCommand}"
                                     VerticalOptions="Start" CommandParameter="{Binding .}" BackgroundColor="Transparent"
                                     Grid.Column="3">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="MaterialRound" Glyph="{Binding IsFavorite, Converter={StaticResource BoolToImage}}"/>
                            </ImageButton.Source>
                        </ImageButton>
                        <Label Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" 
                               Grid.Column="4" HorizontalOptions="Center"
                               HorizontalTextAlignment="Center"/>
                        <Label Text="{Binding BitRate, StringFormat='{0} kbps'}" Grid.Column="5" HorizontalTextAlignment="Center"/>
                        <Label Text="{Binding FileFormat}" Grid.Column="6" HorizontalTextAlignment="Center"/>
                        <Label Text="{Binding IsPlaying}" Grid.Column="7" HorizontalTextAlignment="Center"/>

                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

    </toolkit:DockLayout>

                             <!--Putting an image here will crash app
    <Image Source="{Binding CoverImagePath}" Grid.Column="2" WidthRequest="45"/> -->


    <!--<cm:ContextMenuContainer BackgroundColor="Red">
    <cm:ContextMenuContainer.MenuItems >
        <cm:ContextMenuItem Text="Action 1" />
        <cm:ContextMenuItem Text="Action 2"/>
    </cm:ContextMenuContainer.MenuItems>

    <cm:ContextMenuContainer.Content >
        <Label Text="Yo!" />
    </cm:ContextMenuContainer.Content>
</cm:ContextMenuContainer>-->

    <!--
        <mdc:ExtendedFAB IconData="{Static icon:Material.Add}" Text="add">
            <mdc:ExtendedFAB.ContextMenu>
                <mdc:ContextMenu>
                    <mdc:MenuItem Text="Action 1" />
                    <mdc:MenuItem Text="Action 2"/>
                </mdc:ContextMenu>
            </mdc:ExtendedFAB.ContextMenu>
        </mdc:ExtendedFAB>
        <mdc:FAB IconData="{Static icon:Material.Add}"/>
        <mdc:Chip IconData="{Static icon:Material.Filter}" Text="filter"/>
        <mdc:ComboBox Style="{DynamicResource FilledComboBoxStyle}" FontColor="Red" LabelFontColor="Blue">
            <mdc:MenuItem Text="item 1" />
            <mdc:MenuItem Text="item 2" />
        </mdc:ComboBox>
        <mdc:ComboBox Style="{DynamicResource OutlinedComboBoxStyle}">
            <mdc:MenuItem Text="item 1" />
            <mdc:MenuItem Text="item 2" />
        </mdc:ComboBox>

        <mdc:TextField/>
-->
</uranium:UraniumContentPage>