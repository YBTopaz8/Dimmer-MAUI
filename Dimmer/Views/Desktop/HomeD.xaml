<?xml version="1.0" encoding="utf-8" ?>
<uranium:UraniumContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Desktop.HomeD"             
             xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
             xmlns:m="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:CustomFonts="clr-namespace:Dimmer_MAUI.Utilities.OtherUtils.Fonts"             
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:ratingsView="clr-namespace:Dimmer_MAUI.Utilities.OtherUtils.CustomControl.RatingsView.Views"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters"
             xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
             xmlns:models="clr-namespace:Dimmer_MAUI.Utilities.Services.Models"
             xmlns:cm="https://github.com/jerry08/Plugin.ContextMenuContainer"
             xmlns:cw="clr-namespace:Dimmer_MAUI.Views.CustomViews"
             xmlns:SyncCtrls="http://schemas.syncfusion.com/maui/toolkit"                        
            xmlns:shimmer="clr-namespace:Syncfusion.Maui.Toolkit.Shimmer;assembly=Syncfusion.Maui.Toolkit"
             x:DataType="vm:HomePageVM"             
             x:Name="myPage"
            BackgroundColor="#1F1F1F">

    <uranium:UraniumContentPage.Resources>
        <ResourceDictionary>
            
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BoolToImageConverter x:Key="BoolToImage"/>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <Style TargetType="Label">
                <Setter Property="HorizontalOptions" Value="Start"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
                <Setter Property="LineBreakMode" Value="TailTruncation"/>
            </Style>

            
        </ResourceDictionary>
    </uranium:UraniumContentPage.Resources>


    <toolkit:DockLayout BackgroundColor="#1F1F1F" x:Name="mainDock">
        <toolkit:DockLayout.GestureRecognizers>
            <DropGestureRecognizer AllowDrop="True" x:Name="mainDockDropGest" DragOver="DropGestureRecognizer_DragOver"
                           DragLeave="DropGestureRecognizer_DragLeave"
                           Drop="DropGestureRecognizer_Drop"/>
        </toolkit:DockLayout.GestureRecognizers>

        <FlyoutBase.ContextFlyout>
            <MenuFlyout>
                <MenuFlyoutItem Text="Find Song"
                                Clicked="MenuFlyoutItem_Clicked">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Ctrl" 
                         Key="F"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
            </MenuFlyout>
        </FlyoutBase.ContextFlyout>

        <cw:MediaPlaybackControlsView toolkit:DockLayout.DockPosition="Bottom"
                                      x:Name="MediaPlayBackCW"/>
        <VerticalStackLayout toolkit:DockLayout.DockPosition="Top">
            <HorizontalStackLayout HorizontalOptions="End"  Spacing="10" >
                <material:CheckBox Text="Toggle Stick To Top" LabelPosition="Before" x:Name="stickToTopChkbx"
                   CheckChangedCommand="{Binding ToggleStickToTopCommand}"
                   CommandParameter="{Binding IsChecked, Source={x:Reference stickToTopChkbx}}"/>


                <Entry Text="{Binding SearchText}" x:Name="SearchSongSB" Focused="SearchSongSB_Focused" 
                           WidthRequest="200" Placeholder="Type To Search..." ClearButtonVisibility="WhileEditing">
                    <Entry.GestureRecognizers>
                        <PointerGestureRecognizer x:Name="SearchBarPointer" PointerExited="SearchBarPointer_PointerExited"/>
                    </Entry.GestureRecognizers>

                </Entry>


                <Button x:Name="search" Text="Search" Clicked="search_Clicked"/>
            </HorizontalStackLayout>

            <HorizontalStackLayout HorizontalOptions="Center" Spacing="5"  x:Name="SearchFiltersHSL"
                                   IsVisible="False" HeightRequest="30" >
                <SyncCtrls:SfChipGroup ChipType="Filter" ItemsSource="{Binding SearchFilters}"
                                       SelectionChanged="SfChipGroup_SelectionChanged" x:Name="SearchFilters"
                                       />
                <ratingsView:RatingControl x:Name="ratingFilter" 
                                           Value="{Binding Achievement}" IsVisible="False"/>
                <ImageButton Clicked="CloseFiltersImgBtn_Clicked" >
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Close}" Size="20"/>
                    </ImageButton.Source>
                </ImageButton>
            </HorizontalStackLayout>
            
        </VerticalStackLayout>
        <toolkit:DockLayout x:Name="MainBody" >
            <!--<SyncCtrls:SfShimmer x:Name="searchShimmer"
                                 Margin="2" WaveColor="DarkSlateBlue"
                                 Fill="#3B3842" WaveDirection="LeftToRight"
                                 BackgroundColor="Transparent"
                                 Type="Shopping" AnimationDuration="1000"
                                 RepeatCount="3"/>-->
            <VerticalStackLayout toolkit:DockLayout.DockPosition="Top" >

                <FlexLayout JustifyContent="SpaceBetween" toolkit:DockLayout.DockPosition="Top" 
                        Margin="10,0,10,0" x:Name="NormalMiniUtilBar">
                    <Label Text="{Binding DisplayedSongs.Count, StringFormat='{0} Songs'}" FontSize="18"
            FontAttributes="Bold" TextColor="DarkSlateBlue" VerticalTextAlignment="End"/>

                    <HorizontalStackLayout Spacing="10">
                        <material:CheckBox Text="Show Preferred folders to Scan Songs" IsChecked="False" x:Name="TogglePrefFoldersChbx"/>

                        <ImageButton Clicked="ScrollToSong_Clicked" ToolTipProperties.Text="Scroll To Currently Playing Song">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Visibility }"/>
                            </ImageButton.Source>
                        </ImageButton>
                        <ImageButton Command="{Binding OpenSortingPopupCommand}" HeightRequest="20"
                             Grid.Column="1">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Sort}"/>
                            </ImageButton.Source>
                        </ImageButton>

                        <!--<Button Command="{Binding DummyFuncCommand}" Text="Dummy Func!"/>-->

                        <material:CheckBox Text="Toggle Discord RPC" CheckChangedCommand="{Binding ToggleDiscordRPCCommand}" IsChecked="{Binding IsDRPCEnabled}"
                                       x:Name="ToggleDiscordRPC" CommandParameter="{Binding IsChecked,Source={x:Reference ToggleDiscordRPC}}"/>
                    </HorizontalStackLayout>

                </FlexLayout>

                <FlexLayout JustifyContent="SpaceBetween" toolkit:DockLayout.DockPosition="Top" 
                        Margin="10,0,10,0" x:Name="MultiSelectUtilBar" IsVisible="False">
                    <HorizontalStackLayout>
                        <ImageButton WidthRequest="30" Clicked="CancelMultiSelect_Clicked">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="MaterialRound" Size="30" Glyph="{x:Static m:MaterialRound.Arrow_back}"/>
                            </ImageButton.Source>
                        </ImageButton>
                        <Label Text="{Binding MultiSelectText}" FontSize="28" VerticalTextAlignment="End"
                        FontAttributes="Bold" TextColor="DarkSlateBlue"/>
                    </HorizontalStackLayout>


                    <HorizontalStackLayout Spacing="10">

                        <ImageButton Command="{Binding MultiSelectUtilClickedCommand}" IsVisible="{Binding IsMultiSelectOn}">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Delete_forever}"/>
                            </ImageButton.Source>
                            <ImageButton.CommandParameter>
                                <x:Int32>0</x:Int32>
                            </ImageButton.CommandParameter>
                        </ImageButton>
                    </HorizontalStackLayout>

                </FlexLayout>
            </VerticalStackLayout>
            <VerticalStackLayout toolkit:DockLayout.DockPosition="Top" Margin="10,0" Spacing="5"
                             IsVisible="{Binding IsChecked,Source={x:Reference TogglePrefFoldersChbx}}">

                <ListView ItemsSource="{Binding FolderPaths}"/>


                <Button Text="Click here to Select folder to scan (You can do so multiple times for multiple folders)" Command="{Binding SelectSongFromFolderCommand}"/>
                <Button Text="Scan All" Command="{Binding LoadSongsFromFoldersCommand}"/>
                <ActivityIndicator IsRunning="{Binding IsLoadingSongs}" IsVisible="{Binding IsLoadingSongs}" toolkit:DockLayout.DockPosition="Top"/>

            </VerticalStackLayout>

            <Grid Padding="10"

              toolkit:DockLayout.DockPosition="Top"
              Margin="5,0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <ResourceDictionary>
                        <Style TargetType="Label">
                            <Setter Property="TextColor" Value="#575757"/>
                            <Setter Property="FontAttributes" Value="Bold"/>
                            <Setter Property="FontSize" Value="16"/>
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>
                <Label Text="Song Title" Grid.Column="0" />
                <Label Text="Artist" Grid.Column="1" />
                <Label Text="Rating"  Grid.Column="2" HorizontalOptions="Center" Opacity="0.8"/>
                <Label Text=""  Grid.Column="3" />
                <Label Text="Album" Grid.Column="4"/>
                <Label Text="Genre"   Grid.Column="5" />
                <Label Text="Duration"  Grid.Column="6" />
                <Label Text="Bitrate" Grid.Column="7"  />
                <Label Text="Format" Grid.Column="8"/>
                <Label Text="Play Count" Grid.Column="9"/>
            </Grid>
            <!--<BoxView HeightRequest="0.5" BackgroundColor="#383838" toolkit:DockLayout.DockPosition="Top"/>-->
            <CollectionView ItemsSource="{Binding DisplayedSongs}" toolkit:DockLayout.DockPosition="Top"  
                        VerticalScrollBarVisibility="Default" IsVisible="True"
                        x:Name="SongsColView" SelectionChanged="SongsColView_SelectionChanged" 
                        Loaded="SongsColView_Loaded"
                        Margin="5,0" EmptyView="Nothing ...">
                
                    <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical"/>
                </CollectionView.ItemsLayout>
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="models:SongsModelView">
                        <Border Stroke="Transparent" Padding="10,0">
                            <Border.Triggers>
                                <DataTrigger TargetType="Border" Binding="{Binding IsCurrentPlayingHighlight}" Value="True">
                                    <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                    <Setter Property="StrokeThickness" Value="0.8"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Border" Binding="{Binding IsCurrentPlayingHighlight}" Value="False">
                                    <Setter Property="Stroke" Value="Transparent"/>
                                    <Setter Property="StrokeThickness" Value="1"/>
                                </DataTrigger>
                            </Border.Triggers>

                            <Border.GestureRecognizers>
                                <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered" 
                                                      PointerExited="PointerGestureRecognizer_PointerExited"
                                                      PointerPressed="PointerGestureRecognizer_PointerPressed"
                                                      PointerReleased="PointerGestureRecognizer_PointerReleased"/>
                                <TapGestureRecognizer NumberOfTapsRequired="2" Tapped="DoubleTapToPlay_Tapped"/>
                            </Border.GestureRecognizers>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Selected" />
                                    <!--<VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="Red"/>
                                    <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                </VisualState.Setters>-->

                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="DarkSlateBlue"/>
                                            <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <FlyoutBase.ContextFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Text="Toggle MultiSelection" Clicked="ToggleMultiSelect_Clicked">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Select_all}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                    </MenuFlyoutItem>

                                    <MenuFlyoutItem Text="Set Play Repeat Count" Command="{Binding BindingContext.OpenRepeatSetterPopupCommand, Source={x:Reference myPage}}">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Play_circle_outline}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem Text="View File Explorer" Command="{Binding BindingContext.OpenSongFolderCommand, Source={x:Reference myPage}}">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Folder_open}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                        <MenuFlyoutItem.KeyboardAccelerators>
                                            <KeyboardAccelerator Modifiers="Ctrl,Shift" Key="E"/>
                                        </MenuFlyoutItem.KeyboardAccelerators>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem Text="Remove from Device" IsDestructive="True" 
                                        Command="{Binding BindingContext.DeleteFileCommand, Source={x:Reference myPage}}"  
                                        CommandParameter="{Binding .}">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Delete_forever }"/>
                                        </MenuFlyoutItem.IconImageSource>

                                        <MenuFlyoutItem.KeyboardAccelerators>
                                            <KeyboardAccelerator Modifiers="Ctrl,Shift" Key="Delete"/>
                                        </MenuFlyoutItem.KeyboardAccelerators>
                                    </MenuFlyoutItem>

                                    <MenuFlyoutSeparator />

                                    <MenuFlyoutItem Text="Edit" CommandParameter="{Binding .}"
                                        Command="{Binding BindingContext.OpenEditSongPopupCommand,Source={x:Reference myPage}}">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Edit}"/>
                                        </MenuFlyoutItem.IconImageSource>

                                        <MenuFlyoutItem.KeyboardAccelerators>
                                            <KeyboardAccelerator Modifiers="Ctrl" Key="E"/>
                                        </MenuFlyoutItem.KeyboardAccelerators>
                                    </MenuFlyoutItem>

                                    <MenuFlyoutItem Text="Information" Command="{Binding BindingContext.OpenViewSongDetailsPopupCommand
                            ,Source={x:Reference myPage}}">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Info}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                        <MenuFlyoutItem.KeyboardAccelerators>
                                            <KeyboardAccelerator Modifiers="Ctrl" Key="I"/>
                                        </MenuFlyoutItem.KeyboardAccelerators>
                                    </MenuFlyoutItem>

                                    <MenuFlyoutSeparator/>
                                    <MenuFlyoutItem Text="Go To Artist" Clicked="MenuFlyoutItem_Clicked_1"
                                        >

                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Person}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                    </MenuFlyoutItem>

                                    <MenuFlyoutSeparator/>

                                    <MenuFlyoutSubItem Text="Search Song On...">
                                        <MenuFlyoutSubItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Search}"/>
                                        </MenuFlyoutSubItem.IconImageSource>

                                        <MenuFlyoutItem Text="Google" Command="{Binding BindingContext.CntxtMenuSearchCommand,Source={x:Reference myPage}}"
                                                    IconImageSource="google.png" >
                                            <MenuFlyoutItem.CommandParameter>
                                                <x:Int32>0</x:Int32>
                                            </MenuFlyoutItem.CommandParameter>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem Text="YouTube" Command="{Binding BindingContext.CntxtMenuSearchCommand,Source={x:Reference myPage}}"
                                                    >
                                            <MenuFlyoutItem.IconImageSource>
                                                <FileImageSource File="youtube.png"/>
                                            </MenuFlyoutItem.IconImageSource>
                                            <MenuFlyoutItem.CommandParameter>
                                                <x:Int32>1</x:Int32>
                                            </MenuFlyoutItem.CommandParameter>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem Text="Spotify" Command="{Binding BindingContext.CntxtMenuSearchCommand,Source={x:Reference myPage}}"
                                                    >
                                            <MenuFlyoutItem.IconImageSource>
                                                <FileImageSource File="spotify.png"/>
                                            </MenuFlyoutItem.IconImageSource>
                                            <MenuFlyoutItem.CommandParameter>
                                                <x:Int32>2</x:Int32>
                                            </MenuFlyoutItem.CommandParameter>
                                        </MenuFlyoutItem>
                                    </MenuFlyoutSubItem>

                                    <MenuFlyoutSeparator/>

                                    <MenuFlyoutItem Text="Add To Playlist" 
                                                Command="{Binding BindingContext.AddToPlaylistCommand,Source={x:Reference myPage}}">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Playlist_add}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                        <MenuFlyoutItem.KeyboardAccelerators>
                                            <KeyboardAccelerator Modifiers="Ctrl" Key="P"/>
                                        </MenuFlyoutItem.KeyboardAccelerators>
                                    </MenuFlyoutItem>

                                </MenuFlyout>
                            </FlyoutBase.ContextFlyout>

                            <Grid Padding="10" ColumnSpacing="10">

                                <Grid.Resources>
                                    <ResourceDictionary>
                                        <Style TargetType="Label">

                                            <Setter Property="VerticalOptions" Value="Center"/>
                                        </Style>
                                    </ResourceDictionary>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="150" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <VerticalStackLayout Grid.Column="0" VerticalOptions="Center"
                                            >
                                    <HorizontalStackLayout Spacing="10" >

                                        <Label Text="{Binding Title}" LineBreakMode="HeadTruncation" 
                        ToolTipProperties.Text="{Binding Title}" Grid.Column="1"/>
                                        <Image WidthRequest="13" VerticalOptions="Center"
                        IsVisible="{Binding HasLyrics}">
                                            <Image.Source>
                                                <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Lyrics}"/>
                                            </Image.Source>
                                        </Image>


                                    </HorizontalStackLayout>

                                </VerticalStackLayout>

                                <Label Text="{Binding ArtistName}" Grid.Column="1" 
                ToolTipProperties.Text="{Binding ArtistName}"/>

                                <ratingsView:RatingControl Value="{Binding Rating}" HorizontalOptions="Start"
                                                       Grid.Column="2" Shape="Star" Fill="Green"
                           Command="{Binding BindingContext.RateSongCommand,Source={x:Reference myPage}}"
                                                               ToolTipProperties.Text="RateSong">
                                    <ratingsView:RatingControl.GestureRecognizers>
                                        <PointerGestureRecognizer x:Name="ratingViewD" PointerEntered="ratingViewD_PointerEntered_1"
                          PointerExited="ratingViewD_PointerExited_1"/>

                                    </ratingsView:RatingControl.GestureRecognizers>
                                </ratingsView:RatingControl>

                                <uranium:StatefulContentView Grid.Column="3" x:Name="FavImagStatView"
                                                         Hovered="FavImagStatView_HoveredAndExited"
                                                         HoverExited="FavImagStatView_HoveredAndExited">
                                    <ImageButton 
                                             Command="{Binding Source={x:Reference myPage},Path=BindingContext.AddSongToFavoritesCommand}"
                                             VerticalOptions="End" CommandParameter="{Binding .}" >
                                        <ImageButton.Source>
                                            <FontImageSource Size="25" FontFamily="MaterialRound" Glyph="{Binding IsFavorite, Converter={StaticResource BoolToImage}}"/>
                                        </ImageButton.Source>
                                    </ImageButton>
                                </uranium:StatefulContentView>

                                <Label Text="{Binding AlbumName}" Grid.Column="4"
                                       
                       ToolTipProperties.Text="{Binding AlbumName}"/>

                                <Label Text="{Binding GenreName}" Grid.Column="5" 
                       ToolTipProperties.Text="{Binding GenreName}"/>

                                <Label Grid.Column="6"  
                       Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" 
                       ToolTipProperties.Text="{Binding DurationInSeconds, Converter={StaticResource DurationConverter}}" />

                                <Label Grid.Column="7"  
                       Text="{Binding BitRate, StringFormat='{0} kbps'}"                                
                       ToolTipProperties.Text="{Binding FileSize,Converter={StaticResource FileSizeConverter}}" />

                                <Label Text="{Binding FileFormat}" Grid.Column="8"
                       ToolTipProperties.Text="{Binding FilePath, StringFormat='File Path {0}'}"/>
                                <Label Text="{Binding DatesPlayedAndWasPlayCompleted.Count}" Grid.Column="9"/>
                            </Grid>
                        </Border>

                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>

            
        </toolkit:DockLayout>

    </toolkit:DockLayout>

    <!--Putting an image here will crash app
    <Image Source="{Binding CoverImagePath}" Grid.Column="2" WidthRequest="45"/> -->


    <!--<cm:ContextMenuContainer BackgroundColor="Red">
    <cm:ContextMenuContainer.MenuItems >
        <cm:ContextMenuItem Text="Action 1" />
        <cm:ContextMenuItem Text="Action 2"/>
    </cm:ContextMenuContainer.MenuItems>

    <cm:ContextMenuContainer.Content >
        <Label Text="Yo!" />
    </cm:ContextMenuContainer.Content>
</cm:ContextMenuContainer>-->

    <!--
        <mdc:ExtendedFAB IconData="{Static icon:Material.Add}" Text="add">
            <mdc:ExtendedFAB.ContextMenu>
                <mdc:ContextMenu>
                    <mdc:MenuItem Text="Action 1" />
                    <mdc:MenuItem Text="Action 2"/>
                </mdc:ContextMenu>
            </mdc:ExtendedFAB.ContextMenu>
        </mdc:ExtendedFAB>
        <mdc:FAB IconData="{Static icon:Material.Add}"/>
        <mdc:Chip IconData="{Static icon:Material.Filter}" Text="filter"/>
        <mdc:ComboBox Style="{DynamicResource FilledComboBoxStyle}" FontColor="Red" LabelFontColor="Blue">
            <mdc:MenuItem Text="item 1" />
            <mdc:MenuItem Text="item 2" />
        </mdc:ComboBox>
        <mdc:ComboBox Style="{DynamicResource OutlinedComboBoxStyle}">
            <mdc:MenuItem Text="item 1" />
            <mdc:MenuItem Text="item 2" />
        </mdc:ComboBox>

        <mdc:TextField/>
-->
</uranium:UraniumContentPage>