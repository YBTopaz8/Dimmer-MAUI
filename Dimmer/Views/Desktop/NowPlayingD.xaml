<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Desktop.NowPlayingD"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
            xmlns:converters="clr-namespace:Dimmer_MAUI.Utilities.TypeConverters"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
            xmlns:m="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
            xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
            xmlns:models="clr-namespace:Dimmer_MAUI.Utilities.Services.Models"     
             xmlns:cw="clr-namespace:Dimmer_MAUI.Views.CustomViews"
             xmlns:cv="clr-namespace:Dimmer_MAUI.Views.Mobile.CustomViewsM"
            x:Name="myPage"
             Shell.NavBarIsVisible="False"
             Shell.TabBarIsVisible="False">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>
            <converters:BoolToImageConverter x:Key="BoolToImage"/>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
            <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter"/>

            <MenuFlyout x:Key="LyricsContentMenu">
              
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Download Song Cover" Command="{Binding FetchSongCoverImageCommand}"/>
                <MenuFlyoutItem Text="Show File in Folder" Command="{Binding OpenSongFolderCommand}"/>
                
            </MenuFlyout>


        </ResourceDictionary>
    </ContentPage.Resources>
    <toolkit:DockLayout x:Name="dockPan">
        <cw:MediaPlaybackControlsView toolkit:DockLayout.DockPosition="Bottom"
                                      x:Name="MediaPlayBackCW"/>

        <Grid FlyoutBase.ContextFlyout="{StaticResource LyricsContentMenu}" 
              x:Name="NowPlayingGrid">
            <Grid.Effects>
                <uranium:BlurEffect AccentOpacity="0.7"/>
            </Grid.Effects>
            <Image Source="{Binding TemporarilyPickedSong.CoverImagePath}" Opacity="0.05"
                   Aspect="AspectFill"/>
            <toolkit:DockLayout Margin="50">
                <VerticalStackLayout toolkit:DockLayout.DockPosition="Left" Margin="10"
                                     WidthRequest="250" >
                    <toolkit:AvatarView ImageSource="{Binding TemporarilyPickedSong.CoverImagePath}" 
                            WidthRequest="250" HeightRequest="250" BorderWidth="0" CornerRadius="25"/>
                    <Label Text="{Binding TemporarilyPickedSong.ArtistName}"
                           FontSize="13" TextColor="Grey"/>
                    <Label Text="{Binding TemporarilyPickedSong.Title}"
                           FontSize="16"/>
                    <Image WidthRequest="20" HorizontalOptions="Start" IsVisible="{Binding TemporarilyPickedSong.HasSyncedLyrics}">
                        <Image.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Check}" Color="DarkSlateBlue"/>
                        </Image.Source>
                    </Image>

                </VerticalStackLayout>

                <material:TabView TabPlacement="Top" ColumnSpacing="10" x:Name="TabV" 
                   SelectedTabChanged="TabV_SelectedTabChanged" >
                    <!--<material:TabView.GestureRecognizers>
                <SwipeGestureRecognizer Direction="Left" Swiped="SwipeGestureRecognizer_Swiped"/>
            </material:TabView.GestureRecognizers>-->
                    <material:TabView.TabHeaderItemTemplate>
                        <DataTemplate>
                            <Button Margin="2,0" Text="{Binding Title}" Command="{Binding Command}">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button" Binding="{Binding IsSelected}" Value="True">
                                        <Setter Property="BackgroundColor" Value="DarkSlateBlue" />
                                        <Setter Property="TextColor" Value="White" />

                                    </DataTrigger>
                                    <DataTrigger TargetType="Button" Binding="{Binding IsSelected}" Value="False">
                                        <Setter Property="BackgroundColor" Value="#111111" />
                                        <Setter Property="TextColor" Value="Gray" />

                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                        </DataTemplate>
                    </material:TabView.TabHeaderItemTemplate>
                    <material:TabItem Title="Lyrics" x:Name="Lyr">
                        <material:TabItem.ContentTemplate>
                            <DataTemplate>
                                <cw:SyncedLyricsView />
                            </DataTemplate>
                        </material:TabItem.ContentTemplate>
                    </material:TabItem>


                    <material:TabItem Title="Edit Tags">
                        <material:TabItem.ContentTemplate>
                            <DataTemplate>
                                <cw:EditableSongTagsView />
                            </DataTemplate>
                        </material:TabItem.ContentTemplate>
                    </material:TabItem>

                    <material:TabItem Title="Stats">
                        <material:TabItem.ContentTemplate>
                            <DataTemplate>
                                <cv:SongStatView/>
                            </DataTemplate>
                        </material:TabItem.ContentTemplate>
                    </material:TabItem>

                    <material:TabItem Title="Fetch Lyrics">
                        <material:TabItem.ContentTemplate>
                            <DataTemplate>
                                <cw:FetchLyricsResultsView />
                            </DataTemplate>
                        </material:TabItem.ContentTemplate>
                    </material:TabItem>
                </material:TabView>
            
            </toolkit:DockLayout>
        </Grid>

    </toolkit:DockLayout>
</ContentPage>



<!--<HorizontalStackLayout HorizontalOptions="Start" >
                    
                    <ImageButton BackgroundColor="Transparent" Command="{Binding DecreaseVolumeCommand}">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Volume_down}"/>
                        </ImageButton.Source>
                    </ImageButton>

                    <Slider Value="{Binding VolumeSliderValue}" x:Name="VolumeSlider" MinimumTrackColor="DarkSlateBlue"  
                    DragCompletedCommand="{Binding ChangeVolumeCommand}" WidthRequest="120" Margin="0,5"
                        Minimum="0" Maximum="1" VerticalOptions="Center"/>

                    <ImageButton BackgroundColor="Transparent" Command="{Binding IncreaseVolumeCommand}">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Volume_up}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </HorizontalStackLayout>-->