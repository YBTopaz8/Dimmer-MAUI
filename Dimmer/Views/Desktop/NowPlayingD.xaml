<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Dimmer_MAUI.Views.Desktop.NowPlayingD"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
            xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer.Utilities"
            xmlns:m="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
            xmlns:vm="clr-namespace:Dimmer_MAUI.ViewModels"
            xmlns:models="clr-namespace:Dimmer.Models;assembly=Dimmer.Models"     
             xmlns:cw="clr-namespace:Dimmer_MAUI.Views.CustomViews"
            x:DataType="vm:HomePageVM"
            x:Name="myPage"
             Shell.NavBarIsVisible="False"
             Shell.TabBarIsVisible="False">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter"/>
            <converters:BytesToMegabytesConverter x:Key="FileSizeConverter"/>
            <converters:BytesArrayToImageSource x:Key="BytesToImageConverter"/>
            <converters:BoolToImageConverter x:Key="BoolToImage"/>
            <converters:BoolToInverseConverter x:Key="BoolToInverse"/>
            <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter"/>

            <MenuFlyout x:Key="LyricsContentMenu">
                <MenuFlyoutItem Text="Show Synced Lyrics" Command="{Binding SwitchViewNowPlayingPageCommand}">
                    <MenuFlyoutItem.CommandParameter>
                        <x:Int32>0</x:Int32>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Fetch Lyrics Results" Command="{Binding SwitchViewNowPlayingPageCommand}">
                    <MenuFlyoutItem.CommandParameter>
                        <x:Int32>1</x:Int32>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Song Details" Command="{Binding SwitchViewNowPlayingPageCommand}">
                    <MenuFlyoutItem.CommandParameter>
                        <x:Int32>2</x:Int32>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Edit Song Details" Command="{Binding SwitchViewNowPlayingPageCommand}">
                    <MenuFlyoutItem.CommandParameter>
                        <x:Int32>3</x:Int32>
                    </MenuFlyoutItem.CommandParameter>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Download Song Cover" Command="{Binding FetchSongCoverImageCommand}"/>
                <MenuFlyoutItem Text="Show File in Folder" Command="{Binding OpenSongFolderCommand}"/>
            </MenuFlyout>

            <Style TargetType="ImageButton">
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="BorderColor" Value="Transparent"/>
                <Setter Property="WidthRequest" Value="50"/>
                <Setter Property="HeightRequest" Value="45"/>
            </Style>

        </ResourceDictionary>
    </ContentPage.Resources>
    <toolkit:DockLayout x:Name="dockPan">

        <cw:MediaPlaybackControlsView toolkit:DockLayout.DockPosition="Bottom"
                                      x:Name="MediaPlayBackCW"/>
        <Grid FlyoutBase.ContextFlyout="{StaticResource LyricsContentMenu}" 
              x:Name="NowPlayingGrid">
            <Grid.Effects>
                <uranium:BlurEffect AccentOpacity="0.7"/>
            </Grid.Effects>
            <Image Source="{Binding TemporarilyPickedSong.CoverImagePath}" Opacity="0.05"
                   Aspect="AspectFill"/>
            <toolkit:DockLayout Margin="50">
                <VerticalStackLayout toolkit:DockLayout.DockPosition="Left" Margin="10"
                                     WidthRequest="250" >
                    <toolkit:AvatarView ImageSource="{Binding TemporarilyPickedSong.CoverImagePath}" 
                            WidthRequest="250" HeightRequest="250" BorderWidth="0" CornerRadius="25"/>
                    <Label Text="{Binding TemporarilyPickedSong.ArtistName}"
                           FontSize="13" TextColor="Grey"/>
                    <Label Text="{Binding TemporarilyPickedSong.Title}"
                           FontSize="16"/>
                    <Image WidthRequest="20" HorizontalOptions="Start" IsVisible="{Binding TemporarilyPickedSong.HasSyncedLyrics}">
                        <Image.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialRound.Check}" Color="DarkSlateBlue"/>
                        </Image.Source>
                    </Image>

                </VerticalStackLayout>
                
                <!--<toolkit:DockLayout IsVisible="{Binding CurrentViewIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=0}"
                                     toolkit:DockLayout.DockPosition="Top" x:Name="SyncedLyricsView">
                    <CollectionView ItemsSource="{Binding SynchronizedLyrics}" SelectionChanged="LyricsColView_SelectionChanged" toolkit:DockLayout.DockPosition="Top"
                HorizontalOptions="Fill" IsVisible="{Binding SynchronizedLyrics, Converter={x:StaticResource EmptyStringToMsg}}"
                SelectionMode="Single" x:Name="LyricsColView" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor" Value="Red"/>
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="models:LyricPhraseModel">
                                <Border Stroke="Transparent" >
                                    <Label Text="{Binding Text}" Margin="0,5" 
                       HorizontalTextAlignment="Center" 
                       FontSize="15" WidthRequest="800"/>
                                </Border>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                    
                    <ScrollView HeightRequest="200"
                IsVisible="{Binding TemporarilyPickedSong, Converter={x:StaticResource EmptyStringToMsg}}">
                        <Label Text="{Binding TemporarilyPickedSong.UnSyncLyrics, Converter={x:StaticResource EmptyStringToMsg}}" 
               HorizontalTextAlignment="Center" Padding="10"
               LineBreakMode="WordWrap"/>

                    </ScrollView>

                </toolkit:DockLayout>-->
                

                    <cw:SyncedLyricsView IsVisible="{Binding CurrentViewIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=0}"
                                         />
                    <cw:FetchLyricsResultsView IsVisible="{Binding CurrentViewIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=1}" 
                        />
                    <cw:SongTagsView IsVisible="{Binding CurrentViewIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=2}"
                        />
                    <cw:EditableSongTagsView IsVisible="{Binding CurrentViewIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=3}"
                        x:Name="EditableSongsTagsV" />

                
            </toolkit:DockLayout>

        </Grid>

    </toolkit:DockLayout>
</ContentPage>



<!--<HorizontalStackLayout HorizontalOptions="Start" >
                    
                    <ImageButton BackgroundColor="Transparent" Command="{Binding DecreaseVolumeCommand}">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Volume_down}"/>
                        </ImageButton.Source>
                    </ImageButton>

                    <Slider Value="{Binding VolumeSliderValue}" x:Name="VolumeSlider" MinimumTrackColor="DarkSlateBlue"  
                    DragCompletedCommand="{Binding ChangeVolumeCommand}" WidthRequest="120" Margin="0,5"
                        Minimum="0" Maximum="1" VerticalOptions="Center"/>

                    <ImageButton BackgroundColor="Transparent" Command="{Binding IncreaseVolumeCommand}">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="MaterialRound" Glyph="{x:Static m:MaterialTwoTone.Volume_up}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </HorizontalStackLayout>-->