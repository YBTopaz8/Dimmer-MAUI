<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Dimmer.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
    xmlns:dimmSearch="clr-namespace:Dimmer.Data.ModelView.DimmerSearch;assembly=Dimmer"
    xmlns:dx="http://schemas.devexpress.com/maui"
    xmlns:dxc="http://schemas.devexpress.com/maui"
    xmlns:lang="clr-namespace:Dimmer.Resources.Localization;assembly=Dimmer"
    xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
    xmlns:model="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
    xmlns:modellive="clr-namespace:Dimmer.DimmerLive.Models;assembly=Dimmer"
    xmlns:models="clr-namespace:Dimmer.DimmerLive.Models;assembly=Dimmer"
    xmlns:modelsDb="clr-namespace:Dimmer.Data.Models;assembly=Dimmer"
    xmlns:navDrawer="clr-namespace:Syncfusion.Maui.Toolkit.NavigationDrawer;assembly=Syncfusion.Maui.Toolkit"
    xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:tql="clr-namespace:Dimmer.DimmerSearch.TQL;assembly=Dimmer"
    xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
    xmlns:vm="clr-namespace:Dimmer.ViewModels"
    x:Name="myPage"
    Title="Settings"
    x:DataType="vm:BaseViewModelAnd"
    BackgroundColor="{AppThemeBinding Dark=#1e1e1e,
                                      Light=White}"
    Shell.FlyoutBehavior="Disabled"
    Shell.NavBarIsVisible="False"
    Shell.TabBarIsVisible="False">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="dx:TextEdit">
                <Setter Property="HelpTextColor" Value="{AppThemeBinding Light=Black, Dark=White}" />
            </Style>
            <Style TargetType="Grid">
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{AppThemeBinding Light=Black, Dark=White}" />
                <Setter Property="FontSize" Value="18" />
            </Style>
            <Style TargetType="StackLayout">
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
            <Style TargetType="dx:DXButton">
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <dx:SafeKeyboardAreaView>

        <Grid BackgroundColor="{AppThemeBinding Dark=#1e1e1e, Light=White}" RowDefinitions="Auto, *">
            <VerticalStackLayout Grid.Row="0">

                <Label HorizontalOptions="Center" Text="{Binding LatestAppLog.Log}" />

                <ProgressBar x:Name="MyProgressBar" IsVisible="False" />
                <Label x:Name="MyProgressLabel" />
            </VerticalStackLayout>

            <syncf:SfTabView Grid.Row="1" SelectedIndex="{Binding LoginViewModel.SelectedIndex}">
                <syncf:SfTabItem Header="Login" IsVisible="False">
                    <syncf:SfTabItem.Content>
                        <ScrollView x:Name="TabA">
                            <VerticalStackLayout
                                Padding="30"
                                Spacing="20"
                                VerticalOptions="Start">

                                <Label
                                    FontAttributes="Bold"
                                    FontFamily="AleySans"
                                    FontSize="35"
                                    HorizontalOptions="Center"
                                    Text="Dimmer Live" />


                                <Image
                                    HeightRequest="250"
                                    Source="{Binding LoginViewModel.CurrentUser.ProfileImageFile.Url}"
                                    WidthRequest="250" />

                                <ImageButton
                                    Command="{Binding LoginViewModel.PickImageFromDeviceCommand}"
                                    HeightRequest="30"
                                    Source="edit.png"
                                    WidthRequest="30" />
                                <Button Command="{Binding LoginViewModel.LogoutCommand}" Text="Logout" />


                                <FlexLayout JustifyContent="SpaceBetween">
                                    <VerticalStackLayout>
                                        <Label Text="Username" />
                                        <Label Text="Email" />
                                        <Label Text="Date Joined" />
                                        <Label Text="Photo Path" />
                                    </VerticalStackLayout>

                                    <VerticalStackLayout>
                                        <Label Text="{Binding LoginViewModel.CurrentUser.Username}" />
                                        <Label Text="{Binding LoginViewModel.CurrentUser.Email}" />
                                        <Label Text="{Binding LoginViewModel.CurrentUser.CreatedAt}" />
                                        <Label Text="{Binding LoginViewModel.CurrentUser.ProfileImagePath}" />

                                    </VerticalStackLayout>
                                </FlexLayout>

                                <!--  Error Message Display  -->
                                <Label
                                    HorizontalOptions="Center"
                                    IsVisible="{Binding LoginViewModel.ErrorMessage, Converter={converters:CountToVisibilityConverter}}"
                                    Text="{Binding LoginViewModel.ErrorMessage}"
                                    TextColor="Red" />
                                <VerticalStackLayout IsVisible="{Binding LoginViewModel.IsAuthenticated, Converter={converters:BoolToInverseConverter}}">

                                    <!--  Input Fields  -->
                                    <Entry
                                        IsEnabled="{Binding LoginViewModel.IsBusy, Converter={converters:BoolToInverseConverter}}"
                                        Placeholder="Username"
                                        Text="{Binding LoginViewModel.CurrentUser.Username}" />
                                    <Entry
                                        IsEnabled="{Binding LoginViewModel.IsBusy, Converter={converters:BoolToInverseConverter}}"
                                        Placeholder="Email (for registration/reset)"
                                        Text="{Binding LoginViewModel.Email}" />
                                    <Entry
                                        IsEnabled="{Binding LoginViewModel.IsBusy, Converter={converters:BoolToInverseConverter}}"
                                        IsPassword="True"
                                        Placeholder="Password"
                                        Text="{Binding LoginViewModel.Password}" />

                                    <ActivityIndicator IsRunning="{Binding LoginViewModel.IsBusy}" IsVisible="{Binding LoginViewModel.IsBusy}" />

                                    <!--  Action Buttons  -->
                                    <Grid ColumnDefinitions="*,*" ColumnSpacing="10">
                                        <Button
                                            Grid.Column="0"
                                            Command="{Binding LoginViewModel.LoginCommand}"
                                            IsEnabled="{Binding IsBusy, Converter={converters:BoolToInverseConverter}}"
                                            Text="Login" />
                                        <Button
                                            Grid.Column="1"
                                            Command="{Binding LoginViewModel.RegisterCommand}"
                                            IsEnabled="{Binding IsBusy, Converter={converters:BoolToInverseConverter}}"
                                            Text="Register" />
                                    </Grid>

                                    <Button
                                        Command="{Binding LoginViewModel.ForgotPasswordCommand}"
                                        HorizontalOptions="Center"
                                        IsEnabled="{Binding IsBusy, Converter={converters:BoolToInverseConverter}}"
                                        Text="Forgot Password?" />

                                </VerticalStackLayout>
                            </VerticalStackLayout>
                        </ScrollView>
                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>

                <syncf:SfTabItem Header="Conversations" IsVisible="False">
                    <syncf:SfTabItem.Content>
                        <Grid RowDefinitions="*, Auto">
                            <!--  List of Conversations  -->
                            <CollectionView
                                Grid.Row="0"
                                EmptyView="No Convos"
                                ItemsSource="{Binding DimmerLiveViewModel.Conversations}"
                                SelectedItem="{Binding DimmerLiveViewModel.SelectedConversation}"
                                SelectionMode="Single">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:ChatConversation">
                                        <Border
                                            Margin="5"
                                            Padding="10"
                                            StrokeShape="RoundRectangle 8">
                                            <Label FontSize="Medium" Text="{Binding Name}" />
                                            <!--  You could also bind the LastMessage here  -->
                                        </Border>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>

                            <!--  Message Display and Input for Selected Chat  -->

                        </Grid>
                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>

                <syncf:SfTabItem Header="Friends" IsVisible="False">
                    <syncf:SfTabItem.Content>
                        <CollectionView EmptyView="NO Friends" ItemsSource="{Binding DimmerLiveViewModel.Friends}">

                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:UserModelOnline">
                                    <Border Margin="5" Padding="10">
                                        <Label Text="{Binding Username}" />
                                    </Border>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>

                <syncf:SfTabItem Header="Requests" IsVisible="False">
                    <syncf:SfTabItem.Content>
                        <VerticalStackLayout Spacing="10">
                            <!--  Section to Send a New Request  -->
                            <Border Padding="10">
                                <VerticalStackLayout>
                                    <Label FontAttributes="Bold" Text="Send a New Friend Request" />
                                    <Entry x:Name="FriendUsernameEntry" Placeholder="Enter username" />
                                    <Button
                                        Command="{Binding DimmerLiveViewModel.SendFriendRequestCommand}"
                                        CommandParameter="{Binding Source={x:Reference FriendUsernameEntry}, Path=Text}"
                                        Text="Send Request" />
                                </VerticalStackLayout>
                            </Border>

                            <!--  List of Incoming Requests  -->
                            <Label
                                Padding="10,0"
                                FontSize="Title"
                                Text="Incoming Requests" />
                            <CollectionView ItemsSource="{Binding DimmerLiveViewModel.FriendRequests}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:FriendRequest">
                                        <Border Margin="5" Padding="10">
                                            <Grid ColumnDefinitions="*, Auto, Auto">
                                                <!--  Assumes Sender is included in the query  -->
                                                <Label
                                                    Grid.Column="0"
                                                    Text="{Binding Sender.Username}"
                                                    VerticalOptions="Center" />
                                                <Button
                                                    x:Name="AcceptBtn"
                                                    Grid.Column="1"
                                                    Clicked="AcceptBtn_Clicked"
                                                    CommandParameter="{Binding .}"
                                                    Text="Accept" />
                                                <Button
                                                    x:Name="RejectBtn"
                                                    Grid.Column="2"
                                                    Clicked="RejectBtn_Clicked"
                                                    CommandParameter="{Binding .}"
                                                    Text="Reject" />
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </VerticalStackLayout>
                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>
                <syncf:SfTabItem FontSize="24" Header="Main">

                    <syncf:SfTabItem.Content>

                        <Grid
                            Grid.Row="1"
                            Margin="10"
                            RowDefinitions="*,0.4*">

                            <dx:DXCollectionView
                                x:Name="ListOfFolders"
                                Grid.Row="0"
                                ItemsSource="{Binding FolderPaths}"
                                MaximumHeightRequest="200">
                                <dx:DXCollectionView.HeaderTemplate>
                                    <DataTemplate>
                                        <VerticalStackLayout>
                                            <Label HorizontalOptions="Center" Text="List of Folders" />
                                        </VerticalStackLayout>
                                    </DataTemplate>
                                </dx:DXCollectionView.HeaderTemplate>
                                <dx:DXCollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="x:String">
                                        <Grid ColumnDefinitions="*,*">

                                            <Label Grid.Column="0" Text="{Binding .}" />

                                            <HorizontalStackLayout Grid.Column="1" Spacing="10">
                                                <dx:DXButton
                                                    x:Name="ChangeFolder"
                                                    Clicked="ChangeFolder_Clicked"
                                                    CommandParameter="{Binding .}"
                                                    Icon="foldera.png"
                                                    IconColor="DarkSlateBlue"
                                                    IconHeight="45"
                                                    IconWidth="45"
                                                    WidthRequest="60" />

                                                <dx:DXButton
                                                    x:Name="DeleteBtn"
                                                    Clicked="DeleteBtn_Clicked"
                                                    CommandParameter="{Binding .}"
                                                    Icon="delete.png"
                                                    IconColor="DarkSlateBlue"
                                                    IconHeight="45"
                                                    IconWidth="45"
                                                    WidthRequest="60" />
                                                <dx:DXButton
                                                    x:Name="RescanFolder"
                                                    Clicked="RescanFolder_Clicked"
                                                    CommandParameter="{Binding .}"
                                                    Icon="repeat.png"
                                                    IconColor="DarkSlateBlue"
                                                    IconHeight="45"
                                                    IconWidth="45"
                                                    WidthRequest="60" />
                                            </HorizontalStackLayout>
                                        </Grid>
                                    </DataTemplate>
                                </dx:DXCollectionView.ItemTemplate>
                            </dx:DXCollectionView>
                            <VerticalStackLayout
                                Grid.Row="1"
                                BackgroundColor="Transparent"
                                Spacing="10"
                                VerticalOptions="Start">

                                <dx:DXButton
                                    Clicked="AddNewMusicFolder_Clicked"
                                    HorizontalOptions="Start"
                                    Icon="addcircle.png"
                                    IconColor="DarkSlateBlue"
                                    IconHeight="60"
                                    IconWidth="50"
                                    TextColor="{AppThemeBinding Dark=white}" />

                                <ImageButton Command="{Binding}" Source="albumm.png" />
                                <dx:DXButton
                                    x:Name="RescanLyrics"
                                    BorderColor="DarkSlateBlue"
                                    Clicked="RefreshLyrics_Clicked"
                                    Content="Rescan Lyrics"
                                    Icon="restartcircle.png"
                                    IconColor="DarkSlateBlue"
                                    IconHeight="60"
                                    IconWidth="50"
                                    TextColor="{AppThemeBinding Dark=white}" />

                            </VerticalStackLayout>
                        </Grid>


                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>


                <syncf:SfTabItem
                    FontSize="24"
                    Header="LastFM Tab"
                    TextColor="Red">
                    <syncf:SfTabItem.Content>
                        <dx:DXStackLayout Margin="10" ItemSpacing="10">
                            <FlexLayout JustifyContent="SpaceBetween">

                                <Label Text="Last FM Status: " />
                                <Editor Placeholder="UserName" Text="{Binding UserLocal.LastFMAccountInfo.Name}" />
                                <Label>
                                    <Label.Triggers>
                                        <DataTrigger
                                            Binding="{Binding IsLastfmAuthenticated}"
                                            TargetType="Label"
                                            Value="True">
                                            <Setter Property="Text" Value="Logged In" />
                                            <Setter Property="TextColor" Value="DarkSlateBlue" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding IsLastfmAuthenticated}"
                                            TargetType="Label"
                                            Value="False">
                                            <Setter Property="Text" Value="Logged Out" />
                                            <Setter Property="TextColor" Value="DarkRed" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>

                            </FlexLayout>

                            <Button Command="{Binding LogoutFromLastfmCommand}" HorizontalOptions="Start">
                                <Button.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsLastfmAuthenticated}"
                                        TargetType="Button"
                                        Value="True">
                                        <Setter Property="IsVisible" Value="True" />
                                        <Setter Property="Text" Value="Log Out" />
                                        <Setter Property="BackgroundColor" Value="DarkRed" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding IsLastfmAuthenticated}"
                                        TargetType="Button"
                                        Value="False">
                                        <Setter Property="Text" Value="Log in" />
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>

                            <Button
                                BorderWidth="2"
                                Command="{Binding LoginToLastfmCommand}"
                                HorizontalOptions="Start"
                                IsVisible="False">
                                <Button.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsLastfmAuthenticated}"
                                        TargetType="Button"
                                        Value="True">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding IsLastfmAuthenticated}"
                                        TargetType="Button"
                                        Value="False">
                                        <Setter Property="Text" Value="Log into LastFM" />
                                        <Setter Property="IsVisible" Value="True" />
                                        <Setter Property="TextColor" Value="Red" />
                                        <Setter Property="BorderColor" Value="Red" />
                                        <Setter Property="BorderWidth" Value="2" />
                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>

                            <Button
                                BorderWidth="2"
                                Command="{Binding CompleteLoginCommand}"
                                HorizontalOptions="Start"
                                IsVisible="False">
                                <Button.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsLastfmAuthenticated}"
                                        TargetType="Button"
                                        Value="True">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding IsLastfmAuthenticated}"
                                        TargetType="Button"
                                        Value="False">
                                        <Setter Property="Text" Value="Complete LastFM Connection" />
                                        <Setter Property="IsVisible" Value="True" />
                                        <Setter Property="TextColor" Value="Red" />
                                        <Setter Property="BorderColor" Value="Red" />
                                        <Setter Property="BorderWidth" Value="2" />
                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>

                            <VerticalStackLayout BackgroundColor="Transparent">
                                <VerticalStackLayout.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsLastfmAuthenticated}"
                                        TargetType="VerticalStackLayout"
                                        Value="True">
                                        <Setter Property="IsVisible" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding IsLastfmAuthenticated}"
                                        TargetType="VerticalStackLayout"
                                        Value="False">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                </VerticalStackLayout.Triggers>


                            </VerticalStackLayout>

                        </dx:DXStackLayout>

                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>

                <syncf:SfTabItem Header="OG Login">
                    <syncf:SfTabItem.Content>

                        <VerticalStackLayout>

                            <Border x:Name="LoginSignUp" StyleClass="Elevation2">

                                <syncf:SfTabView x:Name="LoginSignUpTab">
                                    <syncf:SfTabItem>
                                        <syncf:SfTabItem.Content>
                                            <VerticalStackLayout HorizontalOptions="Center" Spacing="10">
                                                <Label
                                                    FontSize="24"
                                                    HorizontalOptions="Center"
                                                    Text="Login" />
                                                <Label Text="{Binding LoginViewModel.CurrentUser.Username}" />
                                                <Label Text="{Binding LoginViewModel.CurrentUser.SessionToken}" />
                                                <Label
                                                    FontSize="16"
                                                    HorizontalOptions="Center"
                                                    Text="Please login to continue" />


                                                <Entry
                                                    x:Name="UsernameEntry"
                                                    FontSize="16"
                                                    HorizontalOptions="Fill"
                                                    Placeholder="Enter your username"
                                                    Text="{Binding LoginViewModel.Username}" />
                                                <Entry
                                                    x:Name="EmailEntry"
                                                    FontSize="16"
                                                    HorizontalOptions="Fill"
                                                    Placeholder="Enter your Email"
                                                    Text="{Binding LoginViewModel.Email}" />


                                                <Entry
                                                    x:Name="PasswordEntry"
                                                    FontSize="16"
                                                    HorizontalOptions="Fill"
                                                    IsPassword="True"
                                                    Placeholder="Enter your password"
                                                    Text="{Binding LoginViewModel.Password}" />

                                                <HorizontalStackLayout HorizontalOptions="Center" Spacing="10">

                                                    <Button
                                                        Command="{Binding LoginViewModel.LoginCommand}"
                                                        FontSize="16"
                                                        HorizontalOptions="Center"
                                                        Text="Login" />


                                                    <Button
                                                        Command="{Binding LoginViewModel.RegisterCommand}"
                                                        FontSize="16"
                                                        HorizontalOptions="Center"
                                                        Text="Sign Up" />

                                                </HorizontalStackLayout>



                                            </VerticalStackLayout>
                                        </syncf:SfTabItem.Content>
                                    </syncf:SfTabItem>
                                </syncf:SfTabView>

                            </Border>




                        </VerticalStackLayout>


                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>
            </syncf:SfTabView>

        </Grid>
    </dx:SafeKeyboardAreaView>


</ContentPage>