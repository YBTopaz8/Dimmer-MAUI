<?xml version="1.0" encoding="utf-8" ?>
<Shell x:Class="Dimmer.AppShell" xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:utils="clr-namespace:Dimmer.Utils"
       xmlns:views="clr-namespace:Dimmer.Views" xmlns:viewsStats="clr-namespace:Dimmer.Views.Stats"
      
    xmlns:converters="clr-namespace:Dimmer.Utilities.TypeConverters;assembly=Dimmer"
        xmlns:syncf="http://schemas.syncfusion.com/maui/toolkit"
xmlns:vm="clr-namespace:Dimmer.ViewModels"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
       
    xmlns:models="clr-namespace:Dimmer.Data.ModelView;assembly=Dimmer"
       Shell.FlyoutWidth="450"
    xmlns:dx="http://schemas.devexpress.com/maui"
       Shell.TabBarBackgroundColor="{AppThemeBinding Dark=#1e1e1e,
                                                     Light=White}"
       Shell.TabBarTitleColor="{AppThemeBinding Dark=White,
                                                Light=DarkSlateBlue}"
       Shell.TabBarUnselectedColor="{AppThemeBinding Dark=White,
                                                     Light=Grey}"
       x:DataType="vm:BaseViewModelAnd">

    <Shell.Resources>
    <converters:DurationConverterFromMsToTimeSpan x:Key="DurationConverter" />
    <converters:BytesToMegabytesConverter x:Key="FileSizeConverter" />
    <converters:BytesArrayToImageSource x:Key="BytesToImageConverter" />
    <converters:BoolToInverseConverter x:Key="BoolToInverse" />
    <converters:IndexToVisibilityConverter x:Key="IndexToVisibilityConverter" />
    <converters:DateTimeToLocalDateConverter x:Key="DateTimeConverter" />
    <converters:DateTimeToLocalTimeConverter x:Key="DateTimeToTimeConverter" />
    <converters:BoolToYesNoConverter x:Key="BoolToYesNo" />
    <converters:VolumeConverter x:Key="VolConverter" />
    <ResourceDictionary />
    </Shell.Resources>
    <Shell.FlyoutContent>
        <Grid RowDefinitions="auto,*" BackgroundColor="{AppThemeBinding Dark=#1e1e1e}">
            <VerticalStackLayout Grid.Row="0" Margin="10,5">
                <Label Text="{Binding LatestAppLog.Log}"/>
            </VerticalStackLayout>
            <syncf:SfTabView Grid.Row="1" x:Name="ShellTabView" BackgroundColor="{AppThemeBinding Light=#999999}"
                         SelectionChanging="ShellTabView_SelectionChanging"
                         SelectedIndex="{Binding ShellTabIndex}"
                         EnableSwiping="True" TabBarHeight="90"
                             
                             TabBarPlacement="Bottom">

                <syncf:SfTabItem x:FieldModifier="Public" x:Name="MediaControlsView">
                      <syncf:SfTabItem.Content>

                        <ScrollView x:Name="SideBarScrollView">



                            <VerticalStackLayout
            HorizontalOptions="Start"
            x:Name="BottomLeft" Spacing="10"
            Grid.Row="1" BackgroundColor="Transparent"
            Margin="10,10">
                                <HorizontalStackLayout HorizontalOptions="End" IsVisible="True">
                                    <ImageButton 
                                        HeightRequest="65"
                                        WidthRequest="65"
                                        Source="more1.png"
                                        x:Name="MoreIcon"
                                        BackgroundColor="Transparent"
                                        
                                        Clicked="MoreIcon_Clicked">
                                      
                                    </ImageButton>

                                    <syncf:SfChip
                                        ImageSize="50"
                                        WidthRequest="60"
                                        x:Name="ShowPlaylistHistory"
                                        Clicked="ShowPlaylistHistory_Clicked"
                                        ImageSource="playlista.png"/>
                                    <dx:DXButton Icon="settings.png" 
                                          WidthRequest="55"
                                                 IconColor="DarkSlateBlue"
                                          Clicked="SettingsNavChips_ChipClicked">
                                    </dx:DXButton>
                                </HorizontalStackLayout>

                                <Border StrokeShape="RoundRectangle 15"
                Margin="0,0"  Grid.Row="1"
                StrokeThickness="3"
                  x:Name="NavTab">
                                    <Border.Triggers>



                                        <DataTrigger
Binding="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
TargetType="Border"
Value="true">
                                            <Setter Property="Stroke" Value="{Binding CurrentPlaySongDominantColor}" />
                                        </DataTrigger>



                                    </Border.Triggers>
                                    <Grid>
                                        <ImageButton Source="{Binding CurrentPlayingSongView.CoverImagePath}"
      Opacity="0.3" Aspect="AspectFit" x:Name="NowPlayingSong"
                                             WidthRequest="300"
                                             HeightRequest="300"
                                             Clicked="NowPlayingSong_Clicked">

                                            <ImageButton.Triggers>
                                                <DataTrigger TargetType="ImageButton" Binding="{Binding AllLines, Converter={converters:IsEnumerableNullOrEmptyConverter}}"
                                                 Value="True">
                                                    <Setter Property="Opacity" Value="1"/>
                                                </DataTrigger>

                                            </ImageButton.Triggers>
                                        </ImageButton>


                                        <VerticalStackLayout
x:Name="LyricsSection"
HorizontalOptions="Center" VerticalOptions="Center"
IsVisible="True">
                                            <VerticalStackLayout.Triggers>

                                                <DataTrigger
        Binding="{Binding CurrentPlayingSongView.HasSyncedLyrics}"
        TargetType="VerticalStackLayout"
        Value="true">
                                                    <Setter Property="IsVisible" Value="True" />
                                                </DataTrigger>

                                                <DataTrigger
        Binding="{Binding AllLines.Count, Converter={converters:CollectionSizeToVisibility}}"
        TargetType="VerticalStackLayout"
        Value="false">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>
                                            </VerticalStackLayout.Triggers>

                                            <Label
    FontSize="15"
    HorizontalTextAlignment="Center"
    Opacity="0.7"
    Text="{Binding PreviousLine.Text}" />
                                            <Grid 
    HorizontalOptions="Center">
                                                <Border BackgroundColor="{AppThemeBinding Dark=#1e1e1e}" Opacity="0.7" />
                                                <Label
        Margin="10"
        FontAttributes="Bold"
        FontSize="36"
    HorizontalTextAlignment="Center"
        Opacity="1"
        Text="{Binding  CurrentLine.Text}"
        TextColor="DarkSlateBlue">
                                                    <Label.Triggers />
                                                </Label>
                                            </Grid>
                                            <Label
    FontSize="17"
    HorizontalTextAlignment="Center"
    Opacity="0.7"
    Text="{Binding NextLine.Text}" />
                                        </VerticalStackLayout>


                                    </Grid>

                                </Border>
                                <Label HorizontalOptions="Center"
        HorizontalTextAlignment="Justify" LineBreakMode="WordWrap"
                 FontAttributes="Bold"
     Text="{Binding CurrentPlayingSongView.Title}" FontSize="21">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped"
                                                          />
                                    </Label.GestureRecognizers>
                                   

                                </Label>
                                <HorizontalStackLayout HorizontalOptions="Center">
                                    <Border
                                        x:Name="AddFavoriteRatingToSong"
                                        
>
                                        <Border.GestureRecognizers>
                                            <PointerGestureRecognizer
                                                PointerReleased="AddFavoriteRatingToSongPtrGest_PointerReleased"
                                                PointerReleasedCommandParameter="{Binding
                                                CurrentPlayingSongView}" 
                                                x:Name="AddFavoriteRatingToSongPtrGest"
                                                />
                                        </Border.GestureRecognizers>
                                        <Grid >


                                            <ImageButton
                        BackgroundColor="Transparent"
                        Command="{Binding AddFavoriteRatingToSongCommand}"
                                    
                                    
                        Source="heart.png"
                        WidthRequest="58">
                                                <ImageButton.Triggers>
                                                    <DataTrigger
                                Binding="{Binding CurrentPlayingSongView.IsFavorite}"
                                TargetType="ImageButton"
                                Value="False">
                                                        <Setter Property="Source" Value="heartbroken.png" />
                                                        <Setter Property="ToolTipProperties.Text" Value="Not Favorite" />

                                                    </DataTrigger>
                                                    <DataTrigger
                                Binding="{Binding CurrentPlayingSongView.IsFavorite}"
                                TargetType="ImageButton"
                                Value="True">
                                                        <Setter Property="Source" Value="heartlock.png" />
                                                        <Setter Property="ToolTipProperties.Text" Value="Favorite" />


                                                    </DataTrigger>
                                                </ImageButton.Triggers>
                                            </ImageButton>
                                            <Label 
                                                HorizontalOptions="Center"
                                                Text="{Binding CurrentPlayingSongView.NumberOfTimesFaved}"/>

                                        </Grid>
                                    </Border>
                                    <Button WidthRequest="60" BackgroundColor="{Binding CurrentPlaySongDominantColor}"  TextColor="{AppThemeBinding Light=Black,Dark=White}" BorderWidth="0"
                        Text="{Binding CurrentPlayingSongView.PlayCompletedCount, StringFormat='{0}'}" 
                       Opacity="0.6"     Clicked="NavigateToSelectedSongPageContextMenuAsync"/>

                                </HorizontalStackLayout>

                                <Button 
                            Padding="10"
                            HorizontalOptions="Start" 
x:Name="QuickFilterBtn"
                                BackgroundColor="Transparent"
                                BorderWidth="1"
                                Clicked="QuickFilterBtn_Clicked"
                                Text="{Binding CurrentPlayingSongView.ArtistName}" FontSize="16">

                                    <Button.GestureRecognizers>
                                        <PointerGestureRecognizer
                     PointerPressedCommandParameter="{Binding CurrentPlayingSongView.OtherArtistsName}"
                     PointerReleased="QuickFilterGest_PointerReleased"
                     PointerReleasedCommandParameter="artist" />
                                    </Button.GestureRecognizers>
                                </Button>

                                <syncf:SfEffectsView BackgroundColor="Transparent"
                          Margin="2,0"   TouchUpCommandParameter="{Binding CurrentPlayingSongView.AlbumName}"
                            TouchDownCommandParameter="album"
                            TouchDown="Quickalbumsearch_Clicked">

                                    <Label HorizontalOptions="Start"
                                BackgroundColor="Transparent"
                              
                               TextTransform="Lowercase"
                                
                   Text="{Binding CurrentPlayingSongView.AlbumName}" 
                   FontSize="16"
                                   >



                                    </Label>

                                </syncf:SfEffectsView>


                                <HorizontalStackLayout
                       x:Name="MediaBtns"
                       Grid.Row="0" Margin="0"
                       HeightRequest="50"
                       Spacing="10" 
                       VerticalOptions="Center">

                                    <HorizontalStackLayout.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="HeightRequest" 
                                                    Value="50"/>
                                            <Setter Property="WidthRequest" 
                                                    Value="60"/>
                                        </Style>
                                    </HorizontalStackLayout.Resources>


                                    <dx:DXButton IconColor="{Binding CurrentPlaySongDominantColor}"
         WidthRequest="60"
         BorderThickness="0"
BackgroundColor="{Binding CurrentPlaySongDominantColor}"
                                                 Background="Transparent"
Command="{Binding ToggleShuffleCommand}"
Icon="shuffle.png"
ToolTipProperties.Text="{Binding IsShuffleActive, Converter={converters:BoolToYesNoConverter}, StringFormat='Is Shuffle Active? : {0}'}"
         
StyleClass="MediaBtnChip">
                                        

                                            
                                        <dx:DXButton.Triggers>
                                            <DataTrigger
        Binding="{Binding IsShuffleActive}"
        TargetType="dx:DXButton"
        Value="True">
                                                <Setter Property="BorderColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                                <Setter Property="BorderThickness" Value="2" />

                                            </DataTrigger>
                                        </dx:DXButton.Triggers>
                                    </dx:DXButton>


                                    <dx:DXButton
                           x:Name="SkipPrev"
                           
                           IconColor="{Binding CurrentPlaySongDominantColor}"
                           
BackgroundColor="{Binding CurrentPlaySongDominantColor}"
Background="Transparent"
                    BorderThickness="0"
                           Command="{Binding PreviousTrackCommand}"
                           Icon="skipprevious.png"
                           StyleClass="MediaBtnChip" >
                                        
                                    </dx:DXButton>
                                    <dx:DXButton
                           x:Name="PlayPauseBtn" BorderThickness="0"
                           IconColor="{Binding CurrentPlaySongDominantColor}"
                           BackgroundColor="{Binding CurrentPlaySongDominantColor}"
                           
Background="{Binding CurrentPlaySongDominantColor}"
                           Command="{Binding PlayPauseToggleCommand}"
                         Icon="play.png"
                           StyleClass="MediaBtnChip">
                                       
                                        <dx:DXButton.Triggers>
                                            <DataTrigger
                                   Binding="{Binding IsPlaying}"
                                   TargetType="dx:DXButton"
                                   Value="true">
                                                <Setter Property="Icon" Value="pause.png" />
                                            </DataTrigger>

                                            <DataTrigger
                                   Binding="{Binding IsPlaying}"
                                   TargetType="dx:DXButton"
                                   Value="false">
                                                <Setter Property="Icon" Value="play.png" />
                                            </DataTrigger>
                                        </dx:DXButton.Triggers>
                                    </dx:DXButton>
                                    <dx:DXButton BorderThickness="0"
                           x:Name="SkipNext"
                           IconColor="{Binding CurrentPlaySongDominantColor}"
                        
BackgroundColor="{Binding CurrentPlaySongDominantColor}"   
                           
Background="Transparent"
                           Command="{Binding NextTrackCommand}"
                           Icon="skipnext.png"
                           StyleClass="MediaBtnChip" >
                                      
                                    </dx:DXButton>


                                    <dx:DXButton
         WidthRequest="60"
                                        IconColor="{Binding CurrentPlaySongDominantColor}"

BackgroundColor="{Binding CurrentPlaySongDominantColor}"
Background="Transparent"
Command="{Binding ToggleRepeatModeCommand}"
Icon="repeat.png"
StyleClass="MediaBtnChip"
ToolTipProperties.Text="{Binding CurrentRepeatMode, StringFormat='Current Repeat Mode : {0}'}">
                                       
                                        <dx:DXButton.Triggers>
                                            <DataTrigger
        Binding="{Binding CurrentRepeatMode}"
        TargetType="dx:DXButton"
        Value="0">
                                                <Setter Property="BorderColor" Value="{Binding CurrentPlaySongDominantColor}" />
                                                <Setter Property="BorderThickness" Value="1" />


                                            </DataTrigger>
                                            <DataTrigger
        Binding="{Binding CurrentRepeatMode}"
        TargetType="dx:DXButton"
        Value="1">
                                                <Setter Property="BorderColor" Value="LightBlue" />
                                                <Setter Property="BorderThickness" Value="2" />

                                            </DataTrigger>
                                            <DataTrigger
        Binding="{Binding CurrentRepeatMode}"
        TargetType="dx:DXButton"
        Value="2">
                                                <Setter Property="BorderColor" Value="Orange" />
                                                <Setter Property="BorderThickness" Value="2" />

                                            </DataTrigger>
                                            <DataTrigger
        Binding="{Binding CurrentRepeatMode}"
        TargetType="dx:DXButton"
        Value="3">
                                                <Setter Property="BorderColor" Value="Red" />
                                                <Setter Property="BorderThickness" Value="2" />

                                            </DataTrigger>
                                        </dx:DXButton.Triggers>
                                    </dx:DXButton>
                                </HorizontalStackLayout>
                                <dx:DXSlider
x:Name="TrackProgressSlider" 
Grid.Column="1"
                                    TapReleased="TrackProgressSlider_TapReleased"
MaxValue="{Binding CurrentPlayingSongView.DurationInSeconds}"
MinValue="0" 
Value="{Binding CurrentTrackPositionSeconds}" />
                                <HorizontalStackLayout Spacing="10" HorizontalOptions="Center">
                                    <Label HorizontalTextAlignment="Start"
                       TextColor="{AppThemeBinding Light=DarkSlateblue,Dark=white}"
                                Grid.Column="0" Text="{Binding CurrentTrackPositionSeconds, Converter={StaticResource DurationConverter}}" >
                                        <Label.Triggers>
                                            <DataTrigger Binding="{Binding IsPlaying}"
                  Value="True"
                  TargetType="Label">
                                                <Setter Property="TextColor" Value="DarkSlateBlue"/>
                                                <Setter Property="FontAttributes" Value="Bold"/>
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>

                                    <Label Grid.Column="2"  HorizontalTextAlignment="Start"
                                   BackgroundColor="Transparent"
                                   Text="{Binding CurrentPlayingSongView.DurationInSeconds, Converter={StaticResource DurationConverter}}" />

                                </HorizontalStackLayout>

                            </VerticalStackLayout>
                        </ScrollView>
                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>

                <syncf:SfTabItem Header="Play Back Queue"  ImageSource="playlistminimalistic3.png">
                    <Grid RowDefinitions="auto,*">
                        <dx:DXCollectionView TapCommand="{Binding }"
                            ItemsSource="{Binding PlaybackQueue}"
                            Grid.Row="1">
                            <dx:DXCollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:SongModelView">
                                    <syncf:SfEffectsView
                                        TouchUp="SelectedSongChip_TouchUp" 
                                        TouchUpCommandParameter="{Binding .}"
                                        x:Name="SelectedSongChip">
                                        <VerticalStackLayout HorizontalOptions="Start">
                                            <Label Text="{Binding Title}" FontSize="21"/>
                                            <Label Text="{Binding ArtistName}"
                                                   FontAttributes="Italic"/>

                                        </VerticalStackLayout>
                                    </syncf:SfEffectsView>
                                </DataTemplate>
                            </dx:DXCollectionView.ItemTemplate>

                        </dx:DXCollectionView>
                    </Grid>
                </syncf:SfTabItem>
                <syncf:SfTabItem Header="AudioSection" ImageSource="devices.png">
                    <syncf:SfTabItem.Content>
                        <Grid RowDefinitions="auto,*" RowSpacing="20">
                            <VerticalStackLayout Grid.Row="0">
                                <Label Text="{Binding AudioDevices.Count , StringFormat='{0} Output Devices'}"
                                   HorizontalTextAlignment="Center" FontSize="20"/>
                            </VerticalStackLayout>

                            <CollectionView ItemsSource="{Binding AudioDevices}" Grid.Row="1"
                                        SelectedItem="{Binding SelectedAudioDevice}"
                                        >
                                <CollectionView.ItemTemplate>
                                    <DataTemplate  x:DataType="models:AudioOutputDevice">
                                        <Border>

                                            <Border.Triggers>
                                                <DataTrigger Binding="{Binding IsDefaultDevice}"
                                                         Value="True" TargetType="Border">
                                                    <Setter Property="Stroke" Value="DarkSlateBlue"/>
                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsDefaultDevice}"
                                                         Value="False" TargetType="Border">
                                                    <Setter Property="Stroke" Value="White"/>
                                                    <Setter Property="StrokeThickness" Value="0"/>
                                                </DataTrigger>
                                            </Border.Triggers>


                                            <VerticalStackLayout Spacing="10" Margin="10">
                                                <Label Text="Active Device" 
HorizontalTextAlignment="Center" FontSize="24" TextColor="DarkSlateBlue"
                                               IsVisible="{Binding IsDefaultDevice}
                                          "/>

                                                <Label Text="{Binding Name}"/>
                                                <Label Text="{Binding ProductName}"/>
                                                <Label Text="{Binding IconString}"/>
                                                <Label Text="{Binding Volume, StringFormat='Volume : {0:n2}%'}"/>




                                                <Button Grid.Column="1" Text="Select Device" 
                                                Clicked="SetPrefdevice_Clicked"
                                                IsVisible="{Binding IsDefaultDevice, Converter={converters:BoolToInverseConverter}}"
                                             CommandParameter="{Binding .}"   Command="{Binding SetPreferredAudioDeviceViewCommand,Source={RelativeSource AncestorType={x:Type vm:BaseViewModelAnd}}}"  />
                                            </VerticalStackLayout>
                                        </Border>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>

                        </Grid>

                    </syncf:SfTabItem.Content>
                </syncf:SfTabItem>
                

            </syncf:SfTabView>

        </Grid>
    </Shell.FlyoutContent>


    <Shell.FlyoutFooter>
        <Grid RowDefinitions="*,*" BackgroundColor="{AppThemeBinding Light=#999999,Dark=#1e1e1e}"
             x:Name="TopLeft" >
            <Grid.GestureRecognizers>
                <PointerGestureRecognizer
                    
                    PointerReleased="TogglePanelClicked"
                   />
            </Grid.GestureRecognizers>
            <VerticalStackLayout Grid.Row="0" Spacing="10" Margin="5">
                <ImageButton Source="headphonesround.png" 
                             x:Name="ViewDeviceAudio"
                             Clicked="ViewDeviceAudio_Clicked"/>
                <Button Command="{Binding ToggleAppThemeCommand}"
                                    Grid.Row="0" TextColor="{AppThemeBinding Light=Black,Dark=WHite}"
                                    FontAttributes="Bold"
                                    FontSize="13"
                    HorizontalOptions="Center"
                                   BackgroundColor="Transparent" Text="{Binding IsDarkModeOn}" >
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsDarkModeOn}"
                                     Value="True">
                            <Setter Property="Text" Value="Dark Mode On"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding IsDarkModeOn}"
                                     Value="False">
                            <Setter Property="Text" Value="Light Mode On"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>

                <syncf:SfEffectsView
 
                    

                    x:Name="ViewNPQ"  
                    BackgroundColor="Transparent"
ToolTipProperties.Text="{Binding CurrentPlaybackQuery, StringFormat='Current Query {0}'}"
                    >
                    <syncf:SfEffectsView.GestureRecognizers>
                        <PointerGestureRecognizer 
                            PointerReleased="NowPlayingQueueGestRecog_PointerReleased" x:Name="NowPlayingQueueGestRecog"
                            />
                    </syncf:SfEffectsView.GestureRecognizers>
                    <Label Text="View Now Playing Queue"/>
                </syncf:SfEffectsView>


                <Grid ColumnDefinitions="auto,*" ColumnSpacing="10">

                    <Label Text="Volume"/>
                    <syncf:SfEffectsView 
                        x:Name="VolumeSlider"
                        Loaded="SfEffectsView_Loaded"
                        Unloaded="SfEffectsView_Unloaded"
                                         >

                    </syncf:SfEffectsView>
                    <Slider
                        Grid.Column="1" 
                        Minimum="0"
                        Loaded="VolumeSlider_Loaded"
                        Unloaded="VolumeSlider_Unloaded"
                        MinimumTrackColor="DarkSlateBlue"
                        ThumbColor="{Binding CurrentPlaySongDominantColor}"
                        Value="{Binding DeviceVolumeLevel}"
                        />

                </Grid>
            </VerticalStackLayout>

        </Grid>

    </Shell.FlyoutFooter>
    <ShellContent
        Title="Home"
        ContentTemplate="{DataTemplate views:HomePage}"
        Route="MainPage" />
</Shell>